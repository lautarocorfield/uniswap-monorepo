{"id":"bc3509e31629aa174eb391389ebc4279","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"contracts/SimpleSwap.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\n/**\n * @title SimpleSwap\n * @notice A simplified Uniswap-like token swap and liquidity pool implementation\n * @dev This contract allows users to swap between two tokens and provide liquidity\n */\ncontract SimpleSwap is ERC20 {\n    using SafeERC20 for IERC20;\n    \n    /// @notice Address of the first token in the trading pair\n    address public token0;\n    \n    /// @notice Address of the second token in the trading pair\n    address public token1;\n\n\n    /**\n     * @title SwapData\n     * @notice Contains all necessary data for token swap operations\n     * @dev Used to group swap-related parameters and avoid stack too deep errors\n     * @member tokenIn Address of the token being swapped (input token)\n     * @member tokenOut Address of the token to be received (output token)\n     * @member amountIn Exact amount of input tokens to be swapped\n     * @member amountOut Expected amount of output tokens to receive\n     * @member reserveIn Current reserve amount of the input token in the pool\n     * @member reserveOut Current reserve amount of the output token in the pool\n     * @custom:usage Used in swapExactTokensForTokens and related internal functions\n     */\n    struct SwapData {\n        address tokenIn;\n        address tokenOut;\n        uint256 amountIn;\n        uint256 amountOut;\n        uint256 reserveIn;\n        uint256 reserveOut;\n    }\n\n\n    /**\n     * @title RemoveLiqData\n     * @notice Contains basic data for liquidity removal operations\n     * @dev Simplified struct for removeLiquidity function parameters\n     * @member tokenA Address of the first token in the pair\n     * @member tokenB Address of the second token in the pair\n     * @custom:usage Used in removeLiquidity and related internal functions\n     */\n    struct RemoveLiqData {\n        address tokenA;\n        address tokenB;\n    }\n\n\n    /**\n     * @notice Emitted when liquidity is added to the pool\n     * @dev Records all relevant details of a liquidity provision event\n     * @param provider Address that provided the liquidity (indexed for filtering)\n     * @param amountA Amount of tokenA deposited\n     * @param amountB Amount of tokenB deposited\n     * @param liquidity Amount of LP tokens minted to the provider\n     * @custom:examples \n     * - When adding 100 TokenA and 200 TokenB, emits (provider, 100, 200, sqrt(100*200))\n     */\n    event LiquidityAdded(\n        address indexed provider,\n        uint256 amountA,\n        uint256 amountB,\n        uint256 liquidity\n    );\n    \n\n    /**\n     * @notice Emitted when liquidity is removed from the pool\n     * @dev Records all relevant details of a liquidity withdrawal event\n     * @param provider Address that removed the liquidity (indexed for filtering)\n     * @param amountA Amount of tokenA withdrawn\n     * @param amountB Amount of tokenB withdrawn\n     * @param liquidity Amount of LP tokens burned from the provider\n     * @custom:examples \n     * - When removing 50% of LP tokens, emits (provider, reserveA/2, reserveB/2, LP/2)\n     */\n    event LiquidityRemoved(\n        address indexed provider,\n        uint256 amountA,\n        uint256 amountB,\n        uint256 liquidity\n    );\n\n    /**\n     * @dev Initializes the contract with the two tokens to be traded\n     * @param _token0 Address of the first token in the pair\n     * @param _token1 Address of the second token in the pair\n     */\n    constructor(address _token0, address _token1) ERC20(\"Liquidity\", \"LIQ\") {\n        token0 = _token0;\n        token1 = _token1;\n    }\n\n    /**\n     * @notice Adds liquidity to the pool\n     * @dev Mints liquidity tokens proportional to the deposited amounts\n     * @param tokenA Address of first token in the pair\n     * @param tokenB Address of second token in the pair\n     * @param amountADesired Desired amount of tokenA to deposit\n     * @param amountBDesired Desired amount of tokenB to deposit\n     * @param amountAMin Minimum amount of tokenA to deposit (slippage protection)\n     * @param amountBMin Minimum amount of tokenB to deposit (slippage protection)\n     * @param to Address that will receive the liquidity tokens\n     * @param deadline Unix timestamp after which the transaction will revert\n     * @return amountA Actual amount of tokenA deposited\n     * @return amountB Actual amount of tokenB deposited\n     * @return liquidity Amount of liquidity tokens minted\n     */\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint256 amountADesired,\n        uint256 amountBDesired,\n        uint256 amountAMin,\n        uint256 amountBMin,\n        address to,\n        uint256 deadline\n    ) external returns (uint256 amountA, uint256 amountB, uint256 liquidity) {\n        address _token0 = token0;\n        address _token1 = token1;\n        require(deadline >= block.timestamp, \"Deadline passed\");\n        require((tokenA == _token0 && tokenB == _token1) || (tokenA == _token1 && tokenB == _token0), \"Invalid tokens\");\n        uint256 balanceA = IERC20(tokenA).balanceOf(address(this));\n        uint256 balanceB = IERC20(tokenB).balanceOf(address(this));\n        \n        (amountA, amountB) = _calculateOptimalAmounts(\n            amountADesired,\n            amountBDesired,\n            amountAMin,\n            amountBMin,\n            balanceA,\n            balanceB\n        );\n        \n        _executeDeposit(tokenA, tokenB, amountA, amountB, to);\n        \n        liquidity = Math.sqrt(amountA * amountB);\n\n        emit LiquidityAdded(msg.sender, amountA, amountB, liquidity);\n    }\n\n    /**\n     * @notice Calculates the optimal token amounts for liquidity deposit\n     * @dev Determines the correct ratio of tokens to deposit based on current reserves\n     * @param amountADesired Desired amount of token A to deposit\n     * @param amountBDesired Desired amount of token B to deposit\n     * @param amountAMin Minimum acceptable amount of token A (slippage protection)\n     * @param amountBMin Minimum acceptable amount of token B (slippage protection)\n     * @param reserveA Current reserve amount of token A in the pool\n     * @param reserveB Current reserve amount of token B in the pool\n     * @return amountA Optimal/actual amount of token A to deposit\n     * @return amountB Optimal/actual amount of token B to deposit\n     * @custom:implements \n     * - For empty pool: uses desired amounts directly\n     * - For existing pool: calculates optimal ratio based on current reserves\n     * - Validates amounts meet minimum requirements (slippage protection)\n     */\n    function _calculateOptimalAmounts(\n        uint256 amountADesired,\n        uint256 amountBDesired,\n        uint256 amountAMin,\n        uint256 amountBMin,\n        uint256 reserveA,\n        uint256 reserveB\n    ) private pure returns (uint256 amountA, uint256 amountB) {\n        if (reserveA == 0 && reserveB == 0) {\n            return (amountADesired, amountBDesired);\n        }\n        \n        uint256 amountBOptimal = (amountADesired * reserveB) / reserveA;\n        if (amountBOptimal <= amountBDesired) {\n            require(amountBOptimal >= amountBMin, \"Insufficient B amount\");\n            return (amountADesired, amountBOptimal);\n        }\n        \n        uint256 amountAOptimal = (amountBDesired * reserveA) / reserveB;\n        require(amountAOptimal >= amountAMin, \"Insufficient A amount\");\n        return (amountAOptimal, amountBDesired);\n    }\n\n    /**\n     * @notice Executes the token transfers and mints liquidity tokens\n     * @dev Performs the actual deposit operations after amounts are calculated\n     * @param tokenA Address of first token in the pair\n     * @param tokenB Address of second token in the pair\n     * @param amountA Amount of token A to transfer\n     * @param amountB Amount of token B to transfer\n     * @param to Address that will receive the liquidity tokens\n     * @custom:actions\n     * - Transfers amountA of tokenA from sender to contract\n     * - Transfers amountB of tokenB from sender to contract\n     * - Mints sqrt(amountA*amountB) liquidity tokens to 'to' address\n     * @custom:security \n     * - Uses SafeERC20 for secure token transfers\n     * - Requires prior approval of tokens by sender\n     */\n    function _executeDeposit(\n        address tokenA,\n        address tokenB,\n        uint256 amountA,\n        uint256 amountB,\n        address to\n    ) private {\n        IERC20(tokenA).safeTransferFrom(msg.sender, address(this), amountA);\n        IERC20(tokenB).safeTransferFrom(msg.sender, address(this), amountB);\n        _mint(to, Math.sqrt(amountA * amountB));\n    }\n\n    /**\n     * @notice Removes liquidity from the pool\n     * @dev Burns liquidity tokens and returns the underlying assets\n     * @param tokenA Address of first token in the pair\n     * @param tokenB Address of second token in the pair\n     * @param liquidity Amount of liquidity tokens to burn\n     * @param amountAMin Minimum amount of tokenA to receive (slippage protection)\n     * @param amountBMin Minimum amount of tokenB to receive (slippage protection)\n     * @param to Address that will receive the underlying tokens\n     * @param deadline Unix timestamp after which the transaction will revert\n     * @return amountA Actual amount of tokenA received\n     * @return amountB Actual amount of tokenB received\n     */\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint256 liquidity,\n        uint256 amountAMin,\n        uint256 amountBMin,\n        address to,\n        uint256 deadline\n    ) external returns (uint256 amountA, uint256 amountB) {\n        address _token0 = token0;\n        address _token1 = token1;\n        require(deadline >= block.timestamp, \"Deadline passed\");\n        require((tokenA == _token0 && tokenB == _token1) || (tokenA == _token1 && tokenB == _token0), \"Invalid tokens\");\n\n        RemoveLiqData memory data;\n        data.tokenA = tokenA;\n        data.tokenB = tokenB;\n        \n        (amountA, amountB) = _calculateAmounts(liquidity, data.tokenA, data.tokenB);\n        _validateAmounts(amountA, amountB, amountAMin, amountBMin);\n        _executeRemoveLiquidity(msg.sender, to, liquidity, amountA, amountB, data.tokenA, data.tokenB);\n\n        emit LiquidityRemoved(msg.sender, amountA, amountB, liquidity);\n    }\n\n    /**\n     * @notice Calculates the proportional token amounts for a given liquidity share\n     * @dev Computes the amount of each token that corresponds to the liquidity share being withdrawn\n     * @param liquidity Amount of liquidity tokens being burned/redeemed\n     * @param tokenA Address of the first token in the pair\n     * @param tokenB Address of the second token in the pair\n     * @return amountA Proportional amount of tokenA that the liquidity represents\n     * @return amountB Proportional amount of tokenB that the liquidity represents\n     * @custom:math (liquidity * balanceA) / totalSupply for each token\n     * @custom:security \n     * - Reads actual token balances from the contract\n     * - Uses precise division to maintain proper ratios\n     * - Returns amounts proportional to the pool's current reserves\n     */\n    function _calculateAmounts(uint256 liquidity, address tokenA, address tokenB) private view returns (uint256 amountA, uint256 amountB) {\n        uint256 balanceA = IERC20(tokenA).balanceOf(address(this));\n        uint256 balanceB = IERC20(tokenB).balanceOf(address(this));\n        uint256 supply = totalSupply();\n        return ((liquidity * balanceA) / supply, (liquidity * balanceB) / supply);\n    }\n\n    /**\n     * @notice Validates that the received amounts meet minimum requirements\n     * @dev Ensures the amounts satisfy the user's specified minimums (slippage protection)\n     * @param amountA Actual amount of tokenA being received\n     * @param amountB Actual amount of tokenB being received\n     * @param amountAMin Minimum acceptable amount of tokenA\n     * @param amountBMin Minimum acceptable amount of tokenB\n     * @custom:reverts With \"Insufficient A amount\" if amountA < amountAMin\n     * @custom:reverts With \"Insufficient B amount\" if amountB < amountBMin\n     * @custom:security\n     * - Protects users from front-running and excessive slippage\n     * - Should be called after calculating actual withdrawal amounts\n     */\n    function _validateAmounts(uint256 amountA, uint256 amountB, uint256 amountAMin, uint256 amountBMin) private pure {\n        require(amountA >= amountAMin, \"Insufficient A amount\");\n        require(amountB >= amountBMin, \"Insufficient B amount\");\n    }\n\n    /**\n     * @notice Executes the removal of liquidity by burning LP tokens and transferring underlying assets\n     * @dev Handles the actual token transfers when a user withdraws liquidity from the pool\n     * @param from Address from which liquidity tokens will be burned\n     * @param to Address that will receive the underlying tokens\n     * @param liquidity Amount of LP tokens to burn\n     * @param amountA Amount of tokenA to transfer to the recipient\n     * @param amountB Amount of tokenB to transfer to the recipient\n     * @param tokenA Address of the first token in the pair\n     * @param tokenB Address of the second token in the pair\n     * @custom:actions\n     * - Burns `liquidity` LP tokens from `from` address\n     * - Transfers `amountA` of tokenA to `to` address\n     * - Transfers `amountB` of tokenB to `to` address\n     * @custom:security\n     * - Requires proper authorization to burn LP tokens\n     * - Uses SafeERC20 for secure token transfers\n     * - Assumes proper validation of amounts was done before calling\n     * @custom:events\n     * - Emits Transfer event (from ERC20) when burning LP tokens\n     * - Emits LiquidityRemoved event (if defined in the contract)\n     */\n    function _executeRemoveLiquidity(\n        address from,\n        address to,\n        uint256 liquidity,\n        uint256 amountA,\n        uint256 amountB,\n        address tokenA,\n        address tokenB\n    ) private {\n        _burn(from, liquidity);\n        IERC20(tokenA).safeTransfer(to, amountA);\n        IERC20(tokenB).safeTransfer(to, amountB);\n    }\n\n    /**\n     * @notice Swaps an exact amount of input tokens for as many output tokens as possible\n     * @dev Uses the current pool reserves to determine the exchange rate\n     * @param amountIn Exact amount of input tokens to swap\n     * @param amountOutMin Minimum amount of output tokens to receive (slippage protection)\n     * @param path Array with token addresses (must be length 2 for this implementation)\n     * @param to Address that will receive the output tokens\n     * @param deadline Unix timestamp after which the transaction will revert\n     * @return amounts Array containing the input and output amounts\n     */\n    function swapExactTokensForTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external  returns (uint[] memory amounts) {\n        address _token0 = token0;\n        address _token1 = token1;\n        require(deadline >= block.timestamp, \"Deadline passed\");\n        require(path.length == 2, \"Invalid path\");        \n        SwapData memory data;\n        data.tokenIn = path[0];\n        data.tokenOut = path[1];\n        data.amountIn = amountIn;\n\n        require((data.tokenIn == _token0 && data.tokenOut == _token1) || (data.tokenIn == _token1 && data.tokenOut == _token0), \"Invalid tokens\");\n        \n        _calculateReserves(data);\n        data.amountOut = getAmountOut(data.amountIn, data.reserveIn, data.reserveOut);\n        \n        require(data.amountOut >= amountOutMin, \"Insufficient output amount\");\n        \n        _executeSwap(data, to);\n        \n        amounts = createAmountsArray(data.amountIn, data.amountOut);\n    }\n\n    /**\n     * @notice Updates the reserve amounts in the SwapData struct with current token balances\n     * @dev Reads the latest token balances from the contract and updates the reserves in memory\n     * @param data SwapData struct containing:\n     *        - tokenIn: Address of the input token\n     *        - tokenOut: Address of the output token\n     *        - reserveIn: Will be updated with current balance of input token\n     *        - reserveOut: Will be updated with current balance of output token\n     * @custom:operation\n     * - Reads tokenIn balance from contract (updates reserveIn)\n     * - Reads tokenOut balance from contract (updates reserveOut)\n     * @custom:security\n     * - Only reads state (view function)\n     * - Uses SafeERC20 for balance checks\n     * - Result is stored in memory, not storage\n     * @custom:note\n     * - Modifies the input struct in memory\n     * - Called before swap calculations to get latest reserves\n     */\n    function _calculateReserves(SwapData memory data) private view {\n        data.reserveIn = IERC20(data.tokenIn).balanceOf(address(this));\n        data.reserveOut = IERC20(data.tokenOut).balanceOf(address(this));\n    }\n\n    /**\n     * @notice Executes the token swap by transferring tokens between parties\n     * @dev Performs the actual token transfers for a swap operation\n     * @param data SwapData struct containing:\n     *        - tokenIn: Address of the input token\n     *        - tokenOut: Address of the output token\n     *        - amountIn: Amount of input tokens being swapped\n     *        - amountOut: Amount of output tokens to be received\n     * @param to Address that will receive the output tokens\n     * @custom:actions\n     * - Transfers `amountIn` of `tokenIn` from sender to this contract\n     * - Transfers `amountOut` of `tokenOut` from contract to receiver\n     * @custom:security\n     * - Uses SafeERC20 for secure token transfers\n     * - Requires prior approval of input tokens by sender\n     * - Assumes proper amount checks were done before calling\n     */\n    function _executeSwap(SwapData memory data, address to) private {\n        IERC20(data.tokenIn).safeTransferFrom(msg.sender, address(this), data.amountIn);\n        IERC20(data.tokenOut).safeTransfer(to, data.amountOut);\n    }\n\n    /**\n     * @notice Creates an amounts array for swap operations\n     * @dev Constructs a fixed-size array to return swap input/output amounts\n     * @param amountIn Exact amount of input tokens being swapped\n     * @param amountOut Calculated amount of output tokens\n     * @return amounts Fixed-size array where:\n     *         - amounts[0] = input amount (amountIn)\n     *         - amounts[1] = output amount (amountOut)\n     * @custom:usage Used to maintain compatibility with swap function return signatures\n     * @custom:note Array format matches common DEX interfaces\n     */\n    function createAmountsArray(uint256 amountIn, uint256 amountOut) private pure returns (uint[] memory amounts) {\n        amounts = new uint[](2);\n        amounts[0] = amountIn;\n        amounts[1] = amountOut;\n        return amounts;\n    }\n\n    /**\n     * @notice Returns the current price ratio between two tokens\n     * @dev Price is expressed as tokenB per tokenA, scaled by 1e18\n     * @param tokenA Address of the base token\n     * @param tokenB Address of the quote token\n     * @return price Price ratio (tokenB/tokenA) multiplied by 1e18\n     */\n    function getPrice(address tokenA, address tokenB) external view returns (uint256 price) {\n        uint256 reserveA = IERC20(tokenA).balanceOf(address(this));\n        uint256 reserveB = IERC20(tokenB).balanceOf(address(this));\n        price = (reserveB * 1e18) / reserveA;\n    }\n\n    /**\n     * @notice Calculates the amount of output tokens for a given input\n     * @dev Uses a simple constant product formula (x*y=k)\n     * @param amountIn Amount of input tokens\n     * @param reserveIn Reserve amount of input tokens\n     * @param reserveOut Reserve amount of output tokens\n     * @return amount Calculated amount of output tokens\n     */\n    function getAmountOut(\n        uint amountIn, \n        uint reserveIn, \n        uint reserveOut\n    ) public pure returns (uint256 amount) {\n        uint256 numerator = amountIn * reserveOut;\n        uint256 denominator = amountIn + reserveIn;\n        require(denominator > 0, \"No division\");\n        amount = (numerator * 1e18) / denominator;\n    }\n}"},"contracts/TokenA.sol":{"content":"// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.27;\n\n// Import ERC20 implementation from OpenZeppelin\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n// Import Ownable contract from OpenZeppelin for ownership management\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title TokenA\n * @dev Implementation of a custom ERC20 token with minting functionality\n * The contract is Ownable, meaning only the owner can mint new tokens.\n */\ncontract TokenA is ERC20, Ownable {\n    \n    /**\n     * @dev Constructor that sets the initial token distribution and ownership\n     * @param recipient Address to receive the initial minted tokens\n     * @param initialOwner Address that will own the contract\n     */\n    constructor(address recipient, address initialOwner)\n        ERC20(\"tokenA\", \"TOKA\") // Set the name and symbol of the token\n        Ownable(initialOwner)   // Set the initial owner of the contract\n    {\n        // Mint 1,000,000,000,000,000,000 tokens (1 token with 18 decimals) to the recipient\n        _mint(recipient, 1000000000000000000 * 10 ** decimals());\n    }\n\n    /**\n     * @dev Mint new tokens to a specified address. Only callable by the contract owner.\n     * @param to Address that will receive the minted tokens\n     * @param amount Amount of tokens to mint\n     */\n    function mint(address to, uint256 amount) public onlyOwner {\n        // Mint the specified amount of tokens to the provided address\n        _mint(to, amount);\n    }\n}"},"contracts/TokenB.sol":{"content":"// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.27;\n\n// Import ERC20 implementation from OpenZeppelin\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n// Import Ownable contract from OpenZeppelin for ownership management\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title TokenB\n * @dev Implementation of a custom ERC20 token with minting functionality\n * This contract is Ownable, meaning only the owner has the right to mint new tokens.\n */\ncontract TokenB is ERC20, Ownable {\n    \n    /**\n     * @dev Constructor that sets up the initial token distribution and contract ownership\n     * @param recipient The address that will receive the initial minted tokens\n     * @param initialOwner The address that will be set as the owner of the contract\n     */\n    constructor(address recipient, address initialOwner)\n        ERC20(\"tokenB\", \"TOKB\")  // Set the token's name (\"tokenB\") and symbol (\"TOKB\")\n        Ownable(initialOwner)     // Set the initial owner of the contract\n    {\n        // Mint 1,000,000,000,000,000,000 tokens (1 token with 18 decimals) to the recipient\n        _mint(recipient, 1000000000000000000 * 10 ** decimals());\n    }\n\n    /**\n     * @dev Mint new tokens to a specified address. Only callable by the owner of the contract.\n     * @param to The address that will receive the minted tokens\n     * @param amount The amount of tokens to mint\n     */\n    function mint(address to, uint256 amount) public onlyOwner {\n        // Mint the specified amount of tokens to the provided address\n        _mint(to, amount);\n    }\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1487],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1488,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1487,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1487],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[229],"IERC165":[1551],"IERC20":[967]},"id":230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":238,"src":"133:36:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"141:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":234,"src":"170:38:1","symbolAliases":[{"foreign":{"id":152,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"178:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":155,"name":"IERC20","nameLocations":["590:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"590:6:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"590:6:1"},{"baseName":{"id":157,"name":"IERC165","nameLocations":["598:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1551,"src":"598:7:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"598:7:1"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"210:357:1","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":229,"linearizedBaseContracts":[229,1551,967],"name":"IERC1363","nameLocation":"578:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"1148:370:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":168,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"to","nameLocation":"1556:2:1","nodeType":"VariableDeclaration","scope":168,"src":"1548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"value","nameLocation":"1568:5:1","nodeType":"VariableDeclaration","scope":168,"src":"1560:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"1593:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:1"},"scope":229,"src":"1523:76:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"1605:453:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":180,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:1","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"2096:2:1","nodeType":"VariableDeclaration","scope":180,"src":"2088:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"value","nameLocation":"2108:5:1","nodeType":"VariableDeclaration","scope":180,"src":"2100:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"data","nameLocation":"2130:4:1","nodeType":"VariableDeclaration","scope":180,"src":"2115:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"2154:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":177,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:1"},"scope":229,"src":"2063:97:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"2166:453:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"from","nameLocation":"2661:4:1","nodeType":"VariableDeclaration","scope":192,"src":"2653:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"2675:2:1","nodeType":"VariableDeclaration","scope":192,"src":"2667:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"2687:5:1","nodeType":"VariableDeclaration","scope":192,"src":"2679:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"2712:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:1"},"scope":229,"src":"2624:94:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"2724:536:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"from","nameLocation":"3302:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3294:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"to","nameLocation":"3316:2:1","nodeType":"VariableDeclaration","scope":206,"src":"3308:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"value","nameLocation":"3328:5:1","nodeType":"VariableDeclaration","scope":206,"src":"3320:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"data","nameLocation":"3350:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3335:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"3374:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:1"},"scope":229,"src":"3265:115:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"3386:390:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:1","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"spender","nameLocation":"3813:7:1","nodeType":"VariableDeclaration","scope":216,"src":"3805:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"value","nameLocation":"3830:5:1","nodeType":"VariableDeclaration","scope":216,"src":"3822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":216,"src":"3855:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":213,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:1"},"scope":229,"src":"3781:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3867:478:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":228,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:1","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"spender","nameLocation":"4382:7:1","nodeType":"VariableDeclaration","scope":228,"src":"4374:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"value","nameLocation":"4399:5:1","nodeType":"VariableDeclaration","scope":228,"src":"4391:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"data","nameLocation":"4421:4:1","nodeType":"VariableDeclaration","scope":228,"src":"4406:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":222,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:1"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"4445:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:1"},"scope":229,"src":"4350:101:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":230,"src":"568:3885:1","usedErrors":[],"usedEvents":[901,910]}],"src":"107:4347:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[1551]},"id":234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":231,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":234,"sourceUnit":1552,"src":"132:59:2","symbolAliases":[{"foreign":{"id":232,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"140:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[967]},"id":238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":235,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":238,"sourceUnit":968,"src":"131:49:3","symbolAliases":[{"foreign":{"id":236,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[374],"IERC20Errors":[279],"IERC721Errors":[327]},"id":375,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":239,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"138:141:4","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":279,"linearizedBaseContracts":[279],"name":"IERC20Errors","nameLocation":"290:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"309:309:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":249,"name":"ERC20InsufficientBalance","nameLocation":"629:24:4","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"sender","nameLocation":"662:6:4","nodeType":"VariableDeclaration","scope":249,"src":"654:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"balance","nameLocation":"678:7:4","nodeType":"VariableDeclaration","scope":249,"src":"670:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"needed","nameLocation":"695:6:4","nodeType":"VariableDeclaration","scope":249,"src":"687:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:4"},"src":"623:80:4"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"709:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":254,"name":"ERC20InvalidSender","nameLocation":"872:18:4","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"899:6:4","nodeType":"VariableDeclaration","scope":254,"src":"891:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:4"},"src":"866:41:4"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"913:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":259,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:4","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:4","nodeType":"VariableDeclaration","scope":259,"src":"1104:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:4"},"src":"1077:45:4"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"1128:345:4","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":268,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:4","nodeType":"ErrorDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"spender","nameLocation":"1519:7:4","nodeType":"VariableDeclaration","scope":268,"src":"1511:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:4","nodeType":"VariableDeclaration","scope":268,"src":"1528:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"needed","nameLocation":"1555:6:4","nodeType":"VariableDeclaration","scope":268,"src":"1547:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:4"},"src":"1478:85:4"},{"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"1569:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":273,"name":"ERC20InvalidApprover","nameLocation":"1754:20:4","nodeType":"ErrorDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"approver","nameLocation":"1783:8:4","nodeType":"VariableDeclaration","scope":273,"src":"1775:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:4"},"src":"1748:45:4"},{"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"1799:195:4","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":278,"name":"ERC20InvalidSpender","nameLocation":"2005:19:4","nodeType":"ErrorDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"spender","nameLocation":"2033:7:4","nodeType":"VariableDeclaration","scope":278,"src":"2025:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:4"},"src":"1999:43:4"}],"scope":375,"src":"280:1764:4","usedErrors":[249,254,259,268,273,278],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"2046:143:4","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":327,"linearizedBaseContracts":[327],"name":"IERC721Errors","nameLocation":"2200:13:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":281,"nodeType":"StructuredDocumentation","src":"2220:219:4","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":285,"name":"ERC721InvalidOwner","nameLocation":"2450:18:4","nodeType":"ErrorDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":283,"mutability":"mutable","name":"owner","nameLocation":"2477:5:4","nodeType":"VariableDeclaration","scope":285,"src":"2469:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":282,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:4"},"src":"2444:40:4"},{"documentation":{"id":286,"nodeType":"StructuredDocumentation","src":"2490:132:4","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":290,"name":"ERC721NonexistentToken","nameLocation":"2633:22:4","nodeType":"ErrorDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:4","nodeType":"VariableDeclaration","scope":290,"src":"2656:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:4"},"src":"2627:46:4"},{"documentation":{"id":291,"nodeType":"StructuredDocumentation","src":"2679:289:4","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":299,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:4","nodeType":"ErrorDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"sender","nameLocation":"3008:6:4","nodeType":"VariableDeclaration","scope":299,"src":"3000:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:4","nodeType":"VariableDeclaration","scope":299,"src":"3016:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"owner","nameLocation":"3041:5:4","nodeType":"VariableDeclaration","scope":299,"src":"3033:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":296,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:4"},"src":"2973:75:4"},{"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"3054:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":304,"name":"ERC721InvalidSender","nameLocation":"3217:19:4","nodeType":"ErrorDefinition","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"sender","nameLocation":"3245:6:4","nodeType":"VariableDeclaration","scope":304,"src":"3237:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:4"},"src":"3211:42:4"},{"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"3259:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":309,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:4","nodeType":"ErrorDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:4","nodeType":"VariableDeclaration","scope":309,"src":"3451:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:4"},"src":"3423:46:4"},{"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"3475:247:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":316,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:4","nodeType":"ErrorDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"operator","nameLocation":"3768:8:4","nodeType":"VariableDeclaration","scope":316,"src":"3760:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:4","nodeType":"VariableDeclaration","scope":316,"src":"3778:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:4"},"src":"3727:68:4"},{"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"3801:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":321,"name":"ERC721InvalidApprover","nameLocation":"3986:21:4","nodeType":"ErrorDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"approver","nameLocation":"4016:8:4","nodeType":"VariableDeclaration","scope":321,"src":"4008:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:4"},"src":"3980:46:4"},{"documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"4032:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":326,"name":"ERC721InvalidOperator","nameLocation":"4240:21:4","nodeType":"ErrorDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":324,"mutability":"mutable","name":"operator","nameLocation":"4270:8:4","nodeType":"VariableDeclaration","scope":326,"src":"4262:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:4"},"src":"4234:46:4"}],"scope":375,"src":"2190:2092:4","usedErrors":[285,290,299,304,309,316,321,326],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"4284:145:4","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":374,"linearizedBaseContracts":[374],"name":"IERC1155Errors","nameLocation":"4440:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"4461:361:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":339,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:4","nodeType":"ErrorDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"sender","nameLocation":"4868:6:4","nodeType":"VariableDeclaration","scope":339,"src":"4860:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"balance","nameLocation":"4884:7:4","nodeType":"VariableDeclaration","scope":339,"src":"4876:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":335,"mutability":"mutable","name":"needed","nameLocation":"4901:6:4","nodeType":"VariableDeclaration","scope":339,"src":"4893:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":337,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:4","nodeType":"VariableDeclaration","scope":339,"src":"4909:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:4"},"src":"4827:99:4"},{"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"4932:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":344,"name":"ERC1155InvalidSender","nameLocation":"5095:20:4","nodeType":"ErrorDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"sender","nameLocation":"5124:6:4","nodeType":"VariableDeclaration","scope":344,"src":"5116:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:4"},"src":"5089:43:4"},{"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"5138:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":349,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:4","nodeType":"ErrorDefinition","parameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:4","nodeType":"VariableDeclaration","scope":349,"src":"5331:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:4"},"src":"5302:47:4"},{"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"5355:256:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":356,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:4","nodeType":"ErrorDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"operator","nameLocation":"5659:8:4","nodeType":"VariableDeclaration","scope":356,"src":"5651:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"owner","nameLocation":"5677:5:4","nodeType":"VariableDeclaration","scope":356,"src":"5669:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:4"},"src":"5616:68:4"},{"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"5690:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":361,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:4","nodeType":"ErrorDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"approver","nameLocation":"5906:8:4","nodeType":"VariableDeclaration","scope":361,"src":"5898:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:4"},"src":"5869:47:4"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"5922:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":366,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:4","nodeType":"ErrorDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"operator","nameLocation":"6161:8:4","nodeType":"VariableDeclaration","scope":366,"src":"6153:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":363,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:4"},"src":"6124:47:4"},{"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"6177:280:4","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":373,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:4","nodeType":"ErrorDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:4","nodeType":"VariableDeclaration","scope":373,"src":"6494:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":368,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:4","nodeType":"VariableDeclaration","scope":373,"src":"6513:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":370,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:4"},"src":"6462:73:4"}],"scope":375,"src":"4430:2107:4","usedErrors":[339,344,349,356,361,366,373],"usedEvents":[]}],"src":"112:6426:4"},"id":4},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1487],"ERC20":[889],"IERC20":[967],"IERC20Errors":[279],"IERC20Metadata":[993]},"id":890,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":376,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":378,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":890,"sourceUnit":968,"src":"131:36:5","symbolAliases":[{"foreign":{"id":377,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"139:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":380,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":890,"sourceUnit":994,"src":"168:63:5","symbolAliases":[{"foreign":{"id":379,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"176:14:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":890,"sourceUnit":1488,"src":"232:48:5","symbolAliases":[{"foreign":{"id":381,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"240:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":384,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":890,"sourceUnit":375,"src":"281:65:5","symbolAliases":[{"foreign":{"id":383,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"289:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":386,"name":"Context","nameLocations":["1133:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1487,"src":"1133:7:5"},"id":387,"nodeType":"InheritanceSpecifier","src":"1133:7:5"},{"baseName":{"id":388,"name":"IERC20","nameLocations":["1142:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"1142:6:5"},"id":389,"nodeType":"InheritanceSpecifier","src":"1142:6:5"},{"baseName":{"id":390,"name":"IERC20Metadata","nameLocations":["1150:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":993,"src":"1150:14:5"},"id":391,"nodeType":"InheritanceSpecifier","src":"1150:14:5"},{"baseName":{"id":392,"name":"IERC20Errors","nameLocations":["1166:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":279,"src":"1166:12:5"},"id":393,"nodeType":"InheritanceSpecifier","src":"1166:12:5"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"348:757:5","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":889,"linearizedBaseContracts":[889,279,993,967,1487],"name":"ERC20","nameLocation":"1124:5:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":397,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:5","nodeType":"VariableDeclaration","scope":889,"src":"1185:53:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":396,"keyName":"account","keyNameLocation":"1201:7:5","keyType":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":395,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":403,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:5","nodeType":"VariableDeclaration","scope":889,"src":"1245:83:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":402,"keyName":"account","keyNameLocation":"1261:7:5","keyType":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":401,"keyName":"spender","keyNameLocation":"1288:7:5","keyType":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":400,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":405,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:5","nodeType":"VariableDeclaration","scope":889,"src":"1335:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":407,"mutability":"mutable","name":"_name","nameLocation":"1385:5:5","nodeType":"VariableDeclaration","scope":889,"src":"1370:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":406,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":409,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:5","nodeType":"VariableDeclaration","scope":889,"src":"1396:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":408,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":425,"nodeType":"Block","src":"1638:57:5","statements":[{"expression":{"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":417,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1648:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":418,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"1656:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":420,"nodeType":"ExpressionStatement","src":"1648:13:5"},{"expression":{"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":421,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"1671:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":422,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"1681:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":424,"nodeType":"ExpressionStatement","src":"1671:17:5"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"1425:152:5","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":426,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"name_","nameLocation":"1608:5:5","nodeType":"VariableDeclaration","scope":426,"src":"1594:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":411,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:5","nodeType":"VariableDeclaration","scope":426,"src":"1615:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":413,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:5"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"1638:0:5"},"scope":889,"src":"1582:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[980],"body":{"id":434,"nodeType":"Block","src":"1820:29:5","statements":[{"expression":{"id":432,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1837:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":431,"id":433,"nodeType":"Return","src":"1830:12:5"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"1701:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":435,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:5","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[],"src":"1773:2:5"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"1805:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":429,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:5"},"scope":889,"src":"1760:89:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[986],"body":{"id":443,"nodeType":"Block","src":"2024:31:5","statements":[{"expression":{"id":441,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"2041:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":440,"id":442,"nodeType":"Return","src":"2034:14:5"}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"1855:102:5","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":444,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:5","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[],"src":"1977:2:5"},"returnParameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":444,"src":"2009:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":438,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:5"},"scope":889,"src":"1962:93:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[992],"body":{"id":452,"nodeType":"Block","src":"2744:26:5","statements":[{"expression":{"hexValue":"3138","id":450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:5","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":449,"id":451,"nodeType":"Return","src":"2754:9:5"}]},"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"2061:622:5","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":453,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:5","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[],"src":"2705:2:5"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":453,"src":"2737:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":447,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:5"},"scope":889,"src":"2688:82:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[916],"body":{"id":461,"nodeType":"Block","src":"2891:36:5","statements":[{"expression":{"id":459,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"2908:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":458,"id":460,"nodeType":"Return","src":"2901:19:5"}]},"documentation":{"id":454,"nodeType":"StructuredDocumentation","src":"2776:49:5","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":462,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2839:11:5","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"2850:2:5"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":462,"src":"2882:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"2882:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2881:9:5"},"scope":889,"src":"2830:97:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[924],"body":{"id":474,"nodeType":"Block","src":"3059:42:5","statements":[{"expression":{"baseExpression":{"id":470,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"3076:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":472,"indexExpression":{"id":471,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3086:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3076:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":469,"id":473,"nodeType":"Return","src":"3069:25:5"}]},"documentation":{"id":463,"nodeType":"StructuredDocumentation","src":"2933:47:5","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":475,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2994:9:5","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"account","nameLocation":"3012:7:5","nodeType":"VariableDeclaration","scope":475,"src":"3004:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"3004:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3003:17:5"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"3050:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3049:9:5"},"scope":889,"src":"2985:116:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[934],"body":{"id":498,"nodeType":"Block","src":"3371:103:5","statements":[{"assignments":[486],"declarations":[{"constant":false,"id":486,"mutability":"mutable","name":"owner","nameLocation":"3389:5:5","nodeType":"VariableDeclaration","scope":498,"src":"3381:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":485,"name":"address","nodeType":"ElementaryTypeName","src":"3381:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":489,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":487,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"3397:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3397:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3381:28:5"},{"expression":{"arguments":[{"id":491,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"3429:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":492,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"3436:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"3440:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":490,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"3419:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3419:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":495,"nodeType":"ExpressionStatement","src":"3419:27:5"},{"expression":{"hexValue":"74727565","id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3463:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":484,"id":497,"nodeType":"Return","src":"3456:11:5"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"3107:184:5","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":499,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3305:8:5","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"to","nameLocation":"3322:2:5","nodeType":"VariableDeclaration","scope":499,"src":"3314:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"3314:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"value","nameLocation":"3334:5:5","nodeType":"VariableDeclaration","scope":499,"src":"3326:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":479,"name":"uint256","nodeType":"ElementaryTypeName","src":"3326:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3313:27:5"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":499,"src":"3365:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":482,"name":"bool","nodeType":"ElementaryTypeName","src":"3365:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3364:6:5"},"scope":889,"src":"3296:178:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[944],"body":{"id":515,"nodeType":"Block","src":"3621:51:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":509,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3638:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":511,"indexExpression":{"id":510,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"3650:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":513,"indexExpression":{"id":512,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"3657:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":508,"id":514,"nodeType":"Return","src":"3631:34:5"}]},"documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"3480:47:5","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":516,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3541:9:5","nodeType":"FunctionDefinition","parameters":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"owner","nameLocation":"3559:5:5","nodeType":"VariableDeclaration","scope":516,"src":"3551:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":501,"name":"address","nodeType":"ElementaryTypeName","src":"3551:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":504,"mutability":"mutable","name":"spender","nameLocation":"3574:7:5","nodeType":"VariableDeclaration","scope":516,"src":"3566:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":503,"name":"address","nodeType":"ElementaryTypeName","src":"3566:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3550:32:5"},"returnParameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":516,"src":"3612:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:9:5"},"scope":889,"src":"3532:140:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[954],"body":{"id":539,"nodeType":"Block","src":"4058:107:5","statements":[{"assignments":[527],"declarations":[{"constant":false,"id":527,"mutability":"mutable","name":"owner","nameLocation":"4076:5:5","nodeType":"VariableDeclaration","scope":539,"src":"4068:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"4068:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":530,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":528,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"4084:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4084:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4068:28:5"},{"expression":{"arguments":[{"id":532,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"4115:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":533,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"4122:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"4131:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":531,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[780,840],"referencedDeclaration":780,"src":"4106:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4106:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"ExpressionStatement","src":"4106:31:5"},{"expression":{"hexValue":"74727565","id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4154:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":525,"id":538,"nodeType":"Return","src":"4147:11:5"}]},"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"3678:296:5","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":540,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3988:7:5","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"spender","nameLocation":"4004:7:5","nodeType":"VariableDeclaration","scope":540,"src":"3996:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"3996:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"value","nameLocation":"4021:5:5","nodeType":"VariableDeclaration","scope":540,"src":"4013:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"4013:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3995:32:5"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":540,"src":"4052:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":523,"name":"bool","nodeType":"ElementaryTypeName","src":"4052:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4051:6:5"},"scope":889,"src":"3979:186:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[966],"body":{"id":571,"nodeType":"Block","src":"4850:151:5","statements":[{"assignments":[553],"declarations":[{"constant":false,"id":553,"mutability":"mutable","name":"spender","nameLocation":"4868:7:5","nodeType":"VariableDeclaration","scope":571,"src":"4860:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":556,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":554,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"4878:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4878:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4860:30:5"},{"expression":{"arguments":[{"id":558,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"4916:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":559,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"4922:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"4931:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":557,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"4900:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4900:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":562,"nodeType":"ExpressionStatement","src":"4900:37:5"},{"expression":{"arguments":[{"id":564,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"4957:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":565,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"4963:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"4967:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":563,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"4947:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4947:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":568,"nodeType":"ExpressionStatement","src":"4947:26:5"},{"expression":{"hexValue":"74727565","id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4990:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":551,"id":570,"nodeType":"Return","src":"4983:11:5"}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"4171:581:5","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":572,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4766:12:5","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"from","nameLocation":"4787:4:5","nodeType":"VariableDeclaration","scope":572,"src":"4779:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"4779:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":545,"mutability":"mutable","name":"to","nameLocation":"4801:2:5","nodeType":"VariableDeclaration","scope":572,"src":"4793:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4793:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"value","nameLocation":"4813:5:5","nodeType":"VariableDeclaration","scope":572,"src":"4805:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"4805:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:41:5"},"returnParameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":572,"src":"4844:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":549,"name":"bool","nodeType":"ElementaryTypeName","src":"4844:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4843:6:5"},"scope":889,"src":"4757:244:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":618,"nodeType":"Block","src":"5443:231:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":582,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"5457:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5473:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5465:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"5465:7:5","typeDescriptions":{}}},"id":586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5465:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5457:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":596,"nodeType":"IfStatement","src":"5453:86:5","trueBody":{"id":595,"nodeType":"Block","src":"5477:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5525:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5517:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"5517:7:5","typeDescriptions":{}}},"id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":588,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"5498:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":594,"nodeType":"RevertStatement","src":"5491:37:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":597,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"5552:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5566:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5558:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:5","typeDescriptions":{}}},"id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5558:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5552:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":611,"nodeType":"IfStatement","src":"5548:86:5","trueBody":{"id":610,"nodeType":"Block","src":"5570:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5620:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"5612:7:5","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":603,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"5591:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5591:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":609,"nodeType":"RevertStatement","src":"5584:39:5"}]}},{"expression":{"arguments":[{"id":613,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"5651:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"5657:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"5661:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":612,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"5643:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"5643:24:5"}]},"documentation":{"id":573,"nodeType":"StructuredDocumentation","src":"5007:362:5","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":619,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5383:9:5","nodeType":"FunctionDefinition","parameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"from","nameLocation":"5401:4:5","nodeType":"VariableDeclaration","scope":619,"src":"5393:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"5393:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"to","nameLocation":"5415:2:5","nodeType":"VariableDeclaration","scope":619,"src":"5407:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"5407:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"value","nameLocation":"5427:5:5","nodeType":"VariableDeclaration","scope":619,"src":"5419:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":578,"name":"uint256","nodeType":"ElementaryTypeName","src":"5419:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5392:41:5"},"returnParameters":{"id":581,"nodeType":"ParameterList","parameters":[],"src":"5443:0:5"},"scope":889,"src":"5374:300:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":695,"nodeType":"Block","src":"6064:1032:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":629,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6078:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6094:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6086:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"6086:7:5","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6086:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6078:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":666,"nodeType":"Block","src":"6252:362:5","statements":[{"assignments":[641],"declarations":[{"constant":false,"id":641,"mutability":"mutable","name":"fromBalance","nameLocation":"6274:11:5","nodeType":"VariableDeclaration","scope":666,"src":"6266:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":640,"name":"uint256","nodeType":"ElementaryTypeName","src":"6266:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":645,"initialValue":{"baseExpression":{"id":642,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"6288:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":644,"indexExpression":{"id":643,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6298:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6288:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6266:37:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":646,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"6321:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6335:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6321:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":656,"nodeType":"IfStatement","src":"6317:115:5","trueBody":{"id":655,"nodeType":"Block","src":"6342:90:5","statements":[{"errorCall":{"arguments":[{"id":650,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6392:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":651,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"6398:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6411:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":649,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"6367:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6367:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":654,"nodeType":"RevertStatement","src":"6360:57:5"}]}},{"id":665,"nodeType":"UncheckedBlock","src":"6445:159:5","statements":[{"expression":{"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":657,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"6552:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":659,"indexExpression":{"id":658,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6562:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6552:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":660,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"6570:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6584:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6570:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6552:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":664,"nodeType":"ExpressionStatement","src":"6552:37:5"}]}]},"id":667,"nodeType":"IfStatement","src":"6074:540:5","trueBody":{"id":639,"nodeType":"Block","src":"6098:148:5","statements":[{"expression":{"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":635,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"6214:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6230:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6214:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":638,"nodeType":"ExpressionStatement","src":"6214:21:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":668,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"6628:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6642:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6634:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:5","typeDescriptions":{}}},"id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6634:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6628:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":687,"nodeType":"Block","src":"6843:206:5","statements":[{"id":686,"nodeType":"UncheckedBlock","src":"6857:182:5","statements":[{"expression":{"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":680,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"7002:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":682,"indexExpression":{"id":681,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"7012:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7002:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"7019:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7002:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":685,"nodeType":"ExpressionStatement","src":"7002:22:5"}]}]},"id":688,"nodeType":"IfStatement","src":"6624:425:5","trueBody":{"id":679,"nodeType":"Block","src":"6646:191:5","statements":[{"id":678,"nodeType":"UncheckedBlock","src":"6660:167:5","statements":[{"expression":{"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":674,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"6791:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6807:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6791:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":677,"nodeType":"ExpressionStatement","src":"6791:21:5"}]}]}},{"eventCall":{"arguments":[{"id":690,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"7073:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":691,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"7079:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"7083:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":689,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"7064:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7064:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":694,"nodeType":"EmitStatement","src":"7059:30:5"}]},"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"5680:304:5","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":696,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5998:7:5","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"from","nameLocation":"6014:4:5","nodeType":"VariableDeclaration","scope":696,"src":"6006:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"6006:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"6028:2:5","nodeType":"VariableDeclaration","scope":696,"src":"6020:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"6020:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"value","nameLocation":"6040:5:5","nodeType":"VariableDeclaration","scope":696,"src":"6032:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"6032:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6005:41:5"},"returnParameters":{"id":628,"nodeType":"ParameterList","parameters":[],"src":"6064:0:5"},"scope":889,"src":"5989:1107:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":728,"nodeType":"Block","src":"7495:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":704,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"7509:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7528:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7520:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"7520:7:5","typeDescriptions":{}}},"id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7520:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7509:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":718,"nodeType":"IfStatement","src":"7505:91:5","trueBody":{"id":717,"nodeType":"Block","src":"7532:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7582:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7574:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"7574:7:5","typeDescriptions":{}}},"id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7574:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":710,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"7553:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7553:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":716,"nodeType":"RevertStatement","src":"7546:39:5"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7621:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7613:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"7613:7:5","typeDescriptions":{}}},"id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7613:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":724,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"7625:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"7634:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":719,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"7605:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7605:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":727,"nodeType":"ExpressionStatement","src":"7605:35:5"}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"7102:332:5","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":729,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7448:5:5","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"account","nameLocation":"7462:7:5","nodeType":"VariableDeclaration","scope":729,"src":"7454:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"7454:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"value","nameLocation":"7479:5:5","nodeType":"VariableDeclaration","scope":729,"src":"7471:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":700,"name":"uint256","nodeType":"ElementaryTypeName","src":"7471:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7453:32:5"},"returnParameters":{"id":703,"nodeType":"ParameterList","parameters":[],"src":"7495:0:5"},"scope":889,"src":"7439:208:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":761,"nodeType":"Block","src":"8021:150:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":737,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"8035:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8046:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"8046:7:5","typeDescriptions":{}}},"id":741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8046:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8035:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":751,"nodeType":"IfStatement","src":"8031:89:5","trueBody":{"id":750,"nodeType":"Block","src":"8058:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8106:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8098:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"8098:7:5","typeDescriptions":{}}},"id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":743,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"8079:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8079:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":749,"nodeType":"RevertStatement","src":"8072:37:5"}]}},{"expression":{"arguments":[{"id":753,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"8137:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8154:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8146:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"8146:7:5","typeDescriptions":{}}},"id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8146:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"8158:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":752,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"8129:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8129:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":760,"nodeType":"ExpressionStatement","src":"8129:35:5"}]},"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"7653:307:5","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":762,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7974:5:5","nodeType":"FunctionDefinition","parameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"account","nameLocation":"7988:7:5","nodeType":"VariableDeclaration","scope":762,"src":"7980:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"7980:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":734,"mutability":"mutable","name":"value","nameLocation":"8005:5:5","nodeType":"VariableDeclaration","scope":762,"src":"7997:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":733,"name":"uint256","nodeType":"ElementaryTypeName","src":"7997:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:32:5"},"returnParameters":{"id":736,"nodeType":"ParameterList","parameters":[],"src":"8021:0:5"},"scope":889,"src":"7965:206:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":779,"nodeType":"Block","src":"8781:54:5","statements":[{"expression":{"arguments":[{"id":773,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8800:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":774,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"8807:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"8816:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8823:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":772,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[780,840],"referencedDeclaration":840,"src":"8791:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8791:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":778,"nodeType":"ExpressionStatement","src":"8791:37:5"}]},"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"8177:525:5","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":780,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8716:8:5","nodeType":"FunctionDefinition","parameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"owner","nameLocation":"8733:5:5","nodeType":"VariableDeclaration","scope":780,"src":"8725:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"8725:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":767,"mutability":"mutable","name":"spender","nameLocation":"8748:7:5","nodeType":"VariableDeclaration","scope":780,"src":"8740:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"8740:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"value","nameLocation":"8765:5:5","nodeType":"VariableDeclaration","scope":780,"src":"8757:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"8757:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8724:47:5"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[],"src":"8781:0:5"},"scope":889,"src":"8707:128:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":839,"nodeType":"Block","src":"9780:334:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"9794:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9811:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"9803:7:5","typeDescriptions":{}}},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9794:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":806,"nodeType":"IfStatement","src":"9790:89:5","trueBody":{"id":805,"nodeType":"Block","src":"9815:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9865:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9857:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"9857:7:5","typeDescriptions":{}}},"id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9857:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":798,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"9836:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9836:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":804,"nodeType":"RevertStatement","src":"9829:39:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":807,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"9892:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9911:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9903:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"9903:7:5","typeDescriptions":{}}},"id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9892:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":821,"nodeType":"IfStatement","src":"9888:90:5","trueBody":{"id":820,"nodeType":"Block","src":"9915:63:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9964:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9956:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":814,"name":"address","nodeType":"ElementaryTypeName","src":"9956:7:5","typeDescriptions":{}}},"id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9956:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":813,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"9936:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9936:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":819,"nodeType":"RevertStatement","src":"9929:38:5"}]}},{"expression":{"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":822,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"9987:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":825,"indexExpression":{"id":823,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"9999:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9987:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":826,"indexExpression":{"id":824,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"10006:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9987:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"10017:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9987:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":829,"nodeType":"ExpressionStatement","src":"9987:35:5"},{"condition":{"id":830,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"10036:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":838,"nodeType":"IfStatement","src":"10032:76:5","trueBody":{"id":837,"nodeType":"Block","src":"10047:61:5","statements":[{"eventCall":{"arguments":[{"id":832,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"10075:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":833,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"10082:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"10091:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":831,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"10066:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10066:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":836,"nodeType":"EmitStatement","src":"10061:36:5"}]}}]},"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"8841:836:5","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":840,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9691:8:5","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"owner","nameLocation":"9708:5:5","nodeType":"VariableDeclaration","scope":840,"src":"9700:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"9700:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":785,"mutability":"mutable","name":"spender","nameLocation":"9723:7:5","nodeType":"VariableDeclaration","scope":840,"src":"9715:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"9715:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"value","nameLocation":"9740:5:5","nodeType":"VariableDeclaration","scope":840,"src":"9732:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":786,"name":"uint256","nodeType":"ElementaryTypeName","src":"9732:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"emitEvent","nameLocation":"9752:9:5","nodeType":"VariableDeclaration","scope":840,"src":"9747:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":788,"name":"bool","nodeType":"ElementaryTypeName","src":"9747:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9699:63:5"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[],"src":"9780:0:5"},"scope":889,"src":"9682:432:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":887,"nodeType":"Block","src":"10485:387:5","statements":[{"assignments":[851],"declarations":[{"constant":false,"id":851,"mutability":"mutable","name":"currentAllowance","nameLocation":"10503:16:5","nodeType":"VariableDeclaration","scope":887,"src":"10495:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"10495:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":856,"initialValue":{"arguments":[{"id":853,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"10532:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":854,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10539:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":852,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"10522:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10522:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10495:52:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":857,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10561:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10585:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"10585:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":858,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10580:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10580:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10594:3:5","memberName":"max","nodeType":"MemberAccess","src":"10580:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10561:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":886,"nodeType":"IfStatement","src":"10557:309:5","trueBody":{"id":885,"nodeType":"Block","src":"10599:267:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":864,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10617:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"10636:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10617:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":874,"nodeType":"IfStatement","src":"10613:130:5","trueBody":{"id":873,"nodeType":"Block","src":"10643:100:5","statements":[{"errorCall":{"arguments":[{"id":868,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10695:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":869,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10704:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"10722:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":867,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"10668:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10668:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":872,"nodeType":"RevertStatement","src":"10661:67:5"}]}},{"id":884,"nodeType":"UncheckedBlock","src":"10756:100:5","statements":[{"expression":{"arguments":[{"id":876,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"10793:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":877,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10800:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":878,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10809:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"10828:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10809:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10835:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":875,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[780,840],"referencedDeclaration":840,"src":"10784:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10784:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"ExpressionStatement","src":"10784:57:5"}]}]}}]},"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"10120:271:5","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":888,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10405:15:5","nodeType":"FunctionDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"owner","nameLocation":"10429:5:5","nodeType":"VariableDeclaration","scope":888,"src":"10421:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"10421:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"spender","nameLocation":"10444:7:5","nodeType":"VariableDeclaration","scope":888,"src":"10436:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"10436:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"value","nameLocation":"10461:5:5","nodeType":"VariableDeclaration","scope":888,"src":"10453:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"10453:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10420:47:5"},"returnParameters":{"id":849,"nodeType":"ParameterList","parameters":[],"src":"10485:0:5"},"scope":889,"src":"10396:476:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":890,"src":"1106:9768:5","usedErrors":[249,254,259,268,273,278],"usedEvents":[901,910]}],"src":"105:10770:5"},"id":5},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[967]},"id":968,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":891,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"132:71:6","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":967,"linearizedBaseContracts":[967],"name":"IERC20","nameLocation":"214:6:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":893,"nodeType":"StructuredDocumentation","src":"227:158:6","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":901,"name":"Transfer","nameLocation":"396:8:6","nodeType":"EventDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:6","nodeType":"VariableDeclaration","scope":901,"src":"405:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":897,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:6","nodeType":"VariableDeclaration","scope":901,"src":"427:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":899,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:6","nodeType":"VariableDeclaration","scope":901,"src":"447:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":898,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:6"},"src":"390:72:6"},{"anonymous":false,"documentation":{"id":902,"nodeType":"StructuredDocumentation","src":"468:148:6","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":910,"name":"Approval","nameLocation":"627:8:6","nodeType":"EventDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:6","nodeType":"VariableDeclaration","scope":910,"src":"636:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":906,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:6","nodeType":"VariableDeclaration","scope":910,"src":"659:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":908,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:6","nodeType":"VariableDeclaration","scope":910,"src":"684:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":907,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:6"},"src":"621:78:6"},{"documentation":{"id":911,"nodeType":"StructuredDocumentation","src":"705:65:6","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":916,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:6","nodeType":"FunctionDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"795:2:6"},"returnParameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":916,"src":"821:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:6"},"scope":967,"src":"775:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":917,"nodeType":"StructuredDocumentation","src":"836:71:6","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":924,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:6","nodeType":"FunctionDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"account","nameLocation":"939:7:6","nodeType":"VariableDeclaration","scope":924,"src":"931:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:6"},"returnParameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":924,"src":"971:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:6"},"scope":967,"src":"912:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":925,"nodeType":"StructuredDocumentation","src":"986:213:6","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":934,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:6","nodeType":"FunctionDefinition","parameters":{"id":930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"to","nameLocation":"1230:2:6","nodeType":"VariableDeclaration","scope":934,"src":"1222:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"value","nameLocation":"1242:5:6","nodeType":"VariableDeclaration","scope":934,"src":"1234:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":928,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:6"},"returnParameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":934,"src":"1267:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":931,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:6"},"scope":967,"src":"1204:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":935,"nodeType":"StructuredDocumentation","src":"1279:264:6","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":944,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:6","nodeType":"FunctionDefinition","parameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"owner","nameLocation":"1575:5:6","nodeType":"VariableDeclaration","scope":944,"src":"1567:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"spender","nameLocation":"1590:7:6","nodeType":"VariableDeclaration","scope":944,"src":"1582:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:6"},"returnParameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":944,"src":"1622:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":941,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:6"},"scope":967,"src":"1548:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"1637:667:6","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":954,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:6","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"spender","nameLocation":"2334:7:6","nodeType":"VariableDeclaration","scope":954,"src":"2326:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"value","nameLocation":"2351:5:6","nodeType":"VariableDeclaration","scope":954,"src":"2343:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:6"},"returnParameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":954,"src":"2376:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":951,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:6"},"scope":967,"src":"2309:73:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"2388:297:6","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":966,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:6","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"from","nameLocation":"2720:4:6","nodeType":"VariableDeclaration","scope":966,"src":"2712:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"to","nameLocation":"2734:2:6","nodeType":"VariableDeclaration","scope":966,"src":"2726:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"value","nameLocation":"2746:5:6","nodeType":"VariableDeclaration","scope":966,"src":"2738:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:6"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":966,"src":"2771:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":963,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:6"},"scope":967,"src":"2690:87:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":968,"src":"204:2575:6","usedErrors":[],"usedEvents":[901,910]}],"src":"106:2674:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[967],"IERC20Metadata":[993]},"id":994,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":969,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":971,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":994,"sourceUnit":968,"src":"151:37:7","symbolAliases":[{"foreign":{"id":970,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"159:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":973,"name":"IERC20","nameLocations":["306:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"306:6:7"},"id":974,"nodeType":"InheritanceSpecifier","src":"306:6:7"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"190:87:7","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":993,"linearizedBaseContracts":[993,967],"name":"IERC20Metadata","nameLocation":"288:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"319:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":980,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:7","nodeType":"FunctionDefinition","parameters":{"id":976,"nodeType":"ParameterList","parameters":[],"src":"391:2:7"},"returnParameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":980,"src":"417:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":977,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:7"},"scope":993,"src":"378:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":981,"nodeType":"StructuredDocumentation","src":"438:56:7","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":986,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:7","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"514:2:7"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":986,"src":"540:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":983,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:7"},"scope":993,"src":"499:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":987,"nodeType":"StructuredDocumentation","src":"561:65:7","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":992,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:7","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[],"src":"648:2:7"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":992,"src":"674:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":989,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:7"},"scope":993,"src":"631:50:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":994,"src":"278:405:7","usedErrors":[],"usedEvents":[901,910]}],"src":"125:559:7"},"id":7},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[229],"IERC20":[967],"SafeERC20":[1457]},"id":1458,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":995,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":997,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1458,"sourceUnit":968,"src":"141:37:8","symbolAliases":[{"foreign":{"id":996,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"149:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":999,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1458,"sourceUnit":230,"src":"179:58:8","symbolAliases":[{"foreign":{"id":998,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"187:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"239:458:8","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1457,"linearizedBaseContracts":[1457],"name":"SafeERC20","nameLocation":"706:9:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1001,"nodeType":"StructuredDocumentation","src":"722:65:8","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":1005,"name":"SafeERC20FailedOperation","nameLocation":"798:24:8","nodeType":"ErrorDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"token","nameLocation":"831:5:8","nodeType":"VariableDeclaration","scope":1005,"src":"823:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:8"},"src":"792:46:8"},{"documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"844:71:8","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1014,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:8","nodeType":"ErrorDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"spender","nameLocation":"967:7:8","nodeType":"VariableDeclaration","scope":1014,"src":"959:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:8","nodeType":"VariableDeclaration","scope":1014,"src":"976:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:8","nodeType":"VariableDeclaration","scope":1014,"src":"1002:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:8"},"src":"920:109:8"},{"body":{"id":1037,"nodeType":"Block","src":"1291:88:8","statements":[{"expression":{"arguments":[{"id":1026,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"1321:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1029,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"1343:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":934,"src":"1343:14:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1031,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"1360:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"1364:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1033,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1027,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1025,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"1301:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1036,"nodeType":"ExpressionStatement","src":"1301:71:8"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"1035:179:8","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1038,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:8","nodeType":"FunctionDefinition","parameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"token","nameLocation":"1248:5:8","nodeType":"VariableDeclaration","scope":1038,"src":"1241:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1017,"nodeType":"UserDefinedTypeName","pathNode":{"id":1016,"name":"IERC20","nameLocations":["1241:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"1241:6:8"},"referencedDeclaration":967,"src":"1241:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"to","nameLocation":"1263:2:8","nodeType":"VariableDeclaration","scope":1038,"src":"1255:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1022,"mutability":"mutable","name":"value","nameLocation":"1275:5:8","nodeType":"VariableDeclaration","scope":1038,"src":"1267:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:8"},"returnParameters":{"id":1024,"nodeType":"ParameterList","parameters":[],"src":"1291:0:8"},"scope":1457,"src":"1219:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1064,"nodeType":"Block","src":"1708:98:8","statements":[{"expression":{"arguments":[{"id":1052,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"1738:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1055,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"1760:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:8","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":966,"src":"1760:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1057,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"1781:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1058,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"1787:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"1791:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1060,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1053,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1051,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"1718:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1063,"nodeType":"ExpressionStatement","src":"1718:81:8"}]},"documentation":{"id":1039,"nodeType":"StructuredDocumentation","src":"1385:228:8","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1065,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:8","nodeType":"FunctionDefinition","parameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"token","nameLocation":"1651:5:8","nodeType":"VariableDeclaration","scope":1065,"src":"1644:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1041,"nodeType":"UserDefinedTypeName","pathNode":{"id":1040,"name":"IERC20","nameLocations":["1644:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"1644:6:8"},"referencedDeclaration":967,"src":"1644:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"from","nameLocation":"1666:4:8","nodeType":"VariableDeclaration","scope":1065,"src":"1658:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"to","nameLocation":"1680:2:8","nodeType":"VariableDeclaration","scope":1065,"src":"1672:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"value","nameLocation":"1692:5:8","nodeType":"VariableDeclaration","scope":1065,"src":"1684:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1047,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:8"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[],"src":"1708:0:8"},"scope":1457,"src":"1618:188:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1090,"nodeType":"Block","src":"2033:99:8","statements":[{"expression":{"arguments":[{"id":1079,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"2074:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1082,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"2096:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":934,"src":"2096:14:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1084,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"2113:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"2117:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1080,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1078,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"2050:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1077,"id":1089,"nodeType":"Return","src":"2043:82:8"}]},"documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"1812:126:8","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":1091,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:8","nodeType":"FunctionDefinition","parameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"token","nameLocation":"1975:5:8","nodeType":"VariableDeclaration","scope":1091,"src":"1968:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1068,"nodeType":"UserDefinedTypeName","pathNode":{"id":1067,"name":"IERC20","nameLocations":["1968:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"1968:6:8"},"referencedDeclaration":967,"src":"1968:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"to","nameLocation":"1990:2:8","nodeType":"VariableDeclaration","scope":1091,"src":"1982:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1073,"mutability":"mutable","name":"value","nameLocation":"2002:5:8","nodeType":"VariableDeclaration","scope":1091,"src":"1994:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1072,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:8"},"returnParameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1091,"src":"2027:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1075,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:8"},"scope":1457,"src":"1943:189:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1119,"nodeType":"Block","src":"2381:109:8","statements":[{"expression":{"arguments":[{"id":1107,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"2422:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1110,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"2444:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:8","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":966,"src":"2444:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1112,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"2465:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1113,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"2471:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"2475:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1106,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"2398:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1105,"id":1118,"nodeType":"Return","src":"2391:92:8"}]},"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"2138:130:8","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":1120,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:8","nodeType":"FunctionDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"token","nameLocation":"2309:5:8","nodeType":"VariableDeclaration","scope":1120,"src":"2302:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1094,"nodeType":"UserDefinedTypeName","pathNode":{"id":1093,"name":"IERC20","nameLocations":["2302:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"2302:6:8"},"referencedDeclaration":967,"src":"2302:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"from","nameLocation":"2324:4:8","nodeType":"VariableDeclaration","scope":1120,"src":"2316:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"to","nameLocation":"2338:2:8","nodeType":"VariableDeclaration","scope":1120,"src":"2330:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"value","nameLocation":"2350:5:8","nodeType":"VariableDeclaration","scope":1120,"src":"2342:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:8"},"returnParameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1120,"src":"2375:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1103,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:8"},"scope":1457,"src":"2273:217:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1150,"nodeType":"Block","src":"3232:139:8","statements":[{"assignments":[1132],"declarations":[{"constant":false,"id":1132,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:8","nodeType":"VariableDeclaration","scope":1150,"src":"3242:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1131,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1141,"initialValue":{"arguments":[{"arguments":[{"id":1137,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1457","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1457","typeString":"library SafeERC20"}],"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:8","typeDescriptions":{}}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1139,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3296:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1133,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"3265:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:8","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":944,"src":"3265:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:8"},{"expression":{"arguments":[{"id":1143,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"3327:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"id":1144,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3334:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1145,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"3343:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"3358:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1142,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"3314:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1149,"nodeType":"ExpressionStatement","src":"3314:50:8"}]},"documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"2496:645:8","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1151,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:8","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"token","nameLocation":"3184:5:8","nodeType":"VariableDeclaration","scope":1151,"src":"3177:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1123,"nodeType":"UserDefinedTypeName","pathNode":{"id":1122,"name":"IERC20","nameLocations":["3177:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"3177:6:8"},"referencedDeclaration":967,"src":"3177:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"spender","nameLocation":"3199:7:8","nodeType":"VariableDeclaration","scope":1151,"src":"3191:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1125,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"value","nameLocation":"3216:5:8","nodeType":"VariableDeclaration","scope":1151,"src":"3208:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:8"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"3232:0:8"},"scope":1457,"src":"3146:225:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1193,"nodeType":"Block","src":"4137:370:8","statements":[{"id":1192,"nodeType":"UncheckedBlock","src":"4147:354:8","statements":[{"assignments":[1163],"declarations":[{"constant":false,"id":1163,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:8","nodeType":"VariableDeclaration","scope":1192,"src":"4171:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1172,"initialValue":{"arguments":[{"arguments":[{"id":1168,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1457","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1457","typeString":"library SafeERC20"}],"id":1167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:8","typeDescriptions":{}}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1170,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"4229:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1164,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"4198:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:8","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":944,"src":"4198:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1173,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4255:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1174,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"4274:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1183,"nodeType":"IfStatement","src":"4251:160:8","trueBody":{"id":1182,"nodeType":"Block","src":"4293:118:8","statements":[{"errorCall":{"arguments":[{"id":1177,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"4351:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1178,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4360:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1179,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"4378:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1176,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"4318:32:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1181,"nodeType":"RevertStatement","src":"4311:85:8"}]}},{"expression":{"arguments":[{"id":1185,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"4437:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"id":1186,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"4444:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1187,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4453:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1188,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"4472:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1184,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"4424:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1191,"nodeType":"ExpressionStatement","src":"4424:66:8"}]}]},"documentation":{"id":1152,"nodeType":"StructuredDocumentation","src":"3377:657:8","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1194,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:8","nodeType":"FunctionDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"token","nameLocation":"4077:5:8","nodeType":"VariableDeclaration","scope":1194,"src":"4070:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1154,"nodeType":"UserDefinedTypeName","pathNode":{"id":1153,"name":"IERC20","nameLocations":["4070:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"4070:6:8"},"referencedDeclaration":967,"src":"4070:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"spender","nameLocation":"4092:7:8","nodeType":"VariableDeclaration","scope":1194,"src":"4084:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:8","nodeType":"VariableDeclaration","scope":1194,"src":"4101:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:8"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[],"src":"4137:0:8"},"scope":1457,"src":"4039:468:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1240,"nodeType":"Block","src":"5161:303:8","statements":[{"assignments":[1206],"declarations":[{"constant":false,"id":1206,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:8","nodeType":"VariableDeclaration","scope":1240,"src":"5171:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1205,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1215,"initialValue":{"arguments":[{"expression":{"id":1209,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5214:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:8","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":954,"src":"5214:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1211,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5230:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"5239:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1207,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:8"},{"condition":{"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:8","subExpression":{"arguments":[{"id":1217,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5286:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"id":1218,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"5293:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1216,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"5262:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1239,"nodeType":"IfStatement","src":"5257:201:8","trueBody":{"id":1238,"nodeType":"Block","src":"5308:150:8","statements":[{"expression":{"arguments":[{"id":1222,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5342:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1225,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5364:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:8","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":954,"src":"5364:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1227,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5380:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1223,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1221,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"5322:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1232,"nodeType":"ExpressionStatement","src":"5322:71:8"},{"expression":{"arguments":[{"id":1234,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5427:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"id":1235,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"5434:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1233,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"5407:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1237,"nodeType":"ExpressionStatement","src":"5407:40:8"}]}}]},"documentation":{"id":1195,"nodeType":"StructuredDocumentation","src":"4513:566:8","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":1241,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:8","nodeType":"FunctionDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"token","nameLocation":"5113:5:8","nodeType":"VariableDeclaration","scope":1241,"src":"5106:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1197,"nodeType":"UserDefinedTypeName","pathNode":{"id":1196,"name":"IERC20","nameLocations":["5106:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"5106:6:8"},"referencedDeclaration":967,"src":"5106:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"spender","nameLocation":"5128:7:8","nodeType":"VariableDeclaration","scope":1241,"src":"5120:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1202,"mutability":"mutable","name":"value","nameLocation":"5145:5:8","nodeType":"VariableDeclaration","scope":1241,"src":"5137:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:8"},"returnParameters":{"id":1204,"nodeType":"ParameterList","parameters":[],"src":"5161:0:8"},"scope":1457,"src":"5084:380:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1283,"nodeType":"Block","src":"5911:219:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"5925:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:8","memberName":"code","nodeType":"MemberAccess","src":"5925:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:8","memberName":"length","nodeType":"MemberAccess","src":"5925:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:8","subExpression":{"arguments":[{"id":1268,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"6034:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"6038:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1270,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"6045:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1266,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"6012:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:8","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":180,"src":"6012:21:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1281,"nodeType":"IfStatement","src":"6007:117:8","trueBody":{"id":1280,"nodeType":"Block","src":"6052:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1276,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"6106:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:8","typeDescriptions":{}}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1273,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6073:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1279,"nodeType":"RevertStatement","src":"6066:47:8"}]}},"id":1282,"nodeType":"IfStatement","src":"5921:203:8","trueBody":{"id":1265,"nodeType":"Block","src":"5946:55:8","statements":[{"expression":{"arguments":[{"id":1260,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"5973:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1261,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"5980:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"5984:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1259,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5960:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1264,"nodeType":"ExpressionStatement","src":"5960:30:8"}]}}]},"documentation":{"id":1242,"nodeType":"StructuredDocumentation","src":"5470:333:8","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:8","nodeType":"FunctionDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"token","nameLocation":"5849:5:8","nodeType":"VariableDeclaration","scope":1284,"src":"5840:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1244,"nodeType":"UserDefinedTypeName","pathNode":{"id":1243,"name":"IERC1363","nameLocations":["5840:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"5840:8:8"},"referencedDeclaration":229,"src":"5840:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"to","nameLocation":"5864:2:8","nodeType":"VariableDeclaration","scope":1284,"src":"5856:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"value","nameLocation":"5876:5:8","nodeType":"VariableDeclaration","scope":1284,"src":"5868:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"data","nameLocation":"5896:4:8","nodeType":"VariableDeclaration","scope":1284,"src":"5883:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1250,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:8"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[],"src":"5911:0:8"},"scope":1457,"src":"5808:322:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1330,"nodeType":"Block","src":"6649:239:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1299,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6663:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:8","memberName":"code","nodeType":"MemberAccess","src":"6663:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:8","memberName":"length","nodeType":"MemberAccess","src":"6663:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:8","subExpression":{"arguments":[{"id":1314,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"6786:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1315,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6792:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"6796:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1317,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"6803:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1312,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"6760:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:8","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":206,"src":"6760:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1328,"nodeType":"IfStatement","src":"6755:127:8","trueBody":{"id":1327,"nodeType":"Block","src":"6810:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1323,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"6864:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1321,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:8","typeDescriptions":{}}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1320,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6831:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1326,"nodeType":"RevertStatement","src":"6824:47:8"}]}},"id":1329,"nodeType":"IfStatement","src":"6659:223:8","trueBody":{"id":1311,"nodeType":"Block","src":"6684:65:8","statements":[{"expression":{"arguments":[{"id":1305,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"6715:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1306,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"6722:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1307,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6728:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"6732:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1304,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"6698:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1310,"nodeType":"ExpressionStatement","src":"6698:40:8"}]}}]},"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"6136:341:8","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1331,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:8","nodeType":"FunctionDefinition","parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"token","nameLocation":"6536:5:8","nodeType":"VariableDeclaration","scope":1331,"src":"6527:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1287,"nodeType":"UserDefinedTypeName","pathNode":{"id":1286,"name":"IERC1363","nameLocations":["6527:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"6527:8:8"},"referencedDeclaration":229,"src":"6527:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1290,"mutability":"mutable","name":"from","nameLocation":"6559:4:8","nodeType":"VariableDeclaration","scope":1331,"src":"6551:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1292,"mutability":"mutable","name":"to","nameLocation":"6581:2:8","nodeType":"VariableDeclaration","scope":1331,"src":"6573:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"value","nameLocation":"6601:5:8","nodeType":"VariableDeclaration","scope":1331,"src":"6593:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"data","nameLocation":"6629:4:8","nodeType":"VariableDeclaration","scope":1331,"src":"6616:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1295,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:8"},"returnParameters":{"id":1298,"nodeType":"ParameterList","parameters":[],"src":"6649:0:8"},"scope":1457,"src":"6482:406:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1373,"nodeType":"Block","src":"7655:218:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1344,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"7669:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:8","memberName":"code","nodeType":"MemberAccess","src":"7669:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:8","memberName":"length","nodeType":"MemberAccess","src":"7669:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:8","subExpression":{"arguments":[{"id":1358,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"7777:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"7781:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1360,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"7788:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1356,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7756:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:8","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":228,"src":"7756:20:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1371,"nodeType":"IfStatement","src":"7751:116:8","trueBody":{"id":1370,"nodeType":"Block","src":"7795:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1366,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7849:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:8","typeDescriptions":{}}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1363,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"7816:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1369,"nodeType":"RevertStatement","src":"7809:47:8"}]}},"id":1372,"nodeType":"IfStatement","src":"7665:202:8","trueBody":{"id":1355,"nodeType":"Block","src":"7690:55:8","statements":[{"expression":{"arguments":[{"id":1350,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7717:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1351,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"7724:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"7728:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1349,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"7704:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1354,"nodeType":"ExpressionStatement","src":"7704:30:8"}]}}]},"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"6894:654:8","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":1374,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:8","nodeType":"FunctionDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"token","nameLocation":"7593:5:8","nodeType":"VariableDeclaration","scope":1374,"src":"7584:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1334,"nodeType":"UserDefinedTypeName","pathNode":{"id":1333,"name":"IERC1363","nameLocations":["7584:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"7584:8:8"},"referencedDeclaration":229,"src":"7584:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1337,"mutability":"mutable","name":"to","nameLocation":"7608:2:8","nodeType":"VariableDeclaration","scope":1374,"src":"7600:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"value","nameLocation":"7620:5:8","nodeType":"VariableDeclaration","scope":1374,"src":"7612:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"data","nameLocation":"7640:4:8","nodeType":"VariableDeclaration","scope":1374,"src":"7627:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1340,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:8"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[],"src":"7655:0:8"},"scope":1457,"src":"7553:320:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1414,"nodeType":"Block","src":"8440:650:8","statements":[{"assignments":[1384],"declarations":[{"constant":false,"id":1384,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:8","nodeType":"VariableDeclaration","scope":1414,"src":"8450:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1385,"nodeType":"VariableDeclarationStatement","src":"8450:18:8"},{"assignments":[1387],"declarations":[{"constant":false,"id":1387,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:8","nodeType":"VariableDeclaration","scope":1414,"src":"8478:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1388,"nodeType":"VariableDeclarationStatement","src":"8478:19:8"},{"AST":{"nativeSrc":"8532:396:8","nodeType":"YulBlock","src":"8532:396:8","statements":[{"nativeSrc":"8546:75:8","nodeType":"YulVariableDeclaration","src":"8546:75:8","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"8566:3:8","nodeType":"YulIdentifier","src":"8566:3:8"},"nativeSrc":"8566:5:8","nodeType":"YulFunctionCall","src":"8566:5:8"},{"name":"token","nativeSrc":"8573:5:8","nodeType":"YulIdentifier","src":"8573:5:8"},{"kind":"number","nativeSrc":"8580:1:8","nodeType":"YulLiteral","src":"8580:1:8","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"8587:4:8","nodeType":"YulIdentifier","src":"8587:4:8"},{"kind":"number","nativeSrc":"8593:4:8","nodeType":"YulLiteral","src":"8593:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8583:3:8","nodeType":"YulIdentifier","src":"8583:3:8"},"nativeSrc":"8583:15:8","nodeType":"YulFunctionCall","src":"8583:15:8"},{"arguments":[{"name":"data","nativeSrc":"8606:4:8","nodeType":"YulIdentifier","src":"8606:4:8"}],"functionName":{"name":"mload","nativeSrc":"8600:5:8","nodeType":"YulIdentifier","src":"8600:5:8"},"nativeSrc":"8600:11:8","nodeType":"YulFunctionCall","src":"8600:11:8"},{"kind":"number","nativeSrc":"8613:1:8","nodeType":"YulLiteral","src":"8613:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"8616:4:8","nodeType":"YulLiteral","src":"8616:4:8","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"8561:4:8","nodeType":"YulIdentifier","src":"8561:4:8"},"nativeSrc":"8561:60:8","nodeType":"YulFunctionCall","src":"8561:60:8"},"variables":[{"name":"success","nativeSrc":"8550:7:8","nodeType":"YulTypedName","src":"8550:7:8","type":""}]},{"body":{"nativeSrc":"8682:157:8","nodeType":"YulBlock","src":"8682:157:8","statements":[{"nativeSrc":"8700:22:8","nodeType":"YulVariableDeclaration","src":"8700:22:8","value":{"arguments":[{"kind":"number","nativeSrc":"8717:4:8","nodeType":"YulLiteral","src":"8717:4:8","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8711:5:8","nodeType":"YulIdentifier","src":"8711:5:8"},"nativeSrc":"8711:11:8","nodeType":"YulFunctionCall","src":"8711:11:8"},"variables":[{"name":"ptr","nativeSrc":"8704:3:8","nodeType":"YulTypedName","src":"8704:3:8","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8754:3:8","nodeType":"YulIdentifier","src":"8754:3:8"},{"kind":"number","nativeSrc":"8759:1:8","nodeType":"YulLiteral","src":"8759:1:8","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8762:14:8","nodeType":"YulIdentifier","src":"8762:14:8"},"nativeSrc":"8762:16:8","nodeType":"YulFunctionCall","src":"8762:16:8"}],"functionName":{"name":"returndatacopy","nativeSrc":"8739:14:8","nodeType":"YulIdentifier","src":"8739:14:8"},"nativeSrc":"8739:40:8","nodeType":"YulFunctionCall","src":"8739:40:8"},"nativeSrc":"8739:40:8","nodeType":"YulExpressionStatement","src":"8739:40:8"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8803:3:8","nodeType":"YulIdentifier","src":"8803:3:8"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8808:14:8","nodeType":"YulIdentifier","src":"8808:14:8"},"nativeSrc":"8808:16:8","nodeType":"YulFunctionCall","src":"8808:16:8"}],"functionName":{"name":"revert","nativeSrc":"8796:6:8","nodeType":"YulIdentifier","src":"8796:6:8"},"nativeSrc":"8796:29:8","nodeType":"YulFunctionCall","src":"8796:29:8"},"nativeSrc":"8796:29:8","nodeType":"YulExpressionStatement","src":"8796:29:8"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"8673:7:8","nodeType":"YulIdentifier","src":"8673:7:8"}],"functionName":{"name":"iszero","nativeSrc":"8666:6:8","nodeType":"YulIdentifier","src":"8666:6:8"},"nativeSrc":"8666:15:8","nodeType":"YulFunctionCall","src":"8666:15:8"},"nativeSrc":"8663:176:8","nodeType":"YulIf","src":"8663:176:8"},{"nativeSrc":"8852:30:8","nodeType":"YulAssignment","src":"8852:30:8","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8866:14:8","nodeType":"YulIdentifier","src":"8866:14:8"},"nativeSrc":"8866:16:8","nodeType":"YulFunctionCall","src":"8866:16:8"},"variableNames":[{"name":"returnSize","nativeSrc":"8852:10:8","nodeType":"YulIdentifier","src":"8852:10:8"}]},{"nativeSrc":"8895:23:8","nodeType":"YulAssignment","src":"8895:23:8","value":{"arguments":[{"kind":"number","nativeSrc":"8916:1:8","nodeType":"YulLiteral","src":"8916:1:8","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8910:5:8","nodeType":"YulIdentifier","src":"8910:5:8"},"nativeSrc":"8910:8:8","nodeType":"YulFunctionCall","src":"8910:8:8"},"variableNames":[{"name":"returnValue","nativeSrc":"8895:11:8","nodeType":"YulIdentifier","src":"8895:11:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1380,"isOffset":false,"isSlot":false,"src":"8587:4:8","valueSize":1},{"declaration":1380,"isOffset":false,"isSlot":false,"src":"8606:4:8","valueSize":1},{"declaration":1384,"isOffset":false,"isSlot":false,"src":"8852:10:8","valueSize":1},{"declaration":1387,"isOffset":false,"isSlot":false,"src":"8895:11:8","valueSize":1},{"declaration":1378,"isOffset":false,"isSlot":false,"src":"8573:5:8","valueSize":1}],"flags":["memory-safe"],"id":1389,"nodeType":"InlineAssembly","src":"8507:421:8"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1390,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"8942:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1401,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"8994:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:8","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1395,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"8968:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}],"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:8","typeDescriptions":{}}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:8","memberName":"code","nodeType":"MemberAccess","src":"8960:19:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:8","memberName":"length","nodeType":"MemberAccess","src":"8960:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1413,"nodeType":"IfStatement","src":"8938:146:8","trueBody":{"id":1412,"nodeType":"Block","src":"9012:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1408,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"9066:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}],"id":1407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1406,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:8","typeDescriptions":{}}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1405,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"9033:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1411,"nodeType":"RevertStatement","src":"9026:47:8"}]}}]},"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"7879:486:8","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":1415,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:8","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"token","nameLocation":"8406:5:8","nodeType":"VariableDeclaration","scope":1415,"src":"8399:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1377,"nodeType":"UserDefinedTypeName","pathNode":{"id":1376,"name":"IERC20","nameLocations":["8399:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"8399:6:8"},"referencedDeclaration":967,"src":"8399:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"data","nameLocation":"8426:4:8","nodeType":"VariableDeclaration","scope":1415,"src":"8413:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1379,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:8"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[],"src":"8440:0:8"},"scope":1457,"src":"8370:720:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1455,"nodeType":"Block","src":"9681:391:8","statements":[{"assignments":[1427],"declarations":[{"constant":false,"id":1427,"mutability":"mutable","name":"success","nameLocation":"9696:7:8","nodeType":"VariableDeclaration","scope":1455,"src":"9691:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1426,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1428,"nodeType":"VariableDeclarationStatement","src":"9691:12:8"},{"assignments":[1430],"declarations":[{"constant":false,"id":1430,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:8","nodeType":"VariableDeclaration","scope":1455,"src":"9713:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1431,"nodeType":"VariableDeclarationStatement","src":"9713:18:8"},{"assignments":[1433],"declarations":[{"constant":false,"id":1433,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:8","nodeType":"VariableDeclaration","scope":1455,"src":"9741:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1434,"nodeType":"VariableDeclarationStatement","src":"9741:19:8"},{"AST":{"nativeSrc":"9795:174:8","nodeType":"YulBlock","src":"9795:174:8","statements":[{"nativeSrc":"9809:71:8","nodeType":"YulAssignment","src":"9809:71:8","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9825:3:8","nodeType":"YulIdentifier","src":"9825:3:8"},"nativeSrc":"9825:5:8","nodeType":"YulFunctionCall","src":"9825:5:8"},{"name":"token","nativeSrc":"9832:5:8","nodeType":"YulIdentifier","src":"9832:5:8"},{"kind":"number","nativeSrc":"9839:1:8","nodeType":"YulLiteral","src":"9839:1:8","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9846:4:8","nodeType":"YulIdentifier","src":"9846:4:8"},{"kind":"number","nativeSrc":"9852:4:8","nodeType":"YulLiteral","src":"9852:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9842:3:8","nodeType":"YulIdentifier","src":"9842:3:8"},"nativeSrc":"9842:15:8","nodeType":"YulFunctionCall","src":"9842:15:8"},{"arguments":[{"name":"data","nativeSrc":"9865:4:8","nodeType":"YulIdentifier","src":"9865:4:8"}],"functionName":{"name":"mload","nativeSrc":"9859:5:8","nodeType":"YulIdentifier","src":"9859:5:8"},"nativeSrc":"9859:11:8","nodeType":"YulFunctionCall","src":"9859:11:8"},{"kind":"number","nativeSrc":"9872:1:8","nodeType":"YulLiteral","src":"9872:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"9875:4:8","nodeType":"YulLiteral","src":"9875:4:8","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9820:4:8","nodeType":"YulIdentifier","src":"9820:4:8"},"nativeSrc":"9820:60:8","nodeType":"YulFunctionCall","src":"9820:60:8"},"variableNames":[{"name":"success","nativeSrc":"9809:7:8","nodeType":"YulIdentifier","src":"9809:7:8"}]},{"nativeSrc":"9893:30:8","nodeType":"YulAssignment","src":"9893:30:8","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9907:14:8","nodeType":"YulIdentifier","src":"9907:14:8"},"nativeSrc":"9907:16:8","nodeType":"YulFunctionCall","src":"9907:16:8"},"variableNames":[{"name":"returnSize","nativeSrc":"9893:10:8","nodeType":"YulIdentifier","src":"9893:10:8"}]},{"nativeSrc":"9936:23:8","nodeType":"YulAssignment","src":"9936:23:8","value":{"arguments":[{"kind":"number","nativeSrc":"9957:1:8","nodeType":"YulLiteral","src":"9957:1:8","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9951:5:8","nodeType":"YulIdentifier","src":"9951:5:8"},"nativeSrc":"9951:8:8","nodeType":"YulFunctionCall","src":"9951:8:8"},"variableNames":[{"name":"returnValue","nativeSrc":"9936:11:8","nodeType":"YulIdentifier","src":"9936:11:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1421,"isOffset":false,"isSlot":false,"src":"9846:4:8","valueSize":1},{"declaration":1421,"isOffset":false,"isSlot":false,"src":"9865:4:8","valueSize":1},{"declaration":1430,"isOffset":false,"isSlot":false,"src":"9893:10:8","valueSize":1},{"declaration":1433,"isOffset":false,"isSlot":false,"src":"9936:11:8","valueSize":1},{"declaration":1427,"isOffset":false,"isSlot":false,"src":"9809:7:8","valueSize":1},{"declaration":1419,"isOffset":false,"isSlot":false,"src":"9832:5:8","valueSize":1}],"flags":["memory-safe"],"id":1435,"nodeType":"InlineAssembly","src":"9770:199:8"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1436,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"9985:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1437,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"9997:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1448,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"10048:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:8","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1442,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"10023:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}],"id":1441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:8","typeDescriptions":{}}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:8","memberName":"code","nodeType":"MemberAccess","src":"10015:19:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:8","memberName":"length","nodeType":"MemberAccess","src":"10015:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1425,"id":1454,"nodeType":"Return","src":"9978:87:8"}]},"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"9096:491:8","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":1456,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:8","nodeType":"FunctionDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"token","nameLocation":"9632:5:8","nodeType":"VariableDeclaration","scope":1456,"src":"9625:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1418,"nodeType":"UserDefinedTypeName","pathNode":{"id":1417,"name":"IERC20","nameLocations":["9625:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"9625:6:8"},"referencedDeclaration":967,"src":"9625:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"data","nameLocation":"9652:4:8","nodeType":"VariableDeclaration","scope":1456,"src":"9639:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1420,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:8"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1456,"src":"9675:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1423,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:8"},"scope":1457,"src":"9592:480:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1458,"src":"698:9376:8","usedErrors":[1005,1014],"usedEvents":[]}],"src":"115:9960:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1487]},"id":1488,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1459,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1460,"nodeType":"StructuredDocumentation","src":"127:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1487,"linearizedBaseContracts":[1487],"name":"Context","nameLocation":"642:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1468,"nodeType":"Block","src":"718:34:9","statements":[{"expression":{"expression":{"id":1465,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:9","memberName":"sender","nodeType":"MemberAccess","src":"735:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1464,"id":1467,"nodeType":"Return","src":"728:17:9"}]},"id":1469,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:9","nodeType":"FunctionDefinition","parameters":{"id":1461,"nodeType":"ParameterList","parameters":[],"src":"675:2:9"},"returnParameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1469,"src":"709:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1462,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:9"},"scope":1487,"src":"656:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1477,"nodeType":"Block","src":"825:32:9","statements":[{"expression":{"expression":{"id":1474,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:9","memberName":"data","nodeType":"MemberAccess","src":"842:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1473,"id":1476,"nodeType":"Return","src":"835:15:9"}]},"id":1478,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:9","nodeType":"FunctionDefinition","parameters":{"id":1470,"nodeType":"ParameterList","parameters":[],"src":"775:2:9"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1478,"src":"809:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1471,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:9"},"scope":1487,"src":"758:99:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1485,"nodeType":"Block","src":"935:25:9","statements":[{"expression":{"hexValue":"30","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1482,"id":1484,"nodeType":"Return","src":"945:8:9"}]},"id":1486,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:9","nodeType":"FunctionDefinition","parameters":{"id":1479,"nodeType":"ParameterList","parameters":[],"src":"892:2:9"},"returnParameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1486,"src":"926:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:9"},"scope":1487,"src":"863:97:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1488,"src":"624:338:9","usedErrors":[],"usedEvents":[]}],"src":"101:862:9"},"id":9},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1539]},"id":1540,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1489,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1490,"nodeType":"StructuredDocumentation","src":"125:489:10","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1539,"linearizedBaseContracts":[1539],"name":"Panic","nameLocation":"665:5:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"677:36:10","text":"@dev generic / unspecified error"},"id":1494,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:10","nodeType":"VariableDeclaration","scope":1539,"src":"718:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1492,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1495,"nodeType":"StructuredDocumentation","src":"764:37:10","text":"@dev used by the assert() builtin"},"id":1498,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:10","nodeType":"VariableDeclaration","scope":1539,"src":"806:39:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"851:41:10","text":"@dev arithmetic underflow or overflow"},"id":1502,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:10","nodeType":"VariableDeclaration","scope":1539,"src":"897:47:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:10","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1503,"nodeType":"StructuredDocumentation","src":"950:35:10","text":"@dev division or modulo by zero"},"id":1506,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:10","nodeType":"VariableDeclaration","scope":1539,"src":"990:49:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1507,"nodeType":"StructuredDocumentation","src":"1045:30:10","text":"@dev enum conversion error"},"id":1510,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:10","nodeType":"VariableDeclaration","scope":1539,"src":"1080:54:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:10","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1511,"nodeType":"StructuredDocumentation","src":"1140:36:10","text":"@dev invalid encoding in storage"},"id":1514,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:10","nodeType":"VariableDeclaration","scope":1539,"src":"1181:55:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:10","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"1242:24:10","text":"@dev empty array pop"},"id":1518,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:10","nodeType":"VariableDeclaration","scope":1539,"src":"1271:48:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1516,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:10","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1519,"nodeType":"StructuredDocumentation","src":"1325:35:10","text":"@dev array out of bounds access"},"id":1522,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:10","nodeType":"VariableDeclaration","scope":1539,"src":"1365:52:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:10","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"1423:65:10","text":"@dev resource error (too large allocation or too large array)"},"id":1526,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:10","nodeType":"VariableDeclaration","scope":1539,"src":"1493:47:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1524,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:10","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1527,"nodeType":"StructuredDocumentation","src":"1546:42:10","text":"@dev calling invalid internal function"},"id":1530,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:10","nodeType":"VariableDeclaration","scope":1539,"src":"1593:58:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:10","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1537,"nodeType":"Block","src":"1819:151:10","statements":[{"AST":{"nativeSrc":"1854:110:10","nodeType":"YulBlock","src":"1854:110:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:10","nodeType":"YulLiteral","src":"1875:4:10","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:10","nodeType":"YulLiteral","src":"1881:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:10","nodeType":"YulIdentifier","src":"1868:6:10"},"nativeSrc":"1868:24:10","nodeType":"YulFunctionCall","src":"1868:24:10"},"nativeSrc":"1868:24:10","nodeType":"YulExpressionStatement","src":"1868:24:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:10","nodeType":"YulLiteral","src":"1912:4:10","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:10","nodeType":"YulIdentifier","src":"1918:4:10"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:10","nodeType":"YulIdentifier","src":"1905:6:10"},"nativeSrc":"1905:18:10","nodeType":"YulFunctionCall","src":"1905:18:10"},"nativeSrc":"1905:18:10","nodeType":"YulExpressionStatement","src":"1905:18:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:10","nodeType":"YulLiteral","src":"1943:4:10","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:10","nodeType":"YulLiteral","src":"1949:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:10","nodeType":"YulIdentifier","src":"1936:6:10"},"nativeSrc":"1936:18:10","nodeType":"YulFunctionCall","src":"1936:18:10"},"nativeSrc":"1936:18:10","nodeType":"YulExpressionStatement","src":"1936:18:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1533,"isOffset":false,"isSlot":false,"src":"1918:4:10","valueSize":1}],"flags":["memory-safe"],"id":1536,"nodeType":"InlineAssembly","src":"1829:135:10"}]},"documentation":{"id":1531,"nodeType":"StructuredDocumentation","src":"1658:113:10","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1538,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:10","nodeType":"FunctionDefinition","parameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"mutability":"mutable","name":"code","nameLocation":"1799:4:10","nodeType":"VariableDeclaration","scope":1538,"src":"1791:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1532,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:10"},"returnParameters":{"id":1535,"nodeType":"ParameterList","parameters":[],"src":"1819:0:10"},"scope":1539,"src":"1776:194:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1540,"src":"657:1315:10","usedErrors":[],"usedEvents":[]}],"src":"99:1874:10"},"id":10},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1551]},"id":1552,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1541,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"141:280:11","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1551,"linearizedBaseContracts":[1551],"name":"IERC165","nameLocation":"432:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"446:340:11","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1550,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:11","nodeType":"FunctionDefinition","parameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:11","nodeType":"VariableDeclaration","scope":1550,"src":"818:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1544,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:11"},"returnParameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1550,"src":"861:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1547,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:11"},"scope":1551,"src":"791:76:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1552,"src":"422:447:11","usedErrors":[],"usedEvents":[]}],"src":"115:755:11"},"id":11},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3172],"Panic":[1539],"SafeCast":[4937]},"id":3173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1553,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":1555,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3173,"sourceUnit":1540,"src":"129:35:12","symbolAliases":[{"foreign":{"id":1554,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"137:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":1557,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3173,"sourceUnit":4938,"src":"165:40:12","symbolAliases":[{"foreign":{"id":1556,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"173:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1558,"nodeType":"StructuredDocumentation","src":"207:73:12","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3172,"linearizedBaseContracts":[3172],"name":"Math","nameLocation":"289:4:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1563,"members":[{"id":1559,"name":"Floor","nameLocation":"324:5:12","nodeType":"EnumValue","src":"324:5:12"},{"id":1560,"name":"Ceil","nameLocation":"367:4:12","nodeType":"EnumValue","src":"367:4:12"},{"id":1561,"name":"Trunc","nameLocation":"409:5:12","nodeType":"EnumValue","src":"409:5:12"},{"id":1562,"name":"Expand","nameLocation":"439:6:12","nodeType":"EnumValue","src":"439:6:12"}],"name":"Rounding","nameLocation":"305:8:12","nodeType":"EnumDefinition","src":"300:169:12"},{"body":{"id":1576,"nodeType":"Block","src":"731:112:12","statements":[{"AST":{"nativeSrc":"766:71:12","nodeType":"YulBlock","src":"766:71:12","statements":[{"nativeSrc":"780:16:12","nodeType":"YulAssignment","src":"780:16:12","value":{"arguments":[{"name":"a","nativeSrc":"791:1:12","nodeType":"YulIdentifier","src":"791:1:12"},{"name":"b","nativeSrc":"794:1:12","nodeType":"YulIdentifier","src":"794:1:12"}],"functionName":{"name":"add","nativeSrc":"787:3:12","nodeType":"YulIdentifier","src":"787:3:12"},"nativeSrc":"787:9:12","nodeType":"YulFunctionCall","src":"787:9:12"},"variableNames":[{"name":"low","nativeSrc":"780:3:12","nodeType":"YulIdentifier","src":"780:3:12"}]},{"nativeSrc":"809:18:12","nodeType":"YulAssignment","src":"809:18:12","value":{"arguments":[{"name":"low","nativeSrc":"820:3:12","nodeType":"YulIdentifier","src":"820:3:12"},{"name":"a","nativeSrc":"825:1:12","nodeType":"YulIdentifier","src":"825:1:12"}],"functionName":{"name":"lt","nativeSrc":"817:2:12","nodeType":"YulIdentifier","src":"817:2:12"},"nativeSrc":"817:10:12","nodeType":"YulFunctionCall","src":"817:10:12"},"variableNames":[{"name":"high","nativeSrc":"809:4:12","nodeType":"YulIdentifier","src":"809:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1566,"isOffset":false,"isSlot":false,"src":"791:1:12","valueSize":1},{"declaration":1566,"isOffset":false,"isSlot":false,"src":"825:1:12","valueSize":1},{"declaration":1568,"isOffset":false,"isSlot":false,"src":"794:1:12","valueSize":1},{"declaration":1571,"isOffset":false,"isSlot":false,"src":"809:4:12","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"780:3:12","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"820:3:12","valueSize":1}],"flags":["memory-safe"],"id":1575,"nodeType":"InlineAssembly","src":"741:96:12"}]},"documentation":{"id":1564,"nodeType":"StructuredDocumentation","src":"475:163:12","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":1577,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:12","nodeType":"FunctionDefinition","parameters":{"id":1569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1566,"mutability":"mutable","name":"a","nameLocation":"667:1:12","nodeType":"VariableDeclaration","scope":1577,"src":"659:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1565,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1568,"mutability":"mutable","name":"b","nameLocation":"678:1:12","nodeType":"VariableDeclaration","scope":1577,"src":"670:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1567,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:12"},"returnParameters":{"id":1574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"high","nameLocation":"712:4:12","nodeType":"VariableDeclaration","scope":1577,"src":"704:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1573,"mutability":"mutable","name":"low","nameLocation":"726:3:12","nodeType":"VariableDeclaration","scope":1577,"src":"718:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1572,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:12"},"scope":3172,"src":"643:200:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1590,"nodeType":"Block","src":"1115:462:12","statements":[{"AST":{"nativeSrc":"1437:134:12","nodeType":"YulBlock","src":"1437:134:12","statements":[{"nativeSrc":"1451:30:12","nodeType":"YulVariableDeclaration","src":"1451:30:12","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:12","nodeType":"YulIdentifier","src":"1468:1:12"},{"name":"b","nativeSrc":"1471:1:12","nodeType":"YulIdentifier","src":"1471:1:12"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:12","nodeType":"YulLiteral","src":"1478:1:12","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:12","nodeType":"YulIdentifier","src":"1474:3:12"},"nativeSrc":"1474:6:12","nodeType":"YulFunctionCall","src":"1474:6:12"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:12","nodeType":"YulIdentifier","src":"1461:6:12"},"nativeSrc":"1461:20:12","nodeType":"YulFunctionCall","src":"1461:20:12"},"variables":[{"name":"mm","nativeSrc":"1455:2:12","nodeType":"YulTypedName","src":"1455:2:12","type":""}]},{"nativeSrc":"1494:16:12","nodeType":"YulAssignment","src":"1494:16:12","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:12","nodeType":"YulIdentifier","src":"1505:1:12"},{"name":"b","nativeSrc":"1508:1:12","nodeType":"YulIdentifier","src":"1508:1:12"}],"functionName":{"name":"mul","nativeSrc":"1501:3:12","nodeType":"YulIdentifier","src":"1501:3:12"},"nativeSrc":"1501:9:12","nodeType":"YulFunctionCall","src":"1501:9:12"},"variableNames":[{"name":"low","nativeSrc":"1494:3:12","nodeType":"YulIdentifier","src":"1494:3:12"}]},{"nativeSrc":"1523:38:12","nodeType":"YulAssignment","src":"1523:38:12","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:12","nodeType":"YulIdentifier","src":"1539:2:12"},{"name":"low","nativeSrc":"1543:3:12","nodeType":"YulIdentifier","src":"1543:3:12"}],"functionName":{"name":"sub","nativeSrc":"1535:3:12","nodeType":"YulIdentifier","src":"1535:3:12"},"nativeSrc":"1535:12:12","nodeType":"YulFunctionCall","src":"1535:12:12"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:12","nodeType":"YulIdentifier","src":"1552:2:12"},{"name":"low","nativeSrc":"1556:3:12","nodeType":"YulIdentifier","src":"1556:3:12"}],"functionName":{"name":"lt","nativeSrc":"1549:2:12","nodeType":"YulIdentifier","src":"1549:2:12"},"nativeSrc":"1549:11:12","nodeType":"YulFunctionCall","src":"1549:11:12"}],"functionName":{"name":"sub","nativeSrc":"1531:3:12","nodeType":"YulIdentifier","src":"1531:3:12"},"nativeSrc":"1531:30:12","nodeType":"YulFunctionCall","src":"1531:30:12"},"variableNames":[{"name":"high","nativeSrc":"1523:4:12","nodeType":"YulIdentifier","src":"1523:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1580,"isOffset":false,"isSlot":false,"src":"1468:1:12","valueSize":1},{"declaration":1580,"isOffset":false,"isSlot":false,"src":"1505:1:12","valueSize":1},{"declaration":1582,"isOffset":false,"isSlot":false,"src":"1471:1:12","valueSize":1},{"declaration":1582,"isOffset":false,"isSlot":false,"src":"1508:1:12","valueSize":1},{"declaration":1585,"isOffset":false,"isSlot":false,"src":"1523:4:12","valueSize":1},{"declaration":1587,"isOffset":false,"isSlot":false,"src":"1494:3:12","valueSize":1},{"declaration":1587,"isOffset":false,"isSlot":false,"src":"1543:3:12","valueSize":1},{"declaration":1587,"isOffset":false,"isSlot":false,"src":"1556:3:12","valueSize":1}],"flags":["memory-safe"],"id":1589,"nodeType":"InlineAssembly","src":"1412:159:12"}]},"documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"849:173:12","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":1591,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:12","nodeType":"FunctionDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"a","nameLocation":"1051:1:12","nodeType":"VariableDeclaration","scope":1591,"src":"1043:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"b","nameLocation":"1062:1:12","nodeType":"VariableDeclaration","scope":1591,"src":"1054:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:12"},"returnParameters":{"id":1588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"high","nameLocation":"1096:4:12","nodeType":"VariableDeclaration","scope":1591,"src":"1088:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1584,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1587,"mutability":"mutable","name":"low","nameLocation":"1110:3:12","nodeType":"VariableDeclaration","scope":1591,"src":"1102:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1586,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:12"},"scope":3172,"src":"1027:550:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1625,"nodeType":"Block","src":"1784:149:12","statements":[{"id":1624,"nodeType":"UncheckedBlock","src":"1794:133:12","statements":[{"assignments":[1604],"declarations":[{"constant":false,"id":1604,"mutability":"mutable","name":"c","nameLocation":"1826:1:12","nodeType":"VariableDeclaration","scope":1624,"src":"1818:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1608,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1605,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"1830:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1606,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"1834:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:12"},{"expression":{"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1609,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"1849:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1610,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"1859:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1611,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"1864:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1614,"nodeType":"ExpressionStatement","src":"1849:16:12"},{"expression":{"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"1879:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1616,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"1888:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1619,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"1908:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1617,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"1892:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"1892:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1623,"nodeType":"ExpressionStatement","src":"1879:37:12"}]}]},"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"1583:105:12","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":1626,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:12","nodeType":"FunctionDefinition","parameters":{"id":1597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"a","nameLocation":"1717:1:12","nodeType":"VariableDeclaration","scope":1626,"src":"1709:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1596,"mutability":"mutable","name":"b","nameLocation":"1728:1:12","nodeType":"VariableDeclaration","scope":1626,"src":"1720:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:12"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1599,"mutability":"mutable","name":"success","nameLocation":"1759:7:12","nodeType":"VariableDeclaration","scope":1626,"src":"1754:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1598,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1601,"mutability":"mutable","name":"result","nameLocation":"1776:6:12","nodeType":"VariableDeclaration","scope":1626,"src":"1768:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1600,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:12"},"scope":3172,"src":"1693:240:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1660,"nodeType":"Block","src":"2143:149:12","statements":[{"id":1659,"nodeType":"UncheckedBlock","src":"2153:133:12","statements":[{"assignments":[1639],"declarations":[{"constant":false,"id":1639,"mutability":"mutable","name":"c","nameLocation":"2185:1:12","nodeType":"VariableDeclaration","scope":1659,"src":"2177:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1638,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1643,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1640,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"2189:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1641,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"2193:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:12"},{"expression":{"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1644,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"2208:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1645,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"2218:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1646,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"2223:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1649,"nodeType":"ExpressionStatement","src":"2208:16:12"},{"expression":{"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1650,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"2238:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1651,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"2247:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1654,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"2267:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1652,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"2251:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"2251:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1658,"nodeType":"ExpressionStatement","src":"2238:37:12"}]}]},"documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"1939:108:12","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":1661,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:12","nodeType":"FunctionDefinition","parameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"a","nameLocation":"2076:1:12","nodeType":"VariableDeclaration","scope":1661,"src":"2068:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1631,"mutability":"mutable","name":"b","nameLocation":"2087:1:12","nodeType":"VariableDeclaration","scope":1661,"src":"2079:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1630,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:12"},"returnParameters":{"id":1637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"success","nameLocation":"2118:7:12","nodeType":"VariableDeclaration","scope":1661,"src":"2113:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1633,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1636,"mutability":"mutable","name":"result","nameLocation":"2135:6:12","nodeType":"VariableDeclaration","scope":1661,"src":"2127:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1635,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:12"},"scope":3172,"src":"2052:240:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1690,"nodeType":"Block","src":"2505:391:12","statements":[{"id":1689,"nodeType":"UncheckedBlock","src":"2515:375:12","statements":[{"assignments":[1674],"declarations":[{"constant":false,"id":1674,"mutability":"mutable","name":"c","nameLocation":"2547:1:12","nodeType":"VariableDeclaration","scope":1689,"src":"2539:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1678,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1675,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"2551:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1676,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2555:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:12"},{"AST":{"nativeSrc":"2595:188:12","nodeType":"YulBlock","src":"2595:188:12","statements":[{"nativeSrc":"2727:42:12","nodeType":"YulAssignment","src":"2727:42:12","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:12","nodeType":"YulIdentifier","src":"2748:1:12"},{"name":"a","nativeSrc":"2751:1:12","nodeType":"YulIdentifier","src":"2751:1:12"}],"functionName":{"name":"div","nativeSrc":"2744:3:12","nodeType":"YulIdentifier","src":"2744:3:12"},"nativeSrc":"2744:9:12","nodeType":"YulFunctionCall","src":"2744:9:12"},{"name":"b","nativeSrc":"2755:1:12","nodeType":"YulIdentifier","src":"2755:1:12"}],"functionName":{"name":"eq","nativeSrc":"2741:2:12","nodeType":"YulIdentifier","src":"2741:2:12"},"nativeSrc":"2741:16:12","nodeType":"YulFunctionCall","src":"2741:16:12"},{"arguments":[{"name":"a","nativeSrc":"2766:1:12","nodeType":"YulIdentifier","src":"2766:1:12"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:12","nodeType":"YulIdentifier","src":"2759:6:12"},"nativeSrc":"2759:9:12","nodeType":"YulFunctionCall","src":"2759:9:12"}],"functionName":{"name":"or","nativeSrc":"2738:2:12","nodeType":"YulIdentifier","src":"2738:2:12"},"nativeSrc":"2738:31:12","nodeType":"YulFunctionCall","src":"2738:31:12"},"variableNames":[{"name":"success","nativeSrc":"2727:7:12","nodeType":"YulIdentifier","src":"2727:7:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1664,"isOffset":false,"isSlot":false,"src":"2751:1:12","valueSize":1},{"declaration":1664,"isOffset":false,"isSlot":false,"src":"2766:1:12","valueSize":1},{"declaration":1666,"isOffset":false,"isSlot":false,"src":"2755:1:12","valueSize":1},{"declaration":1674,"isOffset":false,"isSlot":false,"src":"2748:1:12","valueSize":1},{"declaration":1669,"isOffset":false,"isSlot":false,"src":"2727:7:12","valueSize":1}],"flags":["memory-safe"],"id":1679,"nodeType":"InlineAssembly","src":"2570:213:12"},{"expression":{"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1680,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"2842:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1681,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"2851:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1684,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"2871:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1682,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"2855:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"2855:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1688,"nodeType":"ExpressionStatement","src":"2842:37:12"}]}]},"documentation":{"id":1662,"nodeType":"StructuredDocumentation","src":"2298:111:12","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":1691,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:12","nodeType":"FunctionDefinition","parameters":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"a","nameLocation":"2438:1:12","nodeType":"VariableDeclaration","scope":1691,"src":"2430:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1666,"mutability":"mutable","name":"b","nameLocation":"2449:1:12","nodeType":"VariableDeclaration","scope":1691,"src":"2441:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1665,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:12"},"returnParameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"success","nameLocation":"2480:7:12","nodeType":"VariableDeclaration","scope":1691,"src":"2475:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1668,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1671,"mutability":"mutable","name":"result","nameLocation":"2497:6:12","nodeType":"VariableDeclaration","scope":1691,"src":"2489:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1670,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:12"},"scope":3172,"src":"2414:482:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1711,"nodeType":"Block","src":"3111:231:12","statements":[{"id":1710,"nodeType":"UncheckedBlock","src":"3121:215:12","statements":[{"expression":{"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1703,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"3145:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1704,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"3155:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1708,"nodeType":"ExpressionStatement","src":"3145:15:12"},{"AST":{"nativeSrc":"3199:127:12","nodeType":"YulBlock","src":"3199:127:12","statements":[{"nativeSrc":"3293:19:12","nodeType":"YulAssignment","src":"3293:19:12","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:12","nodeType":"YulIdentifier","src":"3307:1:12"},{"name":"b","nativeSrc":"3310:1:12","nodeType":"YulIdentifier","src":"3310:1:12"}],"functionName":{"name":"div","nativeSrc":"3303:3:12","nodeType":"YulIdentifier","src":"3303:3:12"},"nativeSrc":"3303:9:12","nodeType":"YulFunctionCall","src":"3303:9:12"},"variableNames":[{"name":"result","nativeSrc":"3293:6:12","nodeType":"YulIdentifier","src":"3293:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1694,"isOffset":false,"isSlot":false,"src":"3307:1:12","valueSize":1},{"declaration":1696,"isOffset":false,"isSlot":false,"src":"3310:1:12","valueSize":1},{"declaration":1701,"isOffset":false,"isSlot":false,"src":"3293:6:12","valueSize":1}],"flags":["memory-safe"],"id":1709,"nodeType":"InlineAssembly","src":"3174:152:12"}]}]},"documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"2902:113:12","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":1712,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:12","nodeType":"FunctionDefinition","parameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"a","nameLocation":"3044:1:12","nodeType":"VariableDeclaration","scope":1712,"src":"3036:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1693,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1696,"mutability":"mutable","name":"b","nameLocation":"3055:1:12","nodeType":"VariableDeclaration","scope":1712,"src":"3047:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:12"},"returnParameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"success","nameLocation":"3086:7:12","nodeType":"VariableDeclaration","scope":1712,"src":"3081:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1698,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"result","nameLocation":"3103:6:12","nodeType":"VariableDeclaration","scope":1712,"src":"3095:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:12"},"scope":3172,"src":"3020:322:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1732,"nodeType":"Block","src":"3567:231:12","statements":[{"id":1731,"nodeType":"UncheckedBlock","src":"3577:215:12","statements":[{"expression":{"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1724,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"3601:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1725,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"3611:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1729,"nodeType":"ExpressionStatement","src":"3601:15:12"},{"AST":{"nativeSrc":"3655:127:12","nodeType":"YulBlock","src":"3655:127:12","statements":[{"nativeSrc":"3749:19:12","nodeType":"YulAssignment","src":"3749:19:12","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:12","nodeType":"YulIdentifier","src":"3763:1:12"},{"name":"b","nativeSrc":"3766:1:12","nodeType":"YulIdentifier","src":"3766:1:12"}],"functionName":{"name":"mod","nativeSrc":"3759:3:12","nodeType":"YulIdentifier","src":"3759:3:12"},"nativeSrc":"3759:9:12","nodeType":"YulFunctionCall","src":"3759:9:12"},"variableNames":[{"name":"result","nativeSrc":"3749:6:12","nodeType":"YulIdentifier","src":"3749:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1715,"isOffset":false,"isSlot":false,"src":"3763:1:12","valueSize":1},{"declaration":1717,"isOffset":false,"isSlot":false,"src":"3766:1:12","valueSize":1},{"declaration":1722,"isOffset":false,"isSlot":false,"src":"3749:6:12","valueSize":1}],"flags":["memory-safe"],"id":1730,"nodeType":"InlineAssembly","src":"3630:152:12"}]}]},"documentation":{"id":1713,"nodeType":"StructuredDocumentation","src":"3348:123:12","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":1733,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:12","nodeType":"FunctionDefinition","parameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"a","nameLocation":"3500:1:12","nodeType":"VariableDeclaration","scope":1733,"src":"3492:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1717,"mutability":"mutable","name":"b","nameLocation":"3511:1:12","nodeType":"VariableDeclaration","scope":1733,"src":"3503:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1716,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:12"},"returnParameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"success","nameLocation":"3542:7:12","nodeType":"VariableDeclaration","scope":1733,"src":"3537:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1719,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"result","nameLocation":"3559:6:12","nodeType":"VariableDeclaration","scope":1733,"src":"3551:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1721,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:12"},"scope":3172,"src":"3476:322:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1762,"nodeType":"Block","src":"3989:122:12","statements":[{"assignments":[1744,1746],"declarations":[{"constant":false,"id":1744,"mutability":"mutable","name":"success","nameLocation":"4005:7:12","nodeType":"VariableDeclaration","scope":1762,"src":"4000:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1743,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1746,"mutability":"mutable","name":"result","nameLocation":"4022:6:12","nodeType":"VariableDeclaration","scope":1762,"src":"4014:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1751,"initialValue":{"arguments":[{"id":1748,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"4039:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1749,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"4042:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1747,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"4032:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:12"},{"expression":{"arguments":[{"id":1753,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"4069:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1754,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"4078:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":1757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1756,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1755,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:12","memberName":"max","nodeType":"MemberAccess","src":"4086:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1752,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"4061:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1742,"id":1761,"nodeType":"Return","src":"4054:50:12"}]},"documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"3804:103:12","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":1763,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:12","nodeType":"FunctionDefinition","parameters":{"id":1739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"a","nameLocation":"3943:1:12","nodeType":"VariableDeclaration","scope":1763,"src":"3935:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1738,"mutability":"mutable","name":"b","nameLocation":"3954:1:12","nodeType":"VariableDeclaration","scope":1763,"src":"3946:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1737,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:12"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1763,"src":"3980:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1740,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:12"},"scope":3172,"src":"3912:199:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1782,"nodeType":"Block","src":"4294:73:12","statements":[{"assignments":[null,1774],"declarations":[null,{"constant":false,"id":1774,"mutability":"mutable","name":"result","nameLocation":"4315:6:12","nodeType":"VariableDeclaration","scope":1782,"src":"4307:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1773,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1779,"initialValue":{"arguments":[{"id":1776,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"4332:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1777,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"4335:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1775,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"4325:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:12"},{"expression":{"id":1780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"4354:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1772,"id":1781,"nodeType":"Return","src":"4347:13:12"}]},"documentation":{"id":1764,"nodeType":"StructuredDocumentation","src":"4117:95:12","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":1783,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:12","nodeType":"FunctionDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"a","nameLocation":"4248:1:12","nodeType":"VariableDeclaration","scope":1783,"src":"4240:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1765,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1768,"mutability":"mutable","name":"b","nameLocation":"4259:1:12","nodeType":"VariableDeclaration","scope":1783,"src":"4251:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1767,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:12"},"returnParameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1783,"src":"4285:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:12"},"scope":3172,"src":"4217:150:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1812,"nodeType":"Block","src":"4564:122:12","statements":[{"assignments":[1794,1796],"declarations":[{"constant":false,"id":1794,"mutability":"mutable","name":"success","nameLocation":"4580:7:12","nodeType":"VariableDeclaration","scope":1812,"src":"4575:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1793,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1796,"mutability":"mutable","name":"result","nameLocation":"4597:6:12","nodeType":"VariableDeclaration","scope":1812,"src":"4589:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1795,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1801,"initialValue":{"arguments":[{"id":1798,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"4614:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1799,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"4617:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1797,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"4607:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:12"},{"expression":{"arguments":[{"id":1803,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"4644:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1804,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"4653:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":1807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1806,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1805,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:12","memberName":"max","nodeType":"MemberAccess","src":"4661:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1802,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"4636:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1792,"id":1811,"nodeType":"Return","src":"4629:50:12"}]},"documentation":{"id":1784,"nodeType":"StructuredDocumentation","src":"4373:109:12","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":1813,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:12","nodeType":"FunctionDefinition","parameters":{"id":1789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"a","nameLocation":"4518:1:12","nodeType":"VariableDeclaration","scope":1813,"src":"4510:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1788,"mutability":"mutable","name":"b","nameLocation":"4529:1:12","nodeType":"VariableDeclaration","scope":1813,"src":"4521:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1787,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:12"},"returnParameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1813,"src":"4555:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1790,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:12"},"scope":3172,"src":"4487:199:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1839,"nodeType":"Block","src":"5158:207:12","statements":[{"id":1838,"nodeType":"UncheckedBlock","src":"5168:191:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1825,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"5306:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1826,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"5312:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1827,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"5316:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1829,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1832,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"5337:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1830,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"5321:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"5321:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1835,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1824,"id":1837,"nodeType":"Return","src":"5299:49:12"}]}]},"documentation":{"id":1814,"nodeType":"StructuredDocumentation","src":"4692:374:12","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":1840,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:12","nodeType":"FunctionDefinition","parameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"condition","nameLocation":"5093:9:12","nodeType":"VariableDeclaration","scope":1840,"src":"5088:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1815,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"a","nameLocation":"5112:1:12","nodeType":"VariableDeclaration","scope":1840,"src":"5104:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1817,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1820,"mutability":"mutable","name":"b","nameLocation":"5123:1:12","nodeType":"VariableDeclaration","scope":1840,"src":"5115:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:12"},"returnParameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1840,"src":"5149:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1822,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:12"},"scope":3172,"src":"5071:294:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1858,"nodeType":"Block","src":"5502:44:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1851,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"5527:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1852,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"5531:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1854,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"5534:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1855,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"5537:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1850,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"5519:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1849,"id":1857,"nodeType":"Return","src":"5512:27:12"}]},"documentation":{"id":1841,"nodeType":"StructuredDocumentation","src":"5371:59:12","text":" @dev Returns the largest of two numbers."},"id":1859,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:12","nodeType":"FunctionDefinition","parameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"a","nameLocation":"5456:1:12","nodeType":"VariableDeclaration","scope":1859,"src":"5448:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1842,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1845,"mutability":"mutable","name":"b","nameLocation":"5467:1:12","nodeType":"VariableDeclaration","scope":1859,"src":"5459:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1844,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:12"},"returnParameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1859,"src":"5493:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1847,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:12"},"scope":3172,"src":"5435:111:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1877,"nodeType":"Block","src":"5684:44:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1870,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"5709:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1871,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"5713:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1873,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"5716:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1874,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"5719:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1869,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"5701:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1868,"id":1876,"nodeType":"Return","src":"5694:27:12"}]},"documentation":{"id":1860,"nodeType":"StructuredDocumentation","src":"5552:60:12","text":" @dev Returns the smallest of two numbers."},"id":1878,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:12","nodeType":"FunctionDefinition","parameters":{"id":1865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"a","nameLocation":"5638:1:12","nodeType":"VariableDeclaration","scope":1878,"src":"5630:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1861,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1864,"mutability":"mutable","name":"b","nameLocation":"5649:1:12","nodeType":"VariableDeclaration","scope":1878,"src":"5641:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1863,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:12"},"returnParameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1878,"src":"5675:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1866,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:12"},"scope":3172,"src":"5617:111:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1900,"nodeType":"Block","src":"5912:82:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1888,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"5967:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1889,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"5971:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1892,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"5977:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1893,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"5981:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1895,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1887,"id":1899,"nodeType":"Return","src":"5959:28:12"}]},"documentation":{"id":1879,"nodeType":"StructuredDocumentation","src":"5734:102:12","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:12","nodeType":"FunctionDefinition","parameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"a","nameLocation":"5866:1:12","nodeType":"VariableDeclaration","scope":1901,"src":"5858:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1883,"mutability":"mutable","name":"b","nameLocation":"5877:1:12","nodeType":"VariableDeclaration","scope":1901,"src":"5869:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:12"},"returnParameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"5903:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:12"},"scope":3172,"src":"5841:153:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1941,"nodeType":"Block","src":"6286:633:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1911,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"6300:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1922,"nodeType":"IfStatement","src":"6296:150:12","trueBody":{"id":1921,"nodeType":"Block","src":"6308:138:12","statements":[{"expression":{"arguments":[{"expression":{"id":1917,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"6412:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1539_$","typeString":"type(library Panic)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1506,"src":"6412:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1914,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"6400:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1539_$","typeString":"type(library Panic)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1538,"src":"6400:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1920,"nodeType":"ExpressionStatement","src":"6400:35:12"}]}},{"id":1940,"nodeType":"UncheckedBlock","src":"6829:84:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1925,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"6876:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1923,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"6860:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"6860:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1929,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"6887:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1933,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"6896:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1937,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1910,"id":1939,"nodeType":"Return","src":"6853:49:12"}]}]},"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"6000:210:12","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":1942,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:12","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"a","nameLocation":"6240:1:12","nodeType":"VariableDeclaration","scope":1942,"src":"6232:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"b","nameLocation":"6251:1:12","nodeType":"VariableDeclaration","scope":1942,"src":"6243:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:12"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1942,"src":"6277:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:12"},"scope":3172,"src":"6215:704:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2077,"nodeType":"Block","src":"7340:3585:12","statements":[{"id":2076,"nodeType":"UncheckedBlock","src":"7350:3569:12","statements":[{"assignments":[1955,1957],"declarations":[{"constant":false,"id":1955,"mutability":"mutable","name":"high","nameLocation":"7383:4:12","nodeType":"VariableDeclaration","scope":2076,"src":"7375:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1954,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1957,"mutability":"mutable","name":"low","nameLocation":"7397:3:12","nodeType":"VariableDeclaration","scope":2076,"src":"7389:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1956,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1962,"initialValue":{"arguments":[{"id":1959,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"7411:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1960,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"7414:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1958,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"7404:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1963,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"7498:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1971,"nodeType":"IfStatement","src":"7494:365:12","trueBody":{"id":1970,"nodeType":"Block","src":"7509:350:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1966,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"7827:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1967,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"7833:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1953,"id":1969,"nodeType":"Return","src":"7820:24:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1972,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"7969:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1973,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"7984:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1990,"nodeType":"IfStatement","src":"7965:142:12","trueBody":{"id":1989,"nodeType":"Block","src":"7990:117:12","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1979,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"8028:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1982,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"8046:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1539_$","typeString":"type(library Panic)"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1506,"src":"8046:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1984,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"8070:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1539_$","typeString":"type(library Panic)"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:12","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1502,"src":"8070:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1978,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"8020:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1975,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"8008:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1539_$","typeString":"type(library Panic)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1538,"src":"8008:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1988,"nodeType":"ExpressionStatement","src":"8008:84:12"}]}},{"assignments":[1992],"declarations":[{"constant":false,"id":1992,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:12","nodeType":"VariableDeclaration","scope":2076,"src":"8359:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1991,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1993,"nodeType":"VariableDeclarationStatement","src":"8359:17:12"},{"AST":{"nativeSrc":"8415:283:12","nodeType":"YulBlock","src":"8415:283:12","statements":[{"nativeSrc":"8484:38:12","nodeType":"YulAssignment","src":"8484:38:12","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:12","nodeType":"YulIdentifier","src":"8504:1:12"},{"name":"y","nativeSrc":"8507:1:12","nodeType":"YulIdentifier","src":"8507:1:12"},{"name":"denominator","nativeSrc":"8510:11:12","nodeType":"YulIdentifier","src":"8510:11:12"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:12","nodeType":"YulIdentifier","src":"8497:6:12"},"nativeSrc":"8497:25:12","nodeType":"YulFunctionCall","src":"8497:25:12"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:12","nodeType":"YulIdentifier","src":"8484:9:12"}]},{"nativeSrc":"8604:37:12","nodeType":"YulAssignment","src":"8604:37:12","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:12","nodeType":"YulIdentifier","src":"8616:4:12"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:12","nodeType":"YulIdentifier","src":"8625:9:12"},{"name":"low","nativeSrc":"8636:3:12","nodeType":"YulIdentifier","src":"8636:3:12"}],"functionName":{"name":"gt","nativeSrc":"8622:2:12","nodeType":"YulIdentifier","src":"8622:2:12"},"nativeSrc":"8622:18:12","nodeType":"YulFunctionCall","src":"8622:18:12"}],"functionName":{"name":"sub","nativeSrc":"8612:3:12","nodeType":"YulIdentifier","src":"8612:3:12"},"nativeSrc":"8612:29:12","nodeType":"YulFunctionCall","src":"8612:29:12"},"variableNames":[{"name":"high","nativeSrc":"8604:4:12","nodeType":"YulIdentifier","src":"8604:4:12"}]},{"nativeSrc":"8658:26:12","nodeType":"YulAssignment","src":"8658:26:12","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:12","nodeType":"YulIdentifier","src":"8669:3:12"},{"name":"remainder","nativeSrc":"8674:9:12","nodeType":"YulIdentifier","src":"8674:9:12"}],"functionName":{"name":"sub","nativeSrc":"8665:3:12","nodeType":"YulIdentifier","src":"8665:3:12"},"nativeSrc":"8665:19:12","nodeType":"YulFunctionCall","src":"8665:19:12"},"variableNames":[{"name":"low","nativeSrc":"8658:3:12","nodeType":"YulIdentifier","src":"8658:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1949,"isOffset":false,"isSlot":false,"src":"8510:11:12","valueSize":1},{"declaration":1955,"isOffset":false,"isSlot":false,"src":"8604:4:12","valueSize":1},{"declaration":1955,"isOffset":false,"isSlot":false,"src":"8616:4:12","valueSize":1},{"declaration":1957,"isOffset":false,"isSlot":false,"src":"8636:3:12","valueSize":1},{"declaration":1957,"isOffset":false,"isSlot":false,"src":"8658:3:12","valueSize":1},{"declaration":1957,"isOffset":false,"isSlot":false,"src":"8669:3:12","valueSize":1},{"declaration":1992,"isOffset":false,"isSlot":false,"src":"8484:9:12","valueSize":1},{"declaration":1992,"isOffset":false,"isSlot":false,"src":"8625:9:12","valueSize":1},{"declaration":1992,"isOffset":false,"isSlot":false,"src":"8674:9:12","valueSize":1},{"declaration":1945,"isOffset":false,"isSlot":false,"src":"8504:1:12","valueSize":1},{"declaration":1947,"isOffset":false,"isSlot":false,"src":"8507:1:12","valueSize":1}],"flags":["memory-safe"],"id":1994,"nodeType":"InlineAssembly","src":"8390:308:12"},{"assignments":[1996],"declarations":[{"constant":false,"id":1996,"mutability":"mutable","name":"twos","nameLocation":"8910:4:12","nodeType":"VariableDeclaration","scope":2076,"src":"8902:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2003,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1997,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"8917:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1999,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"8936:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:12"},{"AST":{"nativeSrc":"8987:359:12","nodeType":"YulBlock","src":"8987:359:12","statements":[{"nativeSrc":"9052:37:12","nodeType":"YulAssignment","src":"9052:37:12","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:12","nodeType":"YulIdentifier","src":"9071:11:12"},{"name":"twos","nativeSrc":"9084:4:12","nodeType":"YulIdentifier","src":"9084:4:12"}],"functionName":{"name":"div","nativeSrc":"9067:3:12","nodeType":"YulIdentifier","src":"9067:3:12"},"nativeSrc":"9067:22:12","nodeType":"YulFunctionCall","src":"9067:22:12"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:12","nodeType":"YulIdentifier","src":"9052:11:12"}]},{"nativeSrc":"9153:21:12","nodeType":"YulAssignment","src":"9153:21:12","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:12","nodeType":"YulIdentifier","src":"9164:3:12"},{"name":"twos","nativeSrc":"9169:4:12","nodeType":"YulIdentifier","src":"9169:4:12"}],"functionName":{"name":"div","nativeSrc":"9160:3:12","nodeType":"YulIdentifier","src":"9160:3:12"},"nativeSrc":"9160:14:12","nodeType":"YulFunctionCall","src":"9160:14:12"},"variableNames":[{"name":"low","nativeSrc":"9153:3:12","nodeType":"YulIdentifier","src":"9153:3:12"}]},{"nativeSrc":"9293:39:12","nodeType":"YulAssignment","src":"9293:39:12","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:12","nodeType":"YulLiteral","src":"9313:1:12","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:12","nodeType":"YulIdentifier","src":"9316:4:12"}],"functionName":{"name":"sub","nativeSrc":"9309:3:12","nodeType":"YulIdentifier","src":"9309:3:12"},"nativeSrc":"9309:12:12","nodeType":"YulFunctionCall","src":"9309:12:12"},{"name":"twos","nativeSrc":"9323:4:12","nodeType":"YulIdentifier","src":"9323:4:12"}],"functionName":{"name":"div","nativeSrc":"9305:3:12","nodeType":"YulIdentifier","src":"9305:3:12"},"nativeSrc":"9305:23:12","nodeType":"YulFunctionCall","src":"9305:23:12"},{"kind":"number","nativeSrc":"9330:1:12","nodeType":"YulLiteral","src":"9330:1:12","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:12","nodeType":"YulIdentifier","src":"9301:3:12"},"nativeSrc":"9301:31:12","nodeType":"YulFunctionCall","src":"9301:31:12"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:12","nodeType":"YulIdentifier","src":"9293:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1949,"isOffset":false,"isSlot":false,"src":"9052:11:12","valueSize":1},{"declaration":1949,"isOffset":false,"isSlot":false,"src":"9071:11:12","valueSize":1},{"declaration":1957,"isOffset":false,"isSlot":false,"src":"9153:3:12","valueSize":1},{"declaration":1957,"isOffset":false,"isSlot":false,"src":"9164:3:12","valueSize":1},{"declaration":1996,"isOffset":false,"isSlot":false,"src":"9084:4:12","valueSize":1},{"declaration":1996,"isOffset":false,"isSlot":false,"src":"9169:4:12","valueSize":1},{"declaration":1996,"isOffset":false,"isSlot":false,"src":"9293:4:12","valueSize":1},{"declaration":1996,"isOffset":false,"isSlot":false,"src":"9316:4:12","valueSize":1},{"declaration":1996,"isOffset":false,"isSlot":false,"src":"9323:4:12","valueSize":1}],"flags":["memory-safe"],"id":2004,"nodeType":"InlineAssembly","src":"8962:384:12"},{"expression":{"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2005,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"9409:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2006,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"9416:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2007,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"9423:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2010,"nodeType":"ExpressionStatement","src":"9409:18:12"},{"assignments":[2012],"declarations":[{"constant":false,"id":2012,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:12","nodeType":"VariableDeclaration","scope":2076,"src":"9762:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2011,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2019,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2014,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"9785:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2016,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:12"},{"expression":{"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2020,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"10018:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2022,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"10033:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2023,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"10047:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2027,"nodeType":"ExpressionStatement","src":"10018:36:12"},{"expression":{"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2028,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"10088:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2030,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"10103:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2031,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"10117:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2035,"nodeType":"ExpressionStatement","src":"10088:36:12"},{"expression":{"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2036,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"10160:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2038,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"10175:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2039,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"10189:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2043,"nodeType":"ExpressionStatement","src":"10160:36:12"},{"expression":{"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2044,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"10231:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2046,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"10246:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2047,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"10260:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2051,"nodeType":"ExpressionStatement","src":"10231:36:12"},{"expression":{"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2052,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"10304:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2054,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"10319:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2055,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"10333:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2059,"nodeType":"ExpressionStatement","src":"10304:36:12"},{"expression":{"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2060,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"10378:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2062,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"10393:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2063,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"10407:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2067,"nodeType":"ExpressionStatement","src":"10378:36:12"},{"expression":{"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2068,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"10859:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2069,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"10868:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2070,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"10874:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2073,"nodeType":"ExpressionStatement","src":"10859:22:12"},{"expression":{"id":2074,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"10902:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1953,"id":2075,"nodeType":"Return","src":"10895:13:12"}]}]},"documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"6925:312:12","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2078,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:12","nodeType":"FunctionDefinition","parameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"mutability":"mutable","name":"x","nameLocation":"7266:1:12","nodeType":"VariableDeclaration","scope":2078,"src":"7258:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1944,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1947,"mutability":"mutable","name":"y","nameLocation":"7277:1:12","nodeType":"VariableDeclaration","scope":2078,"src":"7269:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1946,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1949,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:12","nodeType":"VariableDeclaration","scope":2078,"src":"7280:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:12"},"returnParameters":{"id":1953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1952,"mutability":"mutable","name":"result","nameLocation":"7332:6:12","nodeType":"VariableDeclaration","scope":2078,"src":"7324:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1951,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:12"},"scope":3172,"src":"7242:3683:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2114,"nodeType":"Block","src":"11164:128:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2094,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"11188:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2095,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"11191:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2096,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"11194:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2093,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2078,2115],"referencedDeclaration":2078,"src":"11181:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2101,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"11242:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}],"id":2100,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"11225:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1563_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2104,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"11262:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2105,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"11265:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2106,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"11268:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2103,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:12","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2098,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"11209:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"11209:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2092,"id":2113,"nodeType":"Return","src":"11174:111:12"}]},"documentation":{"id":2079,"nodeType":"StructuredDocumentation","src":"10931:118:12","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2115,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:12","nodeType":"FunctionDefinition","parameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"x","nameLocation":"11078:1:12","nodeType":"VariableDeclaration","scope":2115,"src":"11070:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2080,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2083,"mutability":"mutable","name":"y","nameLocation":"11089:1:12","nodeType":"VariableDeclaration","scope":2115,"src":"11081:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2082,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2085,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:12","nodeType":"VariableDeclaration","scope":2115,"src":"11092:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2084,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2088,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:12","nodeType":"VariableDeclaration","scope":2115,"src":"11113:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"},"typeName":{"id":2087,"nodeType":"UserDefinedTypeName","pathNode":{"id":2086,"name":"Rounding","nameLocations":["11113:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1563,"src":"11113:8:12"},"referencedDeclaration":1563,"src":"11113:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:12"},"returnParameters":{"id":2092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2115,"src":"11155:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2090,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:12"},"scope":3172,"src":"11054:238:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2164,"nodeType":"Block","src":"11500:245:12","statements":[{"id":2163,"nodeType":"UncheckedBlock","src":"11510:229:12","statements":[{"assignments":[2128,2130],"declarations":[{"constant":false,"id":2128,"mutability":"mutable","name":"high","nameLocation":"11543:4:12","nodeType":"VariableDeclaration","scope":2163,"src":"11535:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2127,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2130,"mutability":"mutable","name":"low","nameLocation":"11557:3:12","nodeType":"VariableDeclaration","scope":2163,"src":"11549:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2135,"initialValue":{"arguments":[{"id":2132,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"11571:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2133,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"11574:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2131,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"11564:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2136,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"11594:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2138,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"11607:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2149,"nodeType":"IfStatement","src":"11590:86:12","trueBody":{"id":2148,"nodeType":"Block","src":"11610:66:12","statements":[{"expression":{"arguments":[{"expression":{"id":2144,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"11640:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1539_$","typeString":"type(library Panic)"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:12","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1502,"src":"11640:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2141,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"11628:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1539_$","typeString":"type(library Panic)"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1538,"src":"11628:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2147,"nodeType":"ExpressionStatement","src":"11628:33:12"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2150,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"11697:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2152,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"11712:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":2154,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2156,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2157,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"11719:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2158,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"11726:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2126,"id":2162,"nodeType":"Return","src":"11689:39:12"}]}]},"documentation":{"id":2116,"nodeType":"StructuredDocumentation","src":"11298:111:12","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":2165,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:12","nodeType":"FunctionDefinition","parameters":{"id":2123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"x","nameLocation":"11438:1:12","nodeType":"VariableDeclaration","scope":2165,"src":"11430:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2120,"mutability":"mutable","name":"y","nameLocation":"11449:1:12","nodeType":"VariableDeclaration","scope":2165,"src":"11441:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2119,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2122,"mutability":"mutable","name":"n","nameLocation":"11458:1:12","nodeType":"VariableDeclaration","scope":2165,"src":"11452:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2121,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:12"},"returnParameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2125,"mutability":"mutable","name":"result","nameLocation":"11492:6:12","nodeType":"VariableDeclaration","scope":2165,"src":"11484:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2124,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:12"},"scope":3172,"src":"11414:331:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2203,"nodeType":"Block","src":"11963:113:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2181,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"11987:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2182,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"11990:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2183,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"11993:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2180,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[2165,2204],"referencedDeclaration":2165,"src":"11980:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2188,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"12031:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}],"id":2187,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"12014:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1563_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2191,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"12051:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2192,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"12054:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2194,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"12062:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2190,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:12","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2185,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"11998:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"11998:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2179,"id":2202,"nodeType":"Return","src":"11973:96:12"}]},"documentation":{"id":2166,"nodeType":"StructuredDocumentation","src":"11751:109:12","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":2204,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:12","nodeType":"FunctionDefinition","parameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"x","nameLocation":"11889:1:12","nodeType":"VariableDeclaration","scope":2204,"src":"11881:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2167,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2170,"mutability":"mutable","name":"y","nameLocation":"11900:1:12","nodeType":"VariableDeclaration","scope":2204,"src":"11892:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2169,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2172,"mutability":"mutable","name":"n","nameLocation":"11909:1:12","nodeType":"VariableDeclaration","scope":2204,"src":"11903:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2171,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2175,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:12","nodeType":"VariableDeclaration","scope":2204,"src":"11912:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"},"typeName":{"id":2174,"nodeType":"UserDefinedTypeName","pathNode":{"id":2173,"name":"Rounding","nameLocations":["11912:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1563,"src":"11912:8:12"},"referencedDeclaration":1563,"src":"11912:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:12"},"returnParameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2204,"src":"11954:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2177,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:12"},"scope":3172,"src":"11865:211:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2300,"nodeType":"Block","src":"12710:1849:12","statements":[{"id":2299,"nodeType":"UncheckedBlock","src":"12720:1833:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2214,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"12748:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2219,"nodeType":"IfStatement","src":"12744:20:12","trueBody":{"expression":{"hexValue":"30","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2213,"id":2218,"nodeType":"Return","src":"12756:8:12"}},{"assignments":[2221],"declarations":[{"constant":false,"id":2221,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:12","nodeType":"VariableDeclaration","scope":2299,"src":"13235:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2220,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2225,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2222,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"13255:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2223,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"13259:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:12"},{"assignments":[2227],"declarations":[{"constant":false,"id":2227,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:12","nodeType":"VariableDeclaration","scope":2299,"src":"13274:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2226,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2229,"initialValue":{"id":2228,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"13288:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:12"},{"assignments":[2231],"declarations":[{"constant":false,"id":2231,"mutability":"mutable","name":"x","nameLocation":"13432:1:12","nodeType":"VariableDeclaration","scope":2299,"src":"13425:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2230,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2233,"initialValue":{"hexValue":"30","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:12"},{"assignments":[2235],"declarations":[{"constant":false,"id":2235,"mutability":"mutable","name":"y","nameLocation":"13458:1:12","nodeType":"VariableDeclaration","scope":2299,"src":"13451:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2234,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2237,"initialValue":{"hexValue":"31","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:12"},{"body":{"id":2274,"nodeType":"Block","src":"13501:882:12","statements":[{"assignments":[2242],"declarations":[{"constant":false,"id":2242,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:12","nodeType":"VariableDeclaration","scope":2274,"src":"13519:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2241,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2246,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2243,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"13538:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2244,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"13544:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:12"},{"expression":{"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2247,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"13573:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2248,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"13578:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2249,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2250,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"13678:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2251,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"13923:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2252,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"13929:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2253,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"13941:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2256,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2258,"nodeType":"ExpressionStatement","src":"13572:395:12"},{"expression":{"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2259,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"13987:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":2260,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"13990:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2261,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2262,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"14072:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2263,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"14326:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2264,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"14330:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2267,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"14341:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2265,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:12","typeDescriptions":{}}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2271,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2273,"nodeType":"ExpressionStatement","src":"13986:382:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2238,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"13485:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2275,"nodeType":"WhileStatement","src":"13478:905:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2276,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"14401:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2281,"nodeType":"IfStatement","src":"14397:22:12","trueBody":{"expression":{"hexValue":"30","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2213,"id":2280,"nodeType":"Return","src":"14411:8:12"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2283,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"14470:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2286,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"14477:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:12","subExpression":{"id":2289,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"14490:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2287,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:12","typeDescriptions":{}}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2295,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"14502:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2293,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:12","typeDescriptions":{}}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2282,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"14462:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2213,"id":2298,"nodeType":"Return","src":"14455:50:12"}]}]},"documentation":{"id":2205,"nodeType":"StructuredDocumentation","src":"12082:553:12","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":2301,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:12","nodeType":"FunctionDefinition","parameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2207,"mutability":"mutable","name":"a","nameLocation":"12664:1:12","nodeType":"VariableDeclaration","scope":2301,"src":"12656:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2206,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2209,"mutability":"mutable","name":"n","nameLocation":"12675:1:12","nodeType":"VariableDeclaration","scope":2301,"src":"12667:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2208,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:12"},"returnParameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2301,"src":"12701:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2211,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:12"},"scope":3172,"src":"12640:1919:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2321,"nodeType":"Block","src":"15159:82:12","statements":[{"id":2320,"nodeType":"UncheckedBlock","src":"15169:66:12","statements":[{"expression":{"arguments":[{"id":2313,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"15212:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2314,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"15215:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2317,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"15222:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2311,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"15200:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3172_$","typeString":"type(library Math)"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:12","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":2358,"src":"15200:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2310,"id":2319,"nodeType":"Return","src":"15193:31:12"}]}]},"documentation":{"id":2302,"nodeType":"StructuredDocumentation","src":"14565:514:12","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":2322,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:12","nodeType":"FunctionDefinition","parameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"mutability":"mutable","name":"a","nameLocation":"15113:1:12","nodeType":"VariableDeclaration","scope":2322,"src":"15105:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2303,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2306,"mutability":"mutable","name":"p","nameLocation":"15124:1:12","nodeType":"VariableDeclaration","scope":2322,"src":"15116:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:12"},"returnParameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2322,"src":"15150:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:12"},"scope":3172,"src":"15084:157:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2357,"nodeType":"Block","src":"16011:174:12","statements":[{"assignments":[2335,2337],"declarations":[{"constant":false,"id":2335,"mutability":"mutable","name":"success","nameLocation":"16027:7:12","nodeType":"VariableDeclaration","scope":2357,"src":"16022:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2334,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2337,"mutability":"mutable","name":"result","nameLocation":"16044:6:12","nodeType":"VariableDeclaration","scope":2357,"src":"16036:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2343,"initialValue":{"arguments":[{"id":2339,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"16064:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2340,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"16067:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2341,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"16070:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2338,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[2382,2464],"referencedDeclaration":2382,"src":"16054:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:12"},{"condition":{"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:12","subExpression":{"id":2344,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"16087:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2354,"nodeType":"IfStatement","src":"16082:74:12","trueBody":{"id":2353,"nodeType":"Block","src":"16096:60:12","statements":[{"expression":{"arguments":[{"expression":{"id":2349,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"16122:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1539_$","typeString":"type(library Panic)"}},"id":2350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1506,"src":"16122:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2346,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"16110:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1539_$","typeString":"type(library Panic)"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1538,"src":"16110:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2352,"nodeType":"ExpressionStatement","src":"16110:35:12"}]}},{"expression":{"id":2355,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"16172:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2333,"id":2356,"nodeType":"Return","src":"16165:13:12"}]},"documentation":{"id":2323,"nodeType":"StructuredDocumentation","src":"15247:678:12","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":2358,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:12","nodeType":"FunctionDefinition","parameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"b","nameLocation":"15954:1:12","nodeType":"VariableDeclaration","scope":2358,"src":"15946:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2324,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2327,"mutability":"mutable","name":"e","nameLocation":"15965:1:12","nodeType":"VariableDeclaration","scope":2358,"src":"15957:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2329,"mutability":"mutable","name":"m","nameLocation":"15976:1:12","nodeType":"VariableDeclaration","scope":2358,"src":"15968:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2328,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:12"},"returnParameters":{"id":2333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2358,"src":"16002:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2331,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:12"},"scope":3172,"src":"15930:255:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2381,"nodeType":"Block","src":"17039:1493:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2372,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"17053:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2379,"nodeType":"IfStatement","src":"17049:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2377,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2371,"id":2378,"nodeType":"Return","src":"17061:17:12"}},{"AST":{"nativeSrc":"17113:1413:12","nodeType":"YulBlock","src":"17113:1413:12","statements":[{"nativeSrc":"17127:22:12","nodeType":"YulVariableDeclaration","src":"17127:22:12","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:12","nodeType":"YulLiteral","src":"17144:4:12","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:12","nodeType":"YulIdentifier","src":"17138:5:12"},"nativeSrc":"17138:11:12","nodeType":"YulFunctionCall","src":"17138:11:12"},"variables":[{"name":"ptr","nativeSrc":"17131:3:12","nodeType":"YulTypedName","src":"17131:3:12","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:12","nodeType":"YulIdentifier","src":"18057:3:12"},{"kind":"number","nativeSrc":"18062:4:12","nodeType":"YulLiteral","src":"18062:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:12","nodeType":"YulIdentifier","src":"18050:6:12"},"nativeSrc":"18050:17:12","nodeType":"YulFunctionCall","src":"18050:17:12"},"nativeSrc":"18050:17:12","nodeType":"YulExpressionStatement","src":"18050:17:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:12","nodeType":"YulIdentifier","src":"18091:3:12"},{"kind":"number","nativeSrc":"18096:4:12","nodeType":"YulLiteral","src":"18096:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:12","nodeType":"YulIdentifier","src":"18087:3:12"},"nativeSrc":"18087:14:12","nodeType":"YulFunctionCall","src":"18087:14:12"},{"kind":"number","nativeSrc":"18103:4:12","nodeType":"YulLiteral","src":"18103:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:12","nodeType":"YulIdentifier","src":"18080:6:12"},"nativeSrc":"18080:28:12","nodeType":"YulFunctionCall","src":"18080:28:12"},"nativeSrc":"18080:28:12","nodeType":"YulExpressionStatement","src":"18080:28:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:12","nodeType":"YulIdentifier","src":"18132:3:12"},{"kind":"number","nativeSrc":"18137:4:12","nodeType":"YulLiteral","src":"18137:4:12","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:12","nodeType":"YulIdentifier","src":"18128:3:12"},"nativeSrc":"18128:14:12","nodeType":"YulFunctionCall","src":"18128:14:12"},{"kind":"number","nativeSrc":"18144:4:12","nodeType":"YulLiteral","src":"18144:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:12","nodeType":"YulIdentifier","src":"18121:6:12"},"nativeSrc":"18121:28:12","nodeType":"YulFunctionCall","src":"18121:28:12"},"nativeSrc":"18121:28:12","nodeType":"YulExpressionStatement","src":"18121:28:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:12","nodeType":"YulIdentifier","src":"18173:3:12"},{"kind":"number","nativeSrc":"18178:4:12","nodeType":"YulLiteral","src":"18178:4:12","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:12","nodeType":"YulIdentifier","src":"18169:3:12"},"nativeSrc":"18169:14:12","nodeType":"YulFunctionCall","src":"18169:14:12"},{"name":"b","nativeSrc":"18185:1:12","nodeType":"YulIdentifier","src":"18185:1:12"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:12","nodeType":"YulIdentifier","src":"18162:6:12"},"nativeSrc":"18162:25:12","nodeType":"YulFunctionCall","src":"18162:25:12"},"nativeSrc":"18162:25:12","nodeType":"YulExpressionStatement","src":"18162:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:12","nodeType":"YulIdentifier","src":"18211:3:12"},{"kind":"number","nativeSrc":"18216:4:12","nodeType":"YulLiteral","src":"18216:4:12","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:12","nodeType":"YulIdentifier","src":"18207:3:12"},"nativeSrc":"18207:14:12","nodeType":"YulFunctionCall","src":"18207:14:12"},{"name":"e","nativeSrc":"18223:1:12","nodeType":"YulIdentifier","src":"18223:1:12"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:12","nodeType":"YulIdentifier","src":"18200:6:12"},"nativeSrc":"18200:25:12","nodeType":"YulFunctionCall","src":"18200:25:12"},"nativeSrc":"18200:25:12","nodeType":"YulExpressionStatement","src":"18200:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:12","nodeType":"YulIdentifier","src":"18249:3:12"},{"kind":"number","nativeSrc":"18254:4:12","nodeType":"YulLiteral","src":"18254:4:12","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:12","nodeType":"YulIdentifier","src":"18245:3:12"},"nativeSrc":"18245:14:12","nodeType":"YulFunctionCall","src":"18245:14:12"},{"name":"m","nativeSrc":"18261:1:12","nodeType":"YulIdentifier","src":"18261:1:12"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:12","nodeType":"YulIdentifier","src":"18238:6:12"},"nativeSrc":"18238:25:12","nodeType":"YulFunctionCall","src":"18238:25:12"},"nativeSrc":"18238:25:12","nodeType":"YulExpressionStatement","src":"18238:25:12"},{"nativeSrc":"18425:57:12","nodeType":"YulAssignment","src":"18425:57:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:12","nodeType":"YulIdentifier","src":"18447:3:12"},"nativeSrc":"18447:5:12","nodeType":"YulFunctionCall","src":"18447:5:12"},{"kind":"number","nativeSrc":"18454:4:12","nodeType":"YulLiteral","src":"18454:4:12","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:12","nodeType":"YulIdentifier","src":"18460:3:12"},{"kind":"number","nativeSrc":"18465:4:12","nodeType":"YulLiteral","src":"18465:4:12","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:12","nodeType":"YulLiteral","src":"18471:4:12","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:12","nodeType":"YulLiteral","src":"18477:4:12","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:12","nodeType":"YulIdentifier","src":"18436:10:12"},"nativeSrc":"18436:46:12","nodeType":"YulFunctionCall","src":"18436:46:12"},"variableNames":[{"name":"success","nativeSrc":"18425:7:12","nodeType":"YulIdentifier","src":"18425:7:12"}]},{"nativeSrc":"18495:21:12","nodeType":"YulAssignment","src":"18495:21:12","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:12","nodeType":"YulLiteral","src":"18511:4:12","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:12","nodeType":"YulIdentifier","src":"18505:5:12"},"nativeSrc":"18505:11:12","nodeType":"YulFunctionCall","src":"18505:11:12"},"variableNames":[{"name":"result","nativeSrc":"18495:6:12","nodeType":"YulIdentifier","src":"18495:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2361,"isOffset":false,"isSlot":false,"src":"18185:1:12","valueSize":1},{"declaration":2363,"isOffset":false,"isSlot":false,"src":"18223:1:12","valueSize":1},{"declaration":2365,"isOffset":false,"isSlot":false,"src":"18261:1:12","valueSize":1},{"declaration":2370,"isOffset":false,"isSlot":false,"src":"18495:6:12","valueSize":1},{"declaration":2368,"isOffset":false,"isSlot":false,"src":"18425:7:12","valueSize":1}],"flags":["memory-safe"],"id":2380,"nodeType":"InlineAssembly","src":"17088:1438:12"}]},"documentation":{"id":2359,"nodeType":"StructuredDocumentation","src":"16191:738:12","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":2382,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:12","nodeType":"FunctionDefinition","parameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2361,"mutability":"mutable","name":"b","nameLocation":"16961:1:12","nodeType":"VariableDeclaration","scope":2382,"src":"16953:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2360,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2363,"mutability":"mutable","name":"e","nameLocation":"16972:1:12","nodeType":"VariableDeclaration","scope":2382,"src":"16964:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2365,"mutability":"mutable","name":"m","nameLocation":"16983:1:12","nodeType":"VariableDeclaration","scope":2382,"src":"16975:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2364,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:12"},"returnParameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"success","nameLocation":"17014:7:12","nodeType":"VariableDeclaration","scope":2382,"src":"17009:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2367,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2370,"mutability":"mutable","name":"result","nameLocation":"17031:6:12","nodeType":"VariableDeclaration","scope":2382,"src":"17023:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:12"},"scope":3172,"src":"16934:1598:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2417,"nodeType":"Block","src":"18729:179:12","statements":[{"assignments":[2395,2397],"declarations":[{"constant":false,"id":2395,"mutability":"mutable","name":"success","nameLocation":"18745:7:12","nodeType":"VariableDeclaration","scope":2417,"src":"18740:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2394,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2397,"mutability":"mutable","name":"result","nameLocation":"18767:6:12","nodeType":"VariableDeclaration","scope":2417,"src":"18754:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2396,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2403,"initialValue":{"arguments":[{"id":2399,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"18787:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2400,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"18790:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2401,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"18793:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2398,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[2382,2464],"referencedDeclaration":2464,"src":"18777:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:12"},{"condition":{"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:12","subExpression":{"id":2404,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"18810:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2414,"nodeType":"IfStatement","src":"18805:74:12","trueBody":{"id":2413,"nodeType":"Block","src":"18819:60:12","statements":[{"expression":{"arguments":[{"expression":{"id":2409,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"18845:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1539_$","typeString":"type(library Panic)"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1506,"src":"18845:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2406,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"18833:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1539_$","typeString":"type(library Panic)"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1538,"src":"18833:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2412,"nodeType":"ExpressionStatement","src":"18833:35:12"}]}},{"expression":{"id":2415,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"18895:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2393,"id":2416,"nodeType":"Return","src":"18888:13:12"}]},"documentation":{"id":2383,"nodeType":"StructuredDocumentation","src":"18538:85:12","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":2418,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:12","nodeType":"FunctionDefinition","parameters":{"id":2390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"b","nameLocation":"18657:1:12","nodeType":"VariableDeclaration","scope":2418,"src":"18644:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2384,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2387,"mutability":"mutable","name":"e","nameLocation":"18673:1:12","nodeType":"VariableDeclaration","scope":2418,"src":"18660:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2386,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2389,"mutability":"mutable","name":"m","nameLocation":"18689:1:12","nodeType":"VariableDeclaration","scope":2418,"src":"18676:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2388,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:12"},"returnParameters":{"id":2393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2418,"src":"18715:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2391,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:12"},"scope":3172,"src":"18628:280:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2463,"nodeType":"Block","src":"19162:771:12","statements":[{"condition":{"arguments":[{"id":2433,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"19187:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2432,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"19176:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2442,"nodeType":"IfStatement","src":"19172:47:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2436,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":2440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":2431,"id":2441,"nodeType":"Return","src":"19191:28:12"}},{"assignments":[2444],"declarations":[{"constant":false,"id":2444,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:12","nodeType":"VariableDeclaration","scope":2463,"src":"19230:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2443,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2447,"initialValue":{"expression":{"id":2445,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"19245:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:12","memberName":"length","nodeType":"MemberAccess","src":"19245:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:12"},{"expression":{"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2448,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"19335:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2451,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"19361:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:12","memberName":"length","nodeType":"MemberAccess","src":"19361:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2453,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"19371:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:12","memberName":"length","nodeType":"MemberAccess","src":"19371:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2455,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"19381:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2456,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"19387:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2457,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"19390:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2458,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"19393:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2449,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2461,"nodeType":"ExpressionStatement","src":"19335:60:12"},{"AST":{"nativeSrc":"19431:496:12","nodeType":"YulBlock","src":"19431:496:12","statements":[{"nativeSrc":"19445:32:12","nodeType":"YulVariableDeclaration","src":"19445:32:12","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:12","nodeType":"YulIdentifier","src":"19464:6:12"},{"kind":"number","nativeSrc":"19472:4:12","nodeType":"YulLiteral","src":"19472:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:12","nodeType":"YulIdentifier","src":"19460:3:12"},"nativeSrc":"19460:17:12","nodeType":"YulFunctionCall","src":"19460:17:12"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:12","nodeType":"YulTypedName","src":"19449:7:12","type":""}]},{"nativeSrc":"19567:73:12","nodeType":"YulAssignment","src":"19567:73:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:12","nodeType":"YulIdentifier","src":"19589:3:12"},"nativeSrc":"19589:5:12","nodeType":"YulFunctionCall","src":"19589:5:12"},{"kind":"number","nativeSrc":"19596:4:12","nodeType":"YulLiteral","src":"19596:4:12","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:12","nodeType":"YulIdentifier","src":"19602:7:12"},{"arguments":[{"name":"result","nativeSrc":"19617:6:12","nodeType":"YulIdentifier","src":"19617:6:12"}],"functionName":{"name":"mload","nativeSrc":"19611:5:12","nodeType":"YulIdentifier","src":"19611:5:12"},"nativeSrc":"19611:13:12","nodeType":"YulFunctionCall","src":"19611:13:12"},{"name":"dataPtr","nativeSrc":"19626:7:12","nodeType":"YulIdentifier","src":"19626:7:12"},{"name":"mLen","nativeSrc":"19635:4:12","nodeType":"YulIdentifier","src":"19635:4:12"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:12","nodeType":"YulIdentifier","src":"19578:10:12"},"nativeSrc":"19578:62:12","nodeType":"YulFunctionCall","src":"19578:62:12"},"variableNames":[{"name":"success","nativeSrc":"19567:7:12","nodeType":"YulIdentifier","src":"19567:7:12"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:12","nodeType":"YulIdentifier","src":"19796:6:12"},{"name":"mLen","nativeSrc":"19804:4:12","nodeType":"YulIdentifier","src":"19804:4:12"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:12","nodeType":"YulIdentifier","src":"19789:6:12"},"nativeSrc":"19789:20:12","nodeType":"YulFunctionCall","src":"19789:20:12"},"nativeSrc":"19789:20:12","nodeType":"YulExpressionStatement","src":"19789:20:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:12","nodeType":"YulLiteral","src":"19892:4:12","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:12","nodeType":"YulIdentifier","src":"19902:7:12"},{"name":"mLen","nativeSrc":"19911:4:12","nodeType":"YulIdentifier","src":"19911:4:12"}],"functionName":{"name":"add","nativeSrc":"19898:3:12","nodeType":"YulIdentifier","src":"19898:3:12"},"nativeSrc":"19898:18:12","nodeType":"YulFunctionCall","src":"19898:18:12"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:12","nodeType":"YulIdentifier","src":"19885:6:12"},"nativeSrc":"19885:32:12","nodeType":"YulFunctionCall","src":"19885:32:12"},"nativeSrc":"19885:32:12","nodeType":"YulExpressionStatement","src":"19885:32:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":2444,"isOffset":false,"isSlot":false,"src":"19635:4:12","valueSize":1},{"declaration":2444,"isOffset":false,"isSlot":false,"src":"19804:4:12","valueSize":1},{"declaration":2444,"isOffset":false,"isSlot":false,"src":"19911:4:12","valueSize":1},{"declaration":2430,"isOffset":false,"isSlot":false,"src":"19464:6:12","valueSize":1},{"declaration":2430,"isOffset":false,"isSlot":false,"src":"19617:6:12","valueSize":1},{"declaration":2430,"isOffset":false,"isSlot":false,"src":"19796:6:12","valueSize":1},{"declaration":2428,"isOffset":false,"isSlot":false,"src":"19567:7:12","valueSize":1}],"flags":["memory-safe"],"id":2462,"nodeType":"InlineAssembly","src":"19406:521:12"}]},"documentation":{"id":2419,"nodeType":"StructuredDocumentation","src":"18914:88:12","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":2464,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:12","nodeType":"FunctionDefinition","parameters":{"id":2426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"b","nameLocation":"19048:1:12","nodeType":"VariableDeclaration","scope":2464,"src":"19035:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2420,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2423,"mutability":"mutable","name":"e","nameLocation":"19072:1:12","nodeType":"VariableDeclaration","scope":2464,"src":"19059:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2422,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2425,"mutability":"mutable","name":"m","nameLocation":"19096:1:12","nodeType":"VariableDeclaration","scope":2464,"src":"19083:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2424,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:12"},"returnParameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2428,"mutability":"mutable","name":"success","nameLocation":"19132:7:12","nodeType":"VariableDeclaration","scope":2464,"src":"19127:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2427,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2430,"mutability":"mutable","name":"result","nameLocation":"19154:6:12","nodeType":"VariableDeclaration","scope":2464,"src":"19141:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2429,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:12"},"scope":3172,"src":"19007:926:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2496,"nodeType":"Block","src":"20088:176:12","statements":[{"body":{"id":2492,"nodeType":"Block","src":"20145:92:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2483,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"20163:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2485,"indexExpression":{"id":2484,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"20173:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2491,"nodeType":"IfStatement","src":"20159:68:12","trueBody":{"id":2490,"nodeType":"Block","src":"20182:45:12","statements":[{"expression":{"hexValue":"66616c7365","id":2488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2471,"id":2489,"nodeType":"Return","src":"20200:12:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2476,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"20118:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2477,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"20122:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:12","memberName":"length","nodeType":"MemberAccess","src":"20122:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2493,"initializationExpression":{"assignments":[2473],"declarations":[{"constant":false,"id":2473,"mutability":"mutable","name":"i","nameLocation":"20111:1:12","nodeType":"VariableDeclaration","scope":2493,"src":"20103:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2472,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2475,"initialValue":{"hexValue":"30","id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:12"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:12","subExpression":{"id":2480,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"20142:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2482,"nodeType":"ExpressionStatement","src":"20140:3:12"},"nodeType":"ForStatement","src":"20098:139:12"},{"expression":{"hexValue":"74727565","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2471,"id":2495,"nodeType":"Return","src":"20246:11:12"}]},"documentation":{"id":2465,"nodeType":"StructuredDocumentation","src":"19939:72:12","text":" @dev Returns whether the provided byte array is zero."},"id":2497,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:12","nodeType":"FunctionDefinition","parameters":{"id":2468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2467,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:12","nodeType":"VariableDeclaration","scope":2497,"src":"20036:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2466,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:12"},"returnParameters":{"id":2471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2497,"src":"20082:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2469,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:12"},"scope":3172,"src":"20016:248:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2715,"nodeType":"Block","src":"20624:5124:12","statements":[{"id":2714,"nodeType":"UncheckedBlock","src":"20634:5108:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2505,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"20728:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2511,"nodeType":"IfStatement","src":"20724:53:12","trueBody":{"id":2510,"nodeType":"Block","src":"20736:41:12","statements":[{"expression":{"id":2508,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"20761:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2504,"id":2509,"nodeType":"Return","src":"20754:8:12"}]}},{"assignments":[2513],"declarations":[{"constant":false,"id":2513,"mutability":"mutable","name":"aa","nameLocation":"21712:2:12","nodeType":"VariableDeclaration","scope":2714,"src":"21704:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2512,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2515,"initialValue":{"id":2514,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"21717:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:12"},{"assignments":[2517],"declarations":[{"constant":false,"id":2517,"mutability":"mutable","name":"xn","nameLocation":"21740:2:12","nodeType":"VariableDeclaration","scope":2714,"src":"21732:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2516,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2519,"initialValue":{"hexValue":"31","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2520,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"21765:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":2523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":2524,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2535,"nodeType":"IfStatement","src":"21761:92:12","trueBody":{"id":2534,"nodeType":"Block","src":"21783:70:12","statements":[{"expression":{"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2526,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"21801:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2529,"nodeType":"ExpressionStatement","src":"21801:10:12"},{"expression":{"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2530,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"21829:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2533,"nodeType":"ExpressionStatement","src":"21829:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2536,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"21870:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":2539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":2540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2551,"nodeType":"IfStatement","src":"21866:90:12","trueBody":{"id":2550,"nodeType":"Block","src":"21887:69:12","statements":[{"expression":{"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2542,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"21905:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2545,"nodeType":"ExpressionStatement","src":"21905:9:12"},{"expression":{"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2546,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"21932:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2549,"nodeType":"ExpressionStatement","src":"21932:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2552,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"21973:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":2555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":2556,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2567,"nodeType":"IfStatement","src":"21969:90:12","trueBody":{"id":2566,"nodeType":"Block","src":"21990:69:12","statements":[{"expression":{"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2558,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"22008:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2561,"nodeType":"ExpressionStatement","src":"22008:9:12"},{"expression":{"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2562,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"22035:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2565,"nodeType":"ExpressionStatement","src":"22035:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2568,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"22076:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":2571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":2572,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2583,"nodeType":"IfStatement","src":"22072:89:12","trueBody":{"id":2582,"nodeType":"Block","src":"22093:68:12","statements":[{"expression":{"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2574,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"22111:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2577,"nodeType":"ExpressionStatement","src":"22111:9:12"},{"expression":{"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2578,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"22138:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2581,"nodeType":"ExpressionStatement","src":"22138:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2584,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"22178:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":2586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2588,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2599,"nodeType":"IfStatement","src":"22174:87:12","trueBody":{"id":2598,"nodeType":"Block","src":"22194:67:12","statements":[{"expression":{"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2590,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"22212:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2593,"nodeType":"ExpressionStatement","src":"22212:8:12"},{"expression":{"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2594,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"22238:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":2595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2597,"nodeType":"ExpressionStatement","src":"22238:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2600,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"22278:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":2603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":2604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2615,"nodeType":"IfStatement","src":"22274:87:12","trueBody":{"id":2614,"nodeType":"Block","src":"22294:67:12","statements":[{"expression":{"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2606,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"22312:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2609,"nodeType":"ExpressionStatement","src":"22312:8:12"},{"expression":{"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2610,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"22338:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2613,"nodeType":"ExpressionStatement","src":"22338:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2616,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"22378:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":2619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":2620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2627,"nodeType":"IfStatement","src":"22374:61:12","trueBody":{"id":2626,"nodeType":"Block","src":"22394:41:12","statements":[{"expression":{"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2622,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"22412:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2625,"nodeType":"ExpressionStatement","src":"22412:8:12"}]}},{"expression":{"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2628,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"22855:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2630,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"22865:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2632,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2636,"nodeType":"ExpressionStatement","src":"22855:18:12"},{"expression":{"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2637,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"24760:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2638,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"24766:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2639,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"24771:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2640,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"24775:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2643,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2647,"nodeType":"ExpressionStatement","src":"24760:23:12"},{"expression":{"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2648,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"24869:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2649,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"24875:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2650,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"24880:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2651,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"24884:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2658,"nodeType":"ExpressionStatement","src":"24869:23:12"},{"expression":{"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2659,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"24980:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2660,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"24986:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2661,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"24991:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2662,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"24995:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2665,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2669,"nodeType":"ExpressionStatement","src":"24980:23:12"},{"expression":{"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2670,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"25089:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2671,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"25095:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2672,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"25100:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2673,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"25104:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2676,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2680,"nodeType":"ExpressionStatement","src":"25089:23:12"},{"expression":{"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2681,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"25199:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2682,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"25205:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2683,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"25210:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2684,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"25214:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2687,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2691,"nodeType":"ExpressionStatement","src":"25199:23:12"},{"expression":{"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2692,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"25309:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2693,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"25315:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2694,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"25320:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2695,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"25324:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2698,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2702,"nodeType":"ExpressionStatement","src":"25309:23:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2703,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"25698:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2706,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"25719:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2707,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"25724:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2708,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"25728:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2704,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"25703:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"25703:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2504,"id":2713,"nodeType":"Return","src":"25691:40:12"}]}]},"documentation":{"id":2498,"nodeType":"StructuredDocumentation","src":"20270:292:12","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":2716,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:12","nodeType":"FunctionDefinition","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2500,"mutability":"mutable","name":"a","nameLocation":"20589:1:12","nodeType":"VariableDeclaration","scope":2716,"src":"20581:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:12"},"returnParameters":{"id":2504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2716,"src":"20615:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2502,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:12"},"scope":3172,"src":"20567:5181:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2749,"nodeType":"Block","src":"25921:171:12","statements":[{"id":2748,"nodeType":"UncheckedBlock","src":"25931:155:12","statements":[{"assignments":[2728],"declarations":[{"constant":false,"id":2728,"mutability":"mutable","name":"result","nameLocation":"25963:6:12","nodeType":"VariableDeclaration","scope":2748,"src":"25955:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2727,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2732,"initialValue":{"arguments":[{"id":2730,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"25977:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2729,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2716,2750],"referencedDeclaration":2716,"src":"25972:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2733,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"26000:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2737,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"26042:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}],"id":2736,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"26025:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1563_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2739,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"26055:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2740,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"26064:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2742,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"26073:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2734,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"26009:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"26009:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2726,"id":2747,"nodeType":"Return","src":"25993:82:12"}]}]},"documentation":{"id":2717,"nodeType":"StructuredDocumentation","src":"25754:86:12","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":2750,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:12","nodeType":"FunctionDefinition","parameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2719,"mutability":"mutable","name":"a","nameLocation":"25867:1:12","nodeType":"VariableDeclaration","scope":2750,"src":"25859:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2718,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2722,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:12","nodeType":"VariableDeclaration","scope":2750,"src":"25870:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"},"typeName":{"id":2721,"nodeType":"UserDefinedTypeName","pathNode":{"id":2720,"name":"Rounding","nameLocations":["25870:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1563,"src":"25870:8:12"},"referencedDeclaration":1563,"src":"25870:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:12"},"returnParameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2750,"src":"25912:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2724,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:12"},"scope":3172,"src":"25845:247:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2840,"nodeType":"Block","src":"26281:2334:12","statements":[{"expression":{"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2758,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"26363:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2761,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"26383:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2759,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"26367:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"26367:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:12","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2768,"nodeType":"ExpressionStatement","src":"26363:64:12"},{"expression":{"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2769,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"26503:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2772,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"26525:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2773,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"26530:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2770,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"26508:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"26508:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:12","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2782,"nodeType":"ExpressionStatement","src":"26503:56:12"},{"expression":{"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2783,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"26634:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2786,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"26656:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2787,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"26661:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2789,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2784,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"26639:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"26639:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:12","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2796,"nodeType":"ExpressionStatement","src":"26634:48:12"},{"expression":{"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2797,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"26757:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2800,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"26779:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2801,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"26784:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:12","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2798,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"26762:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"26762:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2810,"nodeType":"ExpressionStatement","src":"26757:44:12"},{"expression":{"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2811,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"26874:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2814,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"26896:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2815,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"26901:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2817,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2812,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"26879:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"26879:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2824,"nodeType":"ExpressionStatement","src":"26874:42:12"},{"expression":{"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2825,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"26988:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2828,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"27010:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2829,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"27015:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2831,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2826,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"26993:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"26993:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2838,"nodeType":"ExpressionStatement","src":"26988:41:12"},{"AST":{"nativeSrc":"28490:119:12","nodeType":"YulBlock","src":"28490:119:12","statements":[{"nativeSrc":"28504:95:12","nodeType":"YulAssignment","src":"28504:95:12","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:12","nodeType":"YulIdentifier","src":"28512:1:12"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:12","nodeType":"YulIdentifier","src":"28524:1:12"},{"name":"x","nativeSrc":"28527:1:12","nodeType":"YulIdentifier","src":"28527:1:12"}],"functionName":{"name":"shr","nativeSrc":"28520:3:12","nodeType":"YulIdentifier","src":"28520:3:12"},"nativeSrc":"28520:9:12","nodeType":"YulFunctionCall","src":"28520:9:12"},{"kind":"number","nativeSrc":"28531:66:12","nodeType":"YulLiteral","src":"28531:66:12","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:12","nodeType":"YulIdentifier","src":"28515:4:12"},"nativeSrc":"28515:83:12","nodeType":"YulFunctionCall","src":"28515:83:12"}],"functionName":{"name":"or","nativeSrc":"28509:2:12","nodeType":"YulIdentifier","src":"28509:2:12"},"nativeSrc":"28509:90:12","nodeType":"YulFunctionCall","src":"28509:90:12"},"variableNames":[{"name":"r","nativeSrc":"28504:1:12","nodeType":"YulIdentifier","src":"28504:1:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2756,"isOffset":false,"isSlot":false,"src":"28504:1:12","valueSize":1},{"declaration":2756,"isOffset":false,"isSlot":false,"src":"28512:1:12","valueSize":1},{"declaration":2756,"isOffset":false,"isSlot":false,"src":"28524:1:12","valueSize":1},{"declaration":2753,"isOffset":false,"isSlot":false,"src":"28527:1:12","valueSize":1}],"flags":["memory-safe"],"id":2839,"nodeType":"InlineAssembly","src":"28465:144:12"}]},"documentation":{"id":2751,"nodeType":"StructuredDocumentation","src":"26098:119:12","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2841,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:12","nodeType":"FunctionDefinition","parameters":{"id":2754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2753,"mutability":"mutable","name":"x","nameLocation":"26244:1:12","nodeType":"VariableDeclaration","scope":2841,"src":"26236:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:12"},"returnParameters":{"id":2757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2756,"mutability":"mutable","name":"r","nameLocation":"26278:1:12","nodeType":"VariableDeclaration","scope":2841,"src":"26270:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2755,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:12"},"scope":3172,"src":"26222:2393:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2874,"nodeType":"Block","src":"28848:175:12","statements":[{"id":2873,"nodeType":"UncheckedBlock","src":"28858:159:12","statements":[{"assignments":[2853],"declarations":[{"constant":false,"id":2853,"mutability":"mutable","name":"result","nameLocation":"28890:6:12","nodeType":"VariableDeclaration","scope":2873,"src":"28882:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2852,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2857,"initialValue":{"arguments":[{"id":2855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"28904:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2854,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2841,2875],"referencedDeclaration":2841,"src":"28899:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2858,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"28931:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2862,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"28973:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}],"id":2861,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"28956:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1563_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"28991:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"29000:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2859,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"28940:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"28940:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2851,"id":2872,"nodeType":"Return","src":"28924:82:12"}]}]},"documentation":{"id":2842,"nodeType":"StructuredDocumentation","src":"28621:142:12","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2875,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:12","nodeType":"FunctionDefinition","parameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2844,"mutability":"mutable","name":"value","nameLocation":"28790:5:12","nodeType":"VariableDeclaration","scope":2875,"src":"28782:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2843,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2847,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:12","nodeType":"VariableDeclaration","scope":2875,"src":"28797:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"},"typeName":{"id":2846,"nodeType":"UserDefinedTypeName","pathNode":{"id":2845,"name":"Rounding","nameLocations":["28797:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1563,"src":"28797:8:12"},"referencedDeclaration":1563,"src":"28797:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:12"},"returnParameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2875,"src":"28839:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2849,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:12"},"scope":3172,"src":"28768:255:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3003,"nodeType":"Block","src":"29216:854:12","statements":[{"assignments":[2884],"declarations":[{"constant":false,"id":2884,"mutability":"mutable","name":"result","nameLocation":"29234:6:12","nodeType":"VariableDeclaration","scope":3003,"src":"29226:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2883,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2886,"initialValue":{"hexValue":"30","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:12"},{"id":3000,"nodeType":"UncheckedBlock","src":"29254:787:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"29282:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2903,"nodeType":"IfStatement","src":"29278:103:12","trueBody":{"id":2902,"nodeType":"Block","src":"29301:80:12","statements":[{"expression":{"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"29319:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2897,"nodeType":"ExpressionStatement","src":"29319:17:12"},{"expression":{"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2898,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"29354:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2901,"nodeType":"ExpressionStatement","src":"29354:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"29398:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2920,"nodeType":"IfStatement","src":"29394:103:12","trueBody":{"id":2919,"nodeType":"Block","src":"29417:80:12","statements":[{"expression":{"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"29435:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2914,"nodeType":"ExpressionStatement","src":"29435:17:12"},{"expression":{"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2915,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"29470:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2918,"nodeType":"ExpressionStatement","src":"29470:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"29514:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2937,"nodeType":"IfStatement","src":"29510:103:12","trueBody":{"id":2936,"nodeType":"Block","src":"29533:80:12","statements":[{"expression":{"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"29551:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2931,"nodeType":"ExpressionStatement","src":"29551:17:12"},{"expression":{"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2932,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"29586:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2935,"nodeType":"ExpressionStatement","src":"29586:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"29630:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2954,"nodeType":"IfStatement","src":"29626:100:12","trueBody":{"id":2953,"nodeType":"Block","src":"29648:78:12","statements":[{"expression":{"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"29666:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2948,"nodeType":"ExpressionStatement","src":"29666:16:12"},{"expression":{"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2949,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"29700:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2952,"nodeType":"ExpressionStatement","src":"29700:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"29743:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2971,"nodeType":"IfStatement","src":"29739:100:12","trueBody":{"id":2970,"nodeType":"Block","src":"29761:78:12","statements":[{"expression":{"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"29779:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2965,"nodeType":"ExpressionStatement","src":"29779:16:12"},{"expression":{"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2966,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"29813:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2969,"nodeType":"ExpressionStatement","src":"29813:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"29856:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2988,"nodeType":"IfStatement","src":"29852:100:12","trueBody":{"id":2987,"nodeType":"Block","src":"29874:78:12","statements":[{"expression":{"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"29892:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2982,"nodeType":"ExpressionStatement","src":"29892:16:12"},{"expression":{"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2983,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"29926:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2986,"nodeType":"ExpressionStatement","src":"29926:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"29969:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2999,"nodeType":"IfStatement","src":"29965:66:12","trueBody":{"id":2998,"nodeType":"Block","src":"29987:44:12","statements":[{"expression":{"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2994,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"30005:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2997,"nodeType":"ExpressionStatement","src":"30005:11:12"}]}}]},{"expression":{"id":3001,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"30057:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2882,"id":3002,"nodeType":"Return","src":"30050:13:12"}]},"documentation":{"id":2876,"nodeType":"StructuredDocumentation","src":"29029:120:12","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3004,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:12","nodeType":"FunctionDefinition","parameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"value","nameLocation":"29177:5:12","nodeType":"VariableDeclaration","scope":3004,"src":"29169:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2877,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:12"},"returnParameters":{"id":2882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3004,"src":"29207:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2880,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:12"},"scope":3172,"src":"29154:916:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3037,"nodeType":"Block","src":"30305:177:12","statements":[{"id":3036,"nodeType":"UncheckedBlock","src":"30315:161:12","statements":[{"assignments":[3016],"declarations":[{"constant":false,"id":3016,"mutability":"mutable","name":"result","nameLocation":"30347:6:12","nodeType":"VariableDeclaration","scope":3036,"src":"30339:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3015,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3020,"initialValue":{"arguments":[{"id":3018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"30362:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3017,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3004,3038],"referencedDeclaration":3004,"src":"30356:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3021,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"30389:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3025,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"30431:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}],"id":3024,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"30414:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1563_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3028,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"30450:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"30459:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3022,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"30398:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"30398:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3014,"id":3035,"nodeType":"Return","src":"30382:83:12"}]}]},"documentation":{"id":3005,"nodeType":"StructuredDocumentation","src":"30076:143:12","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3038,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:12","nodeType":"FunctionDefinition","parameters":{"id":3011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"value","nameLocation":"30247:5:12","nodeType":"VariableDeclaration","scope":3038,"src":"30239:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3006,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3010,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:12","nodeType":"VariableDeclaration","scope":3038,"src":"30254:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"},"typeName":{"id":3009,"nodeType":"UserDefinedTypeName","pathNode":{"id":3008,"name":"Rounding","nameLocations":["30254:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1563,"src":"30254:8:12"},"referencedDeclaration":1563,"src":"30254:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:12"},"returnParameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3038,"src":"30296:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:12"},"scope":3172,"src":"30224:258:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3114,"nodeType":"Block","src":"30800:675:12","statements":[{"expression":{"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3046,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"30882:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3049,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"30902:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3047,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"30886:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"30886:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:12","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3056,"nodeType":"ExpressionStatement","src":"30882:64:12"},{"expression":{"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3057,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"31022:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3060,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"31044:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3061,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"31049:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3063,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":3064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3058,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"31027:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"31027:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:12","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3070,"nodeType":"ExpressionStatement","src":"31022:56:12"},{"expression":{"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3071,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"31153:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3074,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"31175:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3075,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"31180:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3077,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3072,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"31158:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"31158:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:12","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3084,"nodeType":"ExpressionStatement","src":"31153:48:12"},{"expression":{"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3085,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"31276:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3088,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"31298:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3089,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"31303:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:12","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3086,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"31281:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"31281:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3098,"nodeType":"ExpressionStatement","src":"31276:44:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3099,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"31426:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3102,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3105,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"31453:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3106,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"31458:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3108,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":3109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3103,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"31436:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"31436:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3045,"id":3113,"nodeType":"Return","src":"31418:50:12"}]},"documentation":{"id":3039,"nodeType":"StructuredDocumentation","src":"30488:246:12","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3115,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:12","nodeType":"FunctionDefinition","parameters":{"id":3042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3041,"mutability":"mutable","name":"x","nameLocation":"30763:1:12","nodeType":"VariableDeclaration","scope":3115,"src":"30755:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3040,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:12"},"returnParameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"r","nameLocation":"30797:1:12","nodeType":"VariableDeclaration","scope":3115,"src":"30789:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3043,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:12"},"scope":3172,"src":"30739:736:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3151,"nodeType":"Block","src":"31712:184:12","statements":[{"id":3150,"nodeType":"UncheckedBlock","src":"31722:168:12","statements":[{"assignments":[3127],"declarations":[{"constant":false,"id":3127,"mutability":"mutable","name":"result","nameLocation":"31754:6:12","nodeType":"VariableDeclaration","scope":3150,"src":"31746:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3126,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3131,"initialValue":{"arguments":[{"id":3129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"31770:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3128,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3115,3152],"referencedDeclaration":3115,"src":"31763:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3132,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"31797:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3136,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"31839:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}],"id":3135,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"31822:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1563_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3139,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"31858:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3142,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"31873:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3133,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"31806:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4937_$","typeString":"type(library SafeCast)"}},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"31806:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3125,"id":3149,"nodeType":"Return","src":"31790:89:12"}]}]},"documentation":{"id":3116,"nodeType":"StructuredDocumentation","src":"31481:144:12","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3152,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:12","nodeType":"FunctionDefinition","parameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"value","nameLocation":"31654:5:12","nodeType":"VariableDeclaration","scope":3152,"src":"31646:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3117,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3121,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:12","nodeType":"VariableDeclaration","scope":3152,"src":"31661:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"},"typeName":{"id":3120,"nodeType":"UserDefinedTypeName","pathNode":{"id":3119,"name":"Rounding","nameLocations":["31661:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1563,"src":"31661:8:12"},"referencedDeclaration":1563,"src":"31661:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:12"},"returnParameters":{"id":3125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3152,"src":"31703:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3123,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:12"},"scope":3172,"src":"31630:266:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3170,"nodeType":"Block","src":"32094:48:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3163,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"32117:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}],"id":3162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3161,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:12","typeDescriptions":{}}},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3160,"id":3169,"nodeType":"Return","src":"32104:31:12"}]},"documentation":{"id":3153,"nodeType":"StructuredDocumentation","src":"31902:113:12","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3171,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:12","nodeType":"FunctionDefinition","parameters":{"id":3157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3156,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:12","nodeType":"VariableDeclaration","scope":3171,"src":"32046:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"},"typeName":{"id":3155,"nodeType":"UserDefinedTypeName","pathNode":{"id":3154,"name":"Rounding","nameLocations":["32046:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1563,"src":"32046:8:12"},"referencedDeclaration":1563,"src":"32046:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1563","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:12"},"returnParameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3171,"src":"32088:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3158,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:12"},"scope":3172,"src":"32020:122:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3173,"src":"281:31863:12","usedErrors":[],"usedEvents":[]}],"src":"103:32042:12"},"id":12},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[4937]},"id":4938,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":3175,"nodeType":"StructuredDocumentation","src":"218:550:13","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":4937,"linearizedBaseContracts":[4937],"name":"SafeCast","nameLocation":"777:8:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3176,"nodeType":"StructuredDocumentation","src":"792:68:13","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":3182,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:13","nodeType":"ErrorDefinition","parameters":{"id":3181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3178,"mutability":"mutable","name":"bits","nameLocation":"908:4:13","nodeType":"VariableDeclaration","scope":3182,"src":"902:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3177,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3180,"mutability":"mutable","name":"value","nameLocation":"922:5:13","nodeType":"VariableDeclaration","scope":3182,"src":"914:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:13"},"src":"865:64:13"},{"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"935:75:13","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":3187,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:13","nodeType":"ErrorDefinition","parameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"value","nameLocation":"1056:5:13","nodeType":"VariableDeclaration","scope":3187,"src":"1049:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3184,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:13"},"src":"1015:48:13"},{"documentation":{"id":3188,"nodeType":"StructuredDocumentation","src":"1069:67:13","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":3194,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:13","nodeType":"ErrorDefinition","parameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3190,"mutability":"mutable","name":"bits","nameLocation":"1183:4:13","nodeType":"VariableDeclaration","scope":3194,"src":"1177:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3189,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3192,"mutability":"mutable","name":"value","nameLocation":"1196:5:13","nodeType":"VariableDeclaration","scope":3194,"src":"1189:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3191,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:13"},"src":"1141:62:13"},{"documentation":{"id":3195,"nodeType":"StructuredDocumentation","src":"1209:75:13","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":3199,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:13","nodeType":"ErrorDefinition","parameters":{"id":3198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"value","nameLocation":"1331:5:13","nodeType":"VariableDeclaration","scope":3199,"src":"1323:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:13"},"src":"1289:49:13"},{"body":{"id":3226,"nodeType":"Block","src":"1695:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"1709:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3209,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":3208,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:13","memberName":"max","nodeType":"MemberAccess","src":"1717:17:13","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3220,"nodeType":"IfStatement","src":"1705:105:13","trueBody":{"id":3219,"nodeType":"Block","src":"1736:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:13","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"1793:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3214,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"1757:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3218,"nodeType":"RevertStatement","src":"1750:49:13"}]}},{"expression":{"arguments":[{"id":3223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"1834:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3221,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:13","typeDescriptions":{}}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":3206,"id":3225,"nodeType":"Return","src":"1819:21:13"}]},"documentation":{"id":3200,"nodeType":"StructuredDocumentation","src":"1344:280:13","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3227,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:13","nodeType":"FunctionDefinition","parameters":{"id":3203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"value","nameLocation":"1656:5:13","nodeType":"VariableDeclaration","scope":3227,"src":"1648:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:13"},"returnParameters":{"id":3206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3227,"src":"1686:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":3204,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:13","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:13"},"scope":4937,"src":"1629:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3254,"nodeType":"Block","src":"2204:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"2218:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3237,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":3236,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":3240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:13","memberName":"max","nodeType":"MemberAccess","src":"2226:17:13","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3248,"nodeType":"IfStatement","src":"2214:105:13","trueBody":{"id":3247,"nodeType":"Block","src":"2245:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:13","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"2302:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3242,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"2266:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3246,"nodeType":"RevertStatement","src":"2259:49:13"}]}},{"expression":{"arguments":[{"id":3251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"2343:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3249,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:13","typeDescriptions":{}}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":3234,"id":3253,"nodeType":"Return","src":"2328:21:13"}]},"documentation":{"id":3228,"nodeType":"StructuredDocumentation","src":"1853:280:13","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3255,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:13","nodeType":"FunctionDefinition","parameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"value","nameLocation":"2165:5:13","nodeType":"VariableDeclaration","scope":3255,"src":"2157:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3229,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:13"},"returnParameters":{"id":3234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3255,"src":"2195:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":3232,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:13","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:13"},"scope":4937,"src":"2138:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3282,"nodeType":"Block","src":"2713:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"2727:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3265,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":3264,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:13","memberName":"max","nodeType":"MemberAccess","src":"2735:17:13","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3276,"nodeType":"IfStatement","src":"2723:105:13","trueBody":{"id":3275,"nodeType":"Block","src":"2754:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:13","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":3272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"2811:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3270,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"2775:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3274,"nodeType":"RevertStatement","src":"2768:49:13"}]}},{"expression":{"arguments":[{"id":3279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"2852:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3277,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:13","typeDescriptions":{}}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":3262,"id":3281,"nodeType":"Return","src":"2837:21:13"}]},"documentation":{"id":3256,"nodeType":"StructuredDocumentation","src":"2362:280:13","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":3283,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:13","nodeType":"FunctionDefinition","parameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"mutability":"mutable","name":"value","nameLocation":"2674:5:13","nodeType":"VariableDeclaration","scope":3283,"src":"2666:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3257,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:13"},"returnParameters":{"id":3262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3283,"src":"2704:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":3260,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:13","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:13"},"scope":4937,"src":"2647:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3310,"nodeType":"Block","src":"3222:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"3236:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3293,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":3292,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:13","memberName":"max","nodeType":"MemberAccess","src":"3244:17:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3304,"nodeType":"IfStatement","src":"3232:105:13","trueBody":{"id":3303,"nodeType":"Block","src":"3263:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:13","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":3300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"3320:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3298,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"3284:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3302,"nodeType":"RevertStatement","src":"3277:49:13"}]}},{"expression":{"arguments":[{"id":3307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"3361:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3305,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:13","typeDescriptions":{}}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3290,"id":3309,"nodeType":"Return","src":"3346:21:13"}]},"documentation":{"id":3284,"nodeType":"StructuredDocumentation","src":"2871:280:13","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":3311,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:13","nodeType":"FunctionDefinition","parameters":{"id":3287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3286,"mutability":"mutable","name":"value","nameLocation":"3183:5:13","nodeType":"VariableDeclaration","scope":3311,"src":"3175:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:13"},"returnParameters":{"id":3290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3311,"src":"3213:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3288,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:13"},"scope":4937,"src":"3156:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3338,"nodeType":"Block","src":"3731:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"3745:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3321,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":3320,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:13","memberName":"max","nodeType":"MemberAccess","src":"3753:17:13","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3332,"nodeType":"IfStatement","src":"3741:105:13","trueBody":{"id":3331,"nodeType":"Block","src":"3772:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:13","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"3829:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3326,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"3793:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3330,"nodeType":"RevertStatement","src":"3786:49:13"}]}},{"expression":{"arguments":[{"id":3335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"3870:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3333,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:13","typeDescriptions":{}}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":3318,"id":3337,"nodeType":"Return","src":"3855:21:13"}]},"documentation":{"id":3312,"nodeType":"StructuredDocumentation","src":"3380:280:13","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3339,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:13","nodeType":"FunctionDefinition","parameters":{"id":3315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"value","nameLocation":"3692:5:13","nodeType":"VariableDeclaration","scope":3339,"src":"3684:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3313,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:13"},"returnParameters":{"id":3318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3339,"src":"3722:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":3316,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:13","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:13"},"scope":4937,"src":"3665:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3366,"nodeType":"Block","src":"4240:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"4254:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3349,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":3348,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:13","memberName":"max","nodeType":"MemberAccess","src":"4262:17:13","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3360,"nodeType":"IfStatement","src":"4250:105:13","trueBody":{"id":3359,"nodeType":"Block","src":"4281:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:13","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"4338:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3354,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"4302:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3358,"nodeType":"RevertStatement","src":"4295:49:13"}]}},{"expression":{"arguments":[{"id":3363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"4379:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3361,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:13","typeDescriptions":{}}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":3346,"id":3365,"nodeType":"Return","src":"4364:21:13"}]},"documentation":{"id":3340,"nodeType":"StructuredDocumentation","src":"3889:280:13","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3367,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:13","nodeType":"FunctionDefinition","parameters":{"id":3343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3342,"mutability":"mutable","name":"value","nameLocation":"4201:5:13","nodeType":"VariableDeclaration","scope":3367,"src":"4193:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3341,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:13"},"returnParameters":{"id":3346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3367,"src":"4231:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":3344,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:13","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:13"},"scope":4937,"src":"4174:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3394,"nodeType":"Block","src":"4749:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"4763:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3377,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":3376,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:13","memberName":"max","nodeType":"MemberAccess","src":"4771:17:13","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3388,"nodeType":"IfStatement","src":"4759:105:13","trueBody":{"id":3387,"nodeType":"Block","src":"4790:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:13","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"4847:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3382,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"4811:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3386,"nodeType":"RevertStatement","src":"4804:49:13"}]}},{"expression":{"arguments":[{"id":3391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"4888:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3389,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:13","typeDescriptions":{}}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":3374,"id":3393,"nodeType":"Return","src":"4873:21:13"}]},"documentation":{"id":3368,"nodeType":"StructuredDocumentation","src":"4398:280:13","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3395,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:13","nodeType":"FunctionDefinition","parameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3370,"mutability":"mutable","name":"value","nameLocation":"4710:5:13","nodeType":"VariableDeclaration","scope":3395,"src":"4702:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3369,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:13"},"returnParameters":{"id":3374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3395,"src":"4740:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":3372,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:13","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:13"},"scope":4937,"src":"4683:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3422,"nodeType":"Block","src":"5258:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"5272:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3405,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":3404,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":3408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:13","memberName":"max","nodeType":"MemberAccess","src":"5280:17:13","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3416,"nodeType":"IfStatement","src":"5268:105:13","trueBody":{"id":3415,"nodeType":"Block","src":"5299:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:13","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"5356:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3410,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"5320:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3414,"nodeType":"RevertStatement","src":"5313:49:13"}]}},{"expression":{"arguments":[{"id":3419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"5397:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3417,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:13","typeDescriptions":{}}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":3402,"id":3421,"nodeType":"Return","src":"5382:21:13"}]},"documentation":{"id":3396,"nodeType":"StructuredDocumentation","src":"4907:280:13","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3423,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:13","nodeType":"FunctionDefinition","parameters":{"id":3399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3398,"mutability":"mutable","name":"value","nameLocation":"5219:5:13","nodeType":"VariableDeclaration","scope":3423,"src":"5211:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3397,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:13"},"returnParameters":{"id":3402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3423,"src":"5249:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3400,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:13","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:13"},"scope":4937,"src":"5192:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3450,"nodeType":"Block","src":"5767:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"5781:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3433,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":3432,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:13","memberName":"max","nodeType":"MemberAccess","src":"5789:17:13","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3444,"nodeType":"IfStatement","src":"5777:105:13","trueBody":{"id":3443,"nodeType":"Block","src":"5808:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:13","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":3440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"5865:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3438,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"5829:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3442,"nodeType":"RevertStatement","src":"5822:49:13"}]}},{"expression":{"arguments":[{"id":3447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"5906:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3445,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:13","typeDescriptions":{}}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":3430,"id":3449,"nodeType":"Return","src":"5891:21:13"}]},"documentation":{"id":3424,"nodeType":"StructuredDocumentation","src":"5416:280:13","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3451,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:13","nodeType":"FunctionDefinition","parameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"value","nameLocation":"5728:5:13","nodeType":"VariableDeclaration","scope":3451,"src":"5720:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3425,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:13"},"returnParameters":{"id":3430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3451,"src":"5758:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":3428,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:13","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:13"},"scope":4937,"src":"5701:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3478,"nodeType":"Block","src":"6276:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"6290:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3461,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":3460,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:13","memberName":"max","nodeType":"MemberAccess","src":"6298:17:13","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3472,"nodeType":"IfStatement","src":"6286:105:13","trueBody":{"id":3471,"nodeType":"Block","src":"6317:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":3467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:13","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":3468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"6374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3466,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"6338:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3470,"nodeType":"RevertStatement","src":"6331:49:13"}]}},{"expression":{"arguments":[{"id":3475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"6415:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3473,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:13","typeDescriptions":{}}},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":3458,"id":3477,"nodeType":"Return","src":"6400:21:13"}]},"documentation":{"id":3452,"nodeType":"StructuredDocumentation","src":"5925:280:13","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":3479,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:13","nodeType":"FunctionDefinition","parameters":{"id":3455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3454,"mutability":"mutable","name":"value","nameLocation":"6237:5:13","nodeType":"VariableDeclaration","scope":3479,"src":"6229:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3453,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:13"},"returnParameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3479,"src":"6267:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":3456,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:13","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:13"},"scope":4937,"src":"6210:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3506,"nodeType":"Block","src":"6785:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"6799:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3489,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":3488,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:13","memberName":"max","nodeType":"MemberAccess","src":"6807:17:13","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3500,"nodeType":"IfStatement","src":"6795:105:13","trueBody":{"id":3499,"nodeType":"Block","src":"6826:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:13","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":3496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"6883:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3494,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"6847:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3498,"nodeType":"RevertStatement","src":"6840:49:13"}]}},{"expression":{"arguments":[{"id":3503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"6924:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3501,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:13","typeDescriptions":{}}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":3486,"id":3505,"nodeType":"Return","src":"6909:21:13"}]},"documentation":{"id":3480,"nodeType":"StructuredDocumentation","src":"6434:280:13","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":3507,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:13","nodeType":"FunctionDefinition","parameters":{"id":3483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3482,"mutability":"mutable","name":"value","nameLocation":"6746:5:13","nodeType":"VariableDeclaration","scope":3507,"src":"6738:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3481,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:13"},"returnParameters":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3507,"src":"6776:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":3484,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:13","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:13"},"scope":4937,"src":"6719:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3534,"nodeType":"Block","src":"7294:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"7308:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3517,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":3516,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":3520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:13","memberName":"max","nodeType":"MemberAccess","src":"7316:17:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3528,"nodeType":"IfStatement","src":"7304:105:13","trueBody":{"id":3527,"nodeType":"Block","src":"7335:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:13","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"7392:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3522,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"7356:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3526,"nodeType":"RevertStatement","src":"7349:49:13"}]}},{"expression":{"arguments":[{"id":3531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"7433:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3529,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:13","typeDescriptions":{}}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":3514,"id":3533,"nodeType":"Return","src":"7418:21:13"}]},"documentation":{"id":3508,"nodeType":"StructuredDocumentation","src":"6943:280:13","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3535,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:13","nodeType":"FunctionDefinition","parameters":{"id":3511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3510,"mutability":"mutable","name":"value","nameLocation":"7255:5:13","nodeType":"VariableDeclaration","scope":3535,"src":"7247:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3509,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:13"},"returnParameters":{"id":3514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3535,"src":"7285:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3512,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:13"},"scope":4937,"src":"7228:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3562,"nodeType":"Block","src":"7803:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"7817:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3545,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":3544,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":3548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:13","memberName":"max","nodeType":"MemberAccess","src":"7825:17:13","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3556,"nodeType":"IfStatement","src":"7813:105:13","trueBody":{"id":3555,"nodeType":"Block","src":"7844:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":3551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:13","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":3552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"7901:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3550,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"7865:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3554,"nodeType":"RevertStatement","src":"7858:49:13"}]}},{"expression":{"arguments":[{"id":3559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"7942:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3557,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:13","typeDescriptions":{}}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":3542,"id":3561,"nodeType":"Return","src":"7927:21:13"}]},"documentation":{"id":3536,"nodeType":"StructuredDocumentation","src":"7452:280:13","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":3563,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:13","nodeType":"FunctionDefinition","parameters":{"id":3539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3538,"mutability":"mutable","name":"value","nameLocation":"7764:5:13","nodeType":"VariableDeclaration","scope":3563,"src":"7756:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3537,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:13"},"returnParameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3563,"src":"7794:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":3540,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:13","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:13"},"scope":4937,"src":"7737:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3590,"nodeType":"Block","src":"8312:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"8326:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3573,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":3572,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":3576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:13","memberName":"max","nodeType":"MemberAccess","src":"8334:17:13","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3584,"nodeType":"IfStatement","src":"8322:105:13","trueBody":{"id":3583,"nodeType":"Block","src":"8353:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:13","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":3580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"8410:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3578,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"8374:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3582,"nodeType":"RevertStatement","src":"8367:49:13"}]}},{"expression":{"arguments":[{"id":3587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"8451:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3585,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:13","typeDescriptions":{}}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":3570,"id":3589,"nodeType":"Return","src":"8436:21:13"}]},"documentation":{"id":3564,"nodeType":"StructuredDocumentation","src":"7961:280:13","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":3591,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:13","nodeType":"FunctionDefinition","parameters":{"id":3567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3566,"mutability":"mutable","name":"value","nameLocation":"8273:5:13","nodeType":"VariableDeclaration","scope":3591,"src":"8265:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:13"},"returnParameters":{"id":3570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3591,"src":"8303:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":3568,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:13","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:13"},"scope":4937,"src":"8246:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3618,"nodeType":"Block","src":"8821:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"8835:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3601,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":3600,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":3604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:13","memberName":"max","nodeType":"MemberAccess","src":"8843:17:13","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3612,"nodeType":"IfStatement","src":"8831:105:13","trueBody":{"id":3611,"nodeType":"Block","src":"8862:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":3607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:13","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":3608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"8919:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3606,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"8883:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3610,"nodeType":"RevertStatement","src":"8876:49:13"}]}},{"expression":{"arguments":[{"id":3615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"8960:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3613,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:13","typeDescriptions":{}}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":3598,"id":3617,"nodeType":"Return","src":"8945:21:13"}]},"documentation":{"id":3592,"nodeType":"StructuredDocumentation","src":"8470:280:13","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3619,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:13","nodeType":"FunctionDefinition","parameters":{"id":3595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3594,"mutability":"mutable","name":"value","nameLocation":"8782:5:13","nodeType":"VariableDeclaration","scope":3619,"src":"8774:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3593,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:13"},"returnParameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3619,"src":"8812:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":3596,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:13","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:13"},"scope":4937,"src":"8755:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3646,"nodeType":"Block","src":"9330:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"9344:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3629,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":3628,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:13","memberName":"max","nodeType":"MemberAccess","src":"9352:17:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3640,"nodeType":"IfStatement","src":"9340:105:13","trueBody":{"id":3639,"nodeType":"Block","src":"9371:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":3635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":3636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"9428:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3634,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"9392:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3638,"nodeType":"RevertStatement","src":"9385:49:13"}]}},{"expression":{"arguments":[{"id":3643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"9469:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3641,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:13","typeDescriptions":{}}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":3626,"id":3645,"nodeType":"Return","src":"9454:21:13"}]},"documentation":{"id":3620,"nodeType":"StructuredDocumentation","src":"8979:280:13","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":3647,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:13","nodeType":"FunctionDefinition","parameters":{"id":3623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"value","nameLocation":"9291:5:13","nodeType":"VariableDeclaration","scope":3647,"src":"9283:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3621,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:13"},"returnParameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3647,"src":"9321:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3624,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:13"},"scope":4937,"src":"9264:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3674,"nodeType":"Block","src":"9839:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"9853:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3657,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":3656,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":3660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:13","memberName":"max","nodeType":"MemberAccess","src":"9861:17:13","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3668,"nodeType":"IfStatement","src":"9849:105:13","trueBody":{"id":3667,"nodeType":"Block","src":"9880:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:13","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":3664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"9937:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3662,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"9901:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3666,"nodeType":"RevertStatement","src":"9894:49:13"}]}},{"expression":{"arguments":[{"id":3671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"9978:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3669,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:13","typeDescriptions":{}}},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":3654,"id":3673,"nodeType":"Return","src":"9963:21:13"}]},"documentation":{"id":3648,"nodeType":"StructuredDocumentation","src":"9488:280:13","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":3675,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:13","nodeType":"FunctionDefinition","parameters":{"id":3651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3650,"mutability":"mutable","name":"value","nameLocation":"9800:5:13","nodeType":"VariableDeclaration","scope":3675,"src":"9792:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3649,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:13"},"returnParameters":{"id":3654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3675,"src":"9830:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":3652,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:13","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:13"},"scope":4937,"src":"9773:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3702,"nodeType":"Block","src":"10348:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"10362:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3685,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":3684,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:13","memberName":"max","nodeType":"MemberAccess","src":"10370:17:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3696,"nodeType":"IfStatement","src":"10358:105:13","trueBody":{"id":3695,"nodeType":"Block","src":"10389:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:13","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":3692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"10446:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3690,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"10410:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3694,"nodeType":"RevertStatement","src":"10403:49:13"}]}},{"expression":{"arguments":[{"id":3699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"10487:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3697,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:13","typeDescriptions":{}}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":3682,"id":3701,"nodeType":"Return","src":"10472:21:13"}]},"documentation":{"id":3676,"nodeType":"StructuredDocumentation","src":"9997:280:13","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":3703,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:13","nodeType":"FunctionDefinition","parameters":{"id":3679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3678,"mutability":"mutable","name":"value","nameLocation":"10309:5:13","nodeType":"VariableDeclaration","scope":3703,"src":"10301:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3677,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:13"},"returnParameters":{"id":3682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3703,"src":"10339:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3680,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:13"},"scope":4937,"src":"10282:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3730,"nodeType":"Block","src":"10857:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"10871:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3713,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":3712,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:13","memberName":"max","nodeType":"MemberAccess","src":"10879:17:13","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3724,"nodeType":"IfStatement","src":"10867:105:13","trueBody":{"id":3723,"nodeType":"Block","src":"10898:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:13","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":3720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"10955:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3718,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"10919:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3722,"nodeType":"RevertStatement","src":"10912:49:13"}]}},{"expression":{"arguments":[{"id":3727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"10996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3725,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:13","typeDescriptions":{}}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":3710,"id":3729,"nodeType":"Return","src":"10981:21:13"}]},"documentation":{"id":3704,"nodeType":"StructuredDocumentation","src":"10506:280:13","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":3731,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:13","nodeType":"FunctionDefinition","parameters":{"id":3707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3706,"mutability":"mutable","name":"value","nameLocation":"10818:5:13","nodeType":"VariableDeclaration","scope":3731,"src":"10810:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3705,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:13"},"returnParameters":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3731,"src":"10848:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":3708,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:13","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:13"},"scope":4937,"src":"10791:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3758,"nodeType":"Block","src":"11360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"11374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3741,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":3740,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:13","memberName":"max","nodeType":"MemberAccess","src":"11382:16:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3752,"nodeType":"IfStatement","src":"11370:103:13","trueBody":{"id":3751,"nodeType":"Block","src":"11400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":3748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"11456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3746,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"11421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3750,"nodeType":"RevertStatement","src":"11414:48:13"}]}},{"expression":{"arguments":[{"id":3755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"11496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3753,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:13","typeDescriptions":{}}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3738,"id":3757,"nodeType":"Return","src":"11482:20:13"}]},"documentation":{"id":3732,"nodeType":"StructuredDocumentation","src":"11015:276:13","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":3759,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:13","nodeType":"FunctionDefinition","parameters":{"id":3735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3734,"mutability":"mutable","name":"value","nameLocation":"11322:5:13","nodeType":"VariableDeclaration","scope":3759,"src":"11314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3733,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:13"},"returnParameters":{"id":3738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3759,"src":"11352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3736,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:13"},"scope":4937,"src":"11296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3786,"nodeType":"Block","src":"11860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"11874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3769,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":3768,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":3772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:13","memberName":"max","nodeType":"MemberAccess","src":"11882:16:13","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3780,"nodeType":"IfStatement","src":"11870:103:13","trueBody":{"id":3779,"nodeType":"Block","src":"11900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":3775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":3776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"11956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3774,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"11921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3778,"nodeType":"RevertStatement","src":"11914:48:13"}]}},{"expression":{"arguments":[{"id":3783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"11996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3781,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:13","typeDescriptions":{}}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":3766,"id":3785,"nodeType":"Return","src":"11982:20:13"}]},"documentation":{"id":3760,"nodeType":"StructuredDocumentation","src":"11515:276:13","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":3787,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:13","nodeType":"FunctionDefinition","parameters":{"id":3763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3762,"mutability":"mutable","name":"value","nameLocation":"11822:5:13","nodeType":"VariableDeclaration","scope":3787,"src":"11814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3761,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:13"},"returnParameters":{"id":3766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3787,"src":"11852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":3764,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:13","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:13"},"scope":4937,"src":"11796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3814,"nodeType":"Block","src":"12360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"12374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3797,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":3796,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:13","memberName":"max","nodeType":"MemberAccess","src":"12382:16:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3808,"nodeType":"IfStatement","src":"12370:103:13","trueBody":{"id":3807,"nodeType":"Block","src":"12400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":3803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":3804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"12456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3802,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"12421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3806,"nodeType":"RevertStatement","src":"12414:48:13"}]}},{"expression":{"arguments":[{"id":3811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"12496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3809,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:13","typeDescriptions":{}}},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":3794,"id":3813,"nodeType":"Return","src":"12482:20:13"}]},"documentation":{"id":3788,"nodeType":"StructuredDocumentation","src":"12015:276:13","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":3815,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:13","nodeType":"FunctionDefinition","parameters":{"id":3791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3790,"mutability":"mutable","name":"value","nameLocation":"12322:5:13","nodeType":"VariableDeclaration","scope":3815,"src":"12314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3789,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:13"},"returnParameters":{"id":3794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3815,"src":"12352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3792,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:13"},"scope":4937,"src":"12296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3842,"nodeType":"Block","src":"12860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"12874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3825,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":3824,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:13","memberName":"max","nodeType":"MemberAccess","src":"12882:16:13","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3836,"nodeType":"IfStatement","src":"12870:103:13","trueBody":{"id":3835,"nodeType":"Block","src":"12900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":3831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":3832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"12956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3830,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"12921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3834,"nodeType":"RevertStatement","src":"12914:48:13"}]}},{"expression":{"arguments":[{"id":3839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"12996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3837,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:13","typeDescriptions":{}}},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":3822,"id":3841,"nodeType":"Return","src":"12982:20:13"}]},"documentation":{"id":3816,"nodeType":"StructuredDocumentation","src":"12515:276:13","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":3843,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:13","nodeType":"FunctionDefinition","parameters":{"id":3819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3818,"mutability":"mutable","name":"value","nameLocation":"12822:5:13","nodeType":"VariableDeclaration","scope":3843,"src":"12814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:13"},"returnParameters":{"id":3822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3843,"src":"12852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":3820,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:13","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:13"},"scope":4937,"src":"12796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3870,"nodeType":"Block","src":"13360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"13374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3853,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":3852,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":3856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:13","memberName":"max","nodeType":"MemberAccess","src":"13382:16:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3864,"nodeType":"IfStatement","src":"13370:103:13","trueBody":{"id":3863,"nodeType":"Block","src":"13400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":3860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"13456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3858,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"13421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3862,"nodeType":"RevertStatement","src":"13414:48:13"}]}},{"expression":{"arguments":[{"id":3867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"13496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3865,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:13","typeDescriptions":{}}},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3850,"id":3869,"nodeType":"Return","src":"13482:20:13"}]},"documentation":{"id":3844,"nodeType":"StructuredDocumentation","src":"13015:276:13","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":3871,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:13","nodeType":"FunctionDefinition","parameters":{"id":3847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3846,"mutability":"mutable","name":"value","nameLocation":"13322:5:13","nodeType":"VariableDeclaration","scope":3871,"src":"13314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3845,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:13"},"returnParameters":{"id":3850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3871,"src":"13352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3848,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:13"},"scope":4937,"src":"13296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3898,"nodeType":"Block","src":"13860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"13874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3881,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":3880,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":3884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:13","memberName":"max","nodeType":"MemberAccess","src":"13882:16:13","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3892,"nodeType":"IfStatement","src":"13870:103:13","trueBody":{"id":3891,"nodeType":"Block","src":"13900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":3887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":3888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"13956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3886,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"13921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3890,"nodeType":"RevertStatement","src":"13914:48:13"}]}},{"expression":{"arguments":[{"id":3895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"13996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3893,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:13","typeDescriptions":{}}},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":3878,"id":3897,"nodeType":"Return","src":"13982:20:13"}]},"documentation":{"id":3872,"nodeType":"StructuredDocumentation","src":"13515:276:13","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":3899,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:13","nodeType":"FunctionDefinition","parameters":{"id":3875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3874,"mutability":"mutable","name":"value","nameLocation":"13822:5:13","nodeType":"VariableDeclaration","scope":3899,"src":"13814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3873,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:13"},"returnParameters":{"id":3878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3899,"src":"13852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":3876,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:13","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:13"},"scope":4937,"src":"13796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3926,"nodeType":"Block","src":"14360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"14374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3909,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":3908,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":3912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:13","memberName":"max","nodeType":"MemberAccess","src":"14382:16:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3920,"nodeType":"IfStatement","src":"14370:103:13","trueBody":{"id":3919,"nodeType":"Block","src":"14400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":3915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":3916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"14456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3914,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"14421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3918,"nodeType":"RevertStatement","src":"14414:48:13"}]}},{"expression":{"arguments":[{"id":3923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"14496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3921,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:13","typeDescriptions":{}}},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":3906,"id":3925,"nodeType":"Return","src":"14482:20:13"}]},"documentation":{"id":3900,"nodeType":"StructuredDocumentation","src":"14015:276:13","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":3927,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:13","nodeType":"FunctionDefinition","parameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"value","nameLocation":"14322:5:13","nodeType":"VariableDeclaration","scope":3927,"src":"14314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3901,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:13"},"returnParameters":{"id":3906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3927,"src":"14352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3904,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:13"},"scope":4937,"src":"14296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3954,"nodeType":"Block","src":"14860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"14874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3937,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":3936,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:13","memberName":"max","nodeType":"MemberAccess","src":"14882:16:13","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3948,"nodeType":"IfStatement","src":"14870:103:13","trueBody":{"id":3947,"nodeType":"Block","src":"14900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":3943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":3944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"14956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3942,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"14921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3946,"nodeType":"RevertStatement","src":"14914:48:13"}]}},{"expression":{"arguments":[{"id":3951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"14996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3949,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:13","typeDescriptions":{}}},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":3934,"id":3953,"nodeType":"Return","src":"14982:20:13"}]},"documentation":{"id":3928,"nodeType":"StructuredDocumentation","src":"14515:276:13","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":3955,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:13","nodeType":"FunctionDefinition","parameters":{"id":3931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"mutability":"mutable","name":"value","nameLocation":"14822:5:13","nodeType":"VariableDeclaration","scope":3955,"src":"14814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:13"},"returnParameters":{"id":3934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3955,"src":"14852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3932,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:13","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:13"},"scope":4937,"src":"14796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3982,"nodeType":"Block","src":"15360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"15374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3965,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":3964,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":3968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:13","memberName":"max","nodeType":"MemberAccess","src":"15382:16:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3976,"nodeType":"IfStatement","src":"15370:103:13","trueBody":{"id":3975,"nodeType":"Block","src":"15400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":3972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"15456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3970,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"15421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3974,"nodeType":"RevertStatement","src":"15414:48:13"}]}},{"expression":{"arguments":[{"id":3979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"15496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3977,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:13","typeDescriptions":{}}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3962,"id":3981,"nodeType":"Return","src":"15482:20:13"}]},"documentation":{"id":3956,"nodeType":"StructuredDocumentation","src":"15015:276:13","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":3983,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:13","nodeType":"FunctionDefinition","parameters":{"id":3959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3958,"mutability":"mutable","name":"value","nameLocation":"15322:5:13","nodeType":"VariableDeclaration","scope":3983,"src":"15314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3957,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:13"},"returnParameters":{"id":3962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3983,"src":"15352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3960,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:13"},"scope":4937,"src":"15296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4010,"nodeType":"Block","src":"15860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"15874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3993,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":3992,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":3996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:13","memberName":"max","nodeType":"MemberAccess","src":"15882:16:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4004,"nodeType":"IfStatement","src":"15870:103:13","trueBody":{"id":4003,"nodeType":"Block","src":"15900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"15956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3998,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"15921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4002,"nodeType":"RevertStatement","src":"15914:48:13"}]}},{"expression":{"arguments":[{"id":4007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"15996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4005,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:13","typeDescriptions":{}}},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":3990,"id":4009,"nodeType":"Return","src":"15982:20:13"}]},"documentation":{"id":3984,"nodeType":"StructuredDocumentation","src":"15515:276:13","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4011,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:13","nodeType":"FunctionDefinition","parameters":{"id":3987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3986,"mutability":"mutable","name":"value","nameLocation":"15822:5:13","nodeType":"VariableDeclaration","scope":4011,"src":"15814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3985,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:13"},"returnParameters":{"id":3990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4011,"src":"15852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3988,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:13"},"scope":4937,"src":"15796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4038,"nodeType":"Block","src":"16360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"16374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4021,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4020,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:13","memberName":"max","nodeType":"MemberAccess","src":"16382:16:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4032,"nodeType":"IfStatement","src":"16370:103:13","trueBody":{"id":4031,"nodeType":"Block","src":"16400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"16456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4026,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"16421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4030,"nodeType":"RevertStatement","src":"16414:48:13"}]}},{"expression":{"arguments":[{"id":4035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"16496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4033,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:13","typeDescriptions":{}}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4018,"id":4037,"nodeType":"Return","src":"16482:20:13"}]},"documentation":{"id":4012,"nodeType":"StructuredDocumentation","src":"16015:276:13","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4039,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:13","nodeType":"FunctionDefinition","parameters":{"id":4015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4014,"mutability":"mutable","name":"value","nameLocation":"16322:5:13","nodeType":"VariableDeclaration","scope":4039,"src":"16314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4013,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:13"},"returnParameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4039,"src":"16352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4016,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:13"},"scope":4937,"src":"16296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4066,"nodeType":"Block","src":"16854:146:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"16868:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4049,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4048,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:13","memberName":"max","nodeType":"MemberAccess","src":"16876:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4060,"nodeType":"IfStatement","src":"16864:101:13","trueBody":{"id":4059,"nodeType":"Block","src":"16893:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"16948:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4054,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"16914:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4058,"nodeType":"RevertStatement","src":"16907:47:13"}]}},{"expression":{"arguments":[{"id":4063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"16987:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4061,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:13","typeDescriptions":{}}},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4046,"id":4065,"nodeType":"Return","src":"16974:19:13"}]},"documentation":{"id":4040,"nodeType":"StructuredDocumentation","src":"16515:272:13","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4067,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:13","nodeType":"FunctionDefinition","parameters":{"id":4043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4042,"mutability":"mutable","name":"value","nameLocation":"16817:5:13","nodeType":"VariableDeclaration","scope":4067,"src":"16809:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4041,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:13"},"returnParameters":{"id":4046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4067,"src":"16847:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4044,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:13"},"scope":4937,"src":"16792:208:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4089,"nodeType":"Block","src":"17236:128:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"17250:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4083,"nodeType":"IfStatement","src":"17246:81:13","trueBody":{"id":4082,"nodeType":"Block","src":"17261:66:13","statements":[{"errorCall":{"arguments":[{"id":4079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"17310:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4078,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"17282:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4081,"nodeType":"RevertStatement","src":"17275:41:13"}]}},{"expression":{"arguments":[{"id":4086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"17351:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4084,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:13","typeDescriptions":{}}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4074,"id":4088,"nodeType":"Return","src":"17336:21:13"}]},"documentation":{"id":4068,"nodeType":"StructuredDocumentation","src":"17006:160:13","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":4090,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:13","nodeType":"FunctionDefinition","parameters":{"id":4071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4070,"mutability":"mutable","name":"value","nameLocation":"17197:5:13","nodeType":"VariableDeclaration","scope":4090,"src":"17190:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4069,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:13"},"returnParameters":{"id":4074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4090,"src":"17227:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4072,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:13"},"scope":4937,"src":"17171:193:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4115,"nodeType":"Block","src":"17761:150:13","statements":[{"expression":{"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4098,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"17771:10:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"17791:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4099,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:13","typeDescriptions":{}}},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":4104,"nodeType":"ExpressionStatement","src":"17771:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4105,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"17811:10:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"17825:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4114,"nodeType":"IfStatement","src":"17807:98:13","trueBody":{"id":4113,"nodeType":"Block","src":"17832:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:13","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"17888:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4108,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"17853:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4112,"nodeType":"RevertStatement","src":"17846:48:13"}]}}]},"documentation":{"id":4091,"nodeType":"StructuredDocumentation","src":"17370:312:13","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4116,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:13","nodeType":"FunctionDefinition","parameters":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"value","nameLocation":"17712:5:13","nodeType":"VariableDeclaration","scope":4116,"src":"17705:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4092,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:13"},"returnParameters":{"id":4097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4096,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:13","nodeType":"VariableDeclaration","scope":4116,"src":"17742:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":4095,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:13"},"scope":4937,"src":"17687:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4141,"nodeType":"Block","src":"18308:150:13","statements":[{"expression":{"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4124,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"18318:10:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"18338:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4125,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:13","typeDescriptions":{}}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":4130,"nodeType":"ExpressionStatement","src":"18318:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4131,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"18358:10:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"18372:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4140,"nodeType":"IfStatement","src":"18354:98:13","trueBody":{"id":4139,"nodeType":"Block","src":"18379:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:13","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"18435:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4134,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"18400:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4138,"nodeType":"RevertStatement","src":"18393:48:13"}]}}]},"documentation":{"id":4117,"nodeType":"StructuredDocumentation","src":"17917:312:13","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4142,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:13","nodeType":"FunctionDefinition","parameters":{"id":4120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4119,"mutability":"mutable","name":"value","nameLocation":"18259:5:13","nodeType":"VariableDeclaration","scope":4142,"src":"18252:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4118,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:13"},"returnParameters":{"id":4123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4122,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:13","nodeType":"VariableDeclaration","scope":4142,"src":"18289:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":4121,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:13"},"scope":4937,"src":"18234:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4167,"nodeType":"Block","src":"18855:150:13","statements":[{"expression":{"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4150,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"18865:10:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"18885:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4151,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:13","typeDescriptions":{}}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":4156,"nodeType":"ExpressionStatement","src":"18865:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4157,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"18905:10:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"18919:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4166,"nodeType":"IfStatement","src":"18901:98:13","trueBody":{"id":4165,"nodeType":"Block","src":"18926:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:13","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"18982:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4160,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"18947:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4164,"nodeType":"RevertStatement","src":"18940:48:13"}]}}]},"documentation":{"id":4143,"nodeType":"StructuredDocumentation","src":"18464:312:13","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4168,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:13","nodeType":"FunctionDefinition","parameters":{"id":4146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4145,"mutability":"mutable","name":"value","nameLocation":"18806:5:13","nodeType":"VariableDeclaration","scope":4168,"src":"18799:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4144,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:13"},"returnParameters":{"id":4149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4148,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:13","nodeType":"VariableDeclaration","scope":4168,"src":"18836:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":4147,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:13"},"scope":4937,"src":"18781:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4193,"nodeType":"Block","src":"19402:150:13","statements":[{"expression":{"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4176,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"19412:10:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"19432:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4177,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:13","typeDescriptions":{}}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":4182,"nodeType":"ExpressionStatement","src":"19412:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4183,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"19452:10:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"19466:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4192,"nodeType":"IfStatement","src":"19448:98:13","trueBody":{"id":4191,"nodeType":"Block","src":"19473:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:13","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"19529:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4186,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"19494:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4190,"nodeType":"RevertStatement","src":"19487:48:13"}]}}]},"documentation":{"id":4169,"nodeType":"StructuredDocumentation","src":"19011:312:13","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4194,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:13","nodeType":"FunctionDefinition","parameters":{"id":4172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4171,"mutability":"mutable","name":"value","nameLocation":"19353:5:13","nodeType":"VariableDeclaration","scope":4194,"src":"19346:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4170,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:13"},"returnParameters":{"id":4175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4174,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:13","nodeType":"VariableDeclaration","scope":4194,"src":"19383:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":4173,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:13"},"scope":4937,"src":"19328:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4219,"nodeType":"Block","src":"19949:150:13","statements":[{"expression":{"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4202,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"19959:10:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"19979:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4203,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:13","typeDescriptions":{}}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":4208,"nodeType":"ExpressionStatement","src":"19959:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4209,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"19999:10:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"20013:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4218,"nodeType":"IfStatement","src":"19995:98:13","trueBody":{"id":4217,"nodeType":"Block","src":"20020:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:13","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"20076:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4212,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"20041:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4216,"nodeType":"RevertStatement","src":"20034:48:13"}]}}]},"documentation":{"id":4195,"nodeType":"StructuredDocumentation","src":"19558:312:13","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4220,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:13","nodeType":"FunctionDefinition","parameters":{"id":4198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4197,"mutability":"mutable","name":"value","nameLocation":"19900:5:13","nodeType":"VariableDeclaration","scope":4220,"src":"19893:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4196,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:13"},"returnParameters":{"id":4201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4200,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:13","nodeType":"VariableDeclaration","scope":4220,"src":"19930:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":4199,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:13"},"scope":4937,"src":"19875:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4245,"nodeType":"Block","src":"20496:150:13","statements":[{"expression":{"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4228,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"20506:10:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"20526:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":4229,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:13","typeDescriptions":{}}},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":4234,"nodeType":"ExpressionStatement","src":"20506:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4235,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"20546:10:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"20560:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4244,"nodeType":"IfStatement","src":"20542:98:13","trueBody":{"id":4243,"nodeType":"Block","src":"20567:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:13","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"20623:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4238,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"20588:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4242,"nodeType":"RevertStatement","src":"20581:48:13"}]}}]},"documentation":{"id":4221,"nodeType":"StructuredDocumentation","src":"20105:312:13","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4246,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:13","nodeType":"FunctionDefinition","parameters":{"id":4224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4223,"mutability":"mutable","name":"value","nameLocation":"20447:5:13","nodeType":"VariableDeclaration","scope":4246,"src":"20440:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4222,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:13"},"returnParameters":{"id":4227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4226,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:13","nodeType":"VariableDeclaration","scope":4246,"src":"20477:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":4225,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:13"},"scope":4937,"src":"20422:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4271,"nodeType":"Block","src":"21043:150:13","statements":[{"expression":{"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4254,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"21053:10:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"21073:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":4255,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:13","typeDescriptions":{}}},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":4260,"nodeType":"ExpressionStatement","src":"21053:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4261,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"21093:10:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"21107:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4270,"nodeType":"IfStatement","src":"21089:98:13","trueBody":{"id":4269,"nodeType":"Block","src":"21114:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:13","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"21170:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4264,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"21135:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4268,"nodeType":"RevertStatement","src":"21128:48:13"}]}}]},"documentation":{"id":4247,"nodeType":"StructuredDocumentation","src":"20652:312:13","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4272,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:13","nodeType":"FunctionDefinition","parameters":{"id":4250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"value","nameLocation":"20994:5:13","nodeType":"VariableDeclaration","scope":4272,"src":"20987:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4248,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:13"},"returnParameters":{"id":4253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4252,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:13","nodeType":"VariableDeclaration","scope":4272,"src":"21024:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":4251,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:13"},"scope":4937,"src":"20969:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4297,"nodeType":"Block","src":"21590:150:13","statements":[{"expression":{"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4280,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"21600:10:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"21620:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":4281,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:13","typeDescriptions":{}}},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":4286,"nodeType":"ExpressionStatement","src":"21600:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4287,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"21640:10:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"21654:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4296,"nodeType":"IfStatement","src":"21636:98:13","trueBody":{"id":4295,"nodeType":"Block","src":"21661:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:13","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"21717:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4290,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"21682:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4294,"nodeType":"RevertStatement","src":"21675:48:13"}]}}]},"documentation":{"id":4273,"nodeType":"StructuredDocumentation","src":"21199:312:13","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4298,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:13","nodeType":"FunctionDefinition","parameters":{"id":4276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4275,"mutability":"mutable","name":"value","nameLocation":"21541:5:13","nodeType":"VariableDeclaration","scope":4298,"src":"21534:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4274,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:13"},"returnParameters":{"id":4279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4278,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:13","nodeType":"VariableDeclaration","scope":4298,"src":"21571:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":4277,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:13"},"scope":4937,"src":"21516:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4323,"nodeType":"Block","src":"22137:150:13","statements":[{"expression":{"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4306,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"22147:10:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"22167:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":4307,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:13","typeDescriptions":{}}},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":4312,"nodeType":"ExpressionStatement","src":"22147:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4313,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"22187:10:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"22201:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4322,"nodeType":"IfStatement","src":"22183:98:13","trueBody":{"id":4321,"nodeType":"Block","src":"22208:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:13","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"22264:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4316,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"22229:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4320,"nodeType":"RevertStatement","src":"22222:48:13"}]}}]},"documentation":{"id":4299,"nodeType":"StructuredDocumentation","src":"21746:312:13","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4324,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:13","nodeType":"FunctionDefinition","parameters":{"id":4302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4301,"mutability":"mutable","name":"value","nameLocation":"22088:5:13","nodeType":"VariableDeclaration","scope":4324,"src":"22081:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4300,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:13"},"returnParameters":{"id":4305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4304,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:13","nodeType":"VariableDeclaration","scope":4324,"src":"22118:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":4303,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:13"},"scope":4937,"src":"22063:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4349,"nodeType":"Block","src":"22684:150:13","statements":[{"expression":{"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4332,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"22694:10:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"22714:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":4333,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:13","typeDescriptions":{}}},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":4338,"nodeType":"ExpressionStatement","src":"22694:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4339,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"22734:10:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"22748:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4348,"nodeType":"IfStatement","src":"22730:98:13","trueBody":{"id":4347,"nodeType":"Block","src":"22755:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:13","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"22811:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4342,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"22776:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4346,"nodeType":"RevertStatement","src":"22769:48:13"}]}}]},"documentation":{"id":4325,"nodeType":"StructuredDocumentation","src":"22293:312:13","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4350,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:13","nodeType":"FunctionDefinition","parameters":{"id":4328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4327,"mutability":"mutable","name":"value","nameLocation":"22635:5:13","nodeType":"VariableDeclaration","scope":4350,"src":"22628:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4326,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:13"},"returnParameters":{"id":4331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4330,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:13","nodeType":"VariableDeclaration","scope":4350,"src":"22665:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":4329,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:13"},"scope":4937,"src":"22610:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4375,"nodeType":"Block","src":"23231:150:13","statements":[{"expression":{"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4358,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"23241:10:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"23261:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":4359,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:13","typeDescriptions":{}}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":4364,"nodeType":"ExpressionStatement","src":"23241:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4365,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"23281:10:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"23295:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4374,"nodeType":"IfStatement","src":"23277:98:13","trueBody":{"id":4373,"nodeType":"Block","src":"23302:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:13","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"23358:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4368,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"23323:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4372,"nodeType":"RevertStatement","src":"23316:48:13"}]}}]},"documentation":{"id":4351,"nodeType":"StructuredDocumentation","src":"22840:312:13","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4376,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:13","nodeType":"FunctionDefinition","parameters":{"id":4354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4353,"mutability":"mutable","name":"value","nameLocation":"23182:5:13","nodeType":"VariableDeclaration","scope":4376,"src":"23175:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4352,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:13"},"returnParameters":{"id":4357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4356,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:13","nodeType":"VariableDeclaration","scope":4376,"src":"23212:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":4355,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:13"},"scope":4937,"src":"23157:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4401,"nodeType":"Block","src":"23778:150:13","statements":[{"expression":{"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4384,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"23788:10:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"23808:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":4385,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:13","typeDescriptions":{}}},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":4390,"nodeType":"ExpressionStatement","src":"23788:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"23828:10:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"23842:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4400,"nodeType":"IfStatement","src":"23824:98:13","trueBody":{"id":4399,"nodeType":"Block","src":"23849:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:13","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"23905:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4394,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"23870:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4398,"nodeType":"RevertStatement","src":"23863:48:13"}]}}]},"documentation":{"id":4377,"nodeType":"StructuredDocumentation","src":"23387:312:13","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4402,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:13","nodeType":"FunctionDefinition","parameters":{"id":4380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4379,"mutability":"mutable","name":"value","nameLocation":"23729:5:13","nodeType":"VariableDeclaration","scope":4402,"src":"23722:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4378,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:13"},"returnParameters":{"id":4383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4382,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:13","nodeType":"VariableDeclaration","scope":4402,"src":"23759:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":4381,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:13"},"scope":4937,"src":"23704:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4427,"nodeType":"Block","src":"24325:150:13","statements":[{"expression":{"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4410,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"24335:10:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4405,"src":"24355:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":4411,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:13","typeDescriptions":{}}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":4416,"nodeType":"ExpressionStatement","src":"24335:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"24375:10:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4405,"src":"24389:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4426,"nodeType":"IfStatement","src":"24371:98:13","trueBody":{"id":4425,"nodeType":"Block","src":"24396:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:13","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4405,"src":"24452:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4420,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"24417:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4424,"nodeType":"RevertStatement","src":"24410:48:13"}]}}]},"documentation":{"id":4403,"nodeType":"StructuredDocumentation","src":"23934:312:13","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4428,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:13","nodeType":"FunctionDefinition","parameters":{"id":4406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4405,"mutability":"mutable","name":"value","nameLocation":"24276:5:13","nodeType":"VariableDeclaration","scope":4428,"src":"24269:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4404,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:13"},"returnParameters":{"id":4409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4408,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:13","nodeType":"VariableDeclaration","scope":4428,"src":"24306:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":4407,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:13"},"scope":4937,"src":"24251:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4453,"nodeType":"Block","src":"24872:150:13","statements":[{"expression":{"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4436,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"24882:10:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"24902:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":4437,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:13","typeDescriptions":{}}},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":4442,"nodeType":"ExpressionStatement","src":"24882:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4443,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"24922:10:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"24936:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4452,"nodeType":"IfStatement","src":"24918:98:13","trueBody":{"id":4451,"nodeType":"Block","src":"24943:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:13","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"24999:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4446,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"24964:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4450,"nodeType":"RevertStatement","src":"24957:48:13"}]}}]},"documentation":{"id":4429,"nodeType":"StructuredDocumentation","src":"24481:312:13","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4454,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:13","nodeType":"FunctionDefinition","parameters":{"id":4432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4431,"mutability":"mutable","name":"value","nameLocation":"24823:5:13","nodeType":"VariableDeclaration","scope":4454,"src":"24816:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4430,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:13"},"returnParameters":{"id":4435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4434,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:13","nodeType":"VariableDeclaration","scope":4454,"src":"24853:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":4433,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:13"},"scope":4937,"src":"24798:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4479,"nodeType":"Block","src":"25419:150:13","statements":[{"expression":{"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4462,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"25429:10:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"25449:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":4463,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:13","typeDescriptions":{}}},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":4468,"nodeType":"ExpressionStatement","src":"25429:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4469,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"25469:10:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"25483:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4478,"nodeType":"IfStatement","src":"25465:98:13","trueBody":{"id":4477,"nodeType":"Block","src":"25490:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:13","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"25546:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4472,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"25511:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4476,"nodeType":"RevertStatement","src":"25504:48:13"}]}}]},"documentation":{"id":4455,"nodeType":"StructuredDocumentation","src":"25028:312:13","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4480,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:13","nodeType":"FunctionDefinition","parameters":{"id":4458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4457,"mutability":"mutable","name":"value","nameLocation":"25370:5:13","nodeType":"VariableDeclaration","scope":4480,"src":"25363:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4456,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:13"},"returnParameters":{"id":4461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4460,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:13","nodeType":"VariableDeclaration","scope":4480,"src":"25400:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":4459,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:13"},"scope":4937,"src":"25345:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4505,"nodeType":"Block","src":"25966:150:13","statements":[{"expression":{"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4488,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"25976:10:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"25996:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":4489,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:13","typeDescriptions":{}}},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":4494,"nodeType":"ExpressionStatement","src":"25976:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4495,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"26016:10:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"26030:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4504,"nodeType":"IfStatement","src":"26012:98:13","trueBody":{"id":4503,"nodeType":"Block","src":"26037:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"26093:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4498,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"26058:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4502,"nodeType":"RevertStatement","src":"26051:48:13"}]}}]},"documentation":{"id":4481,"nodeType":"StructuredDocumentation","src":"25575:312:13","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4506,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:13","nodeType":"FunctionDefinition","parameters":{"id":4484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4483,"mutability":"mutable","name":"value","nameLocation":"25917:5:13","nodeType":"VariableDeclaration","scope":4506,"src":"25910:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4482,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:13"},"returnParameters":{"id":4487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4486,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:13","nodeType":"VariableDeclaration","scope":4506,"src":"25947:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":4485,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:13"},"scope":4937,"src":"25892:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4531,"nodeType":"Block","src":"26513:150:13","statements":[{"expression":{"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4514,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"26523:10:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4509,"src":"26543:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":4515,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:13","typeDescriptions":{}}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":4520,"nodeType":"ExpressionStatement","src":"26523:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"26563:10:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4509,"src":"26577:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4530,"nodeType":"IfStatement","src":"26559:98:13","trueBody":{"id":4529,"nodeType":"Block","src":"26584:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:13","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4509,"src":"26640:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4524,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"26605:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4528,"nodeType":"RevertStatement","src":"26598:48:13"}]}}]},"documentation":{"id":4507,"nodeType":"StructuredDocumentation","src":"26122:312:13","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4532,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:13","nodeType":"FunctionDefinition","parameters":{"id":4510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4509,"mutability":"mutable","name":"value","nameLocation":"26464:5:13","nodeType":"VariableDeclaration","scope":4532,"src":"26457:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4508,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:13"},"returnParameters":{"id":4513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4512,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:13","nodeType":"VariableDeclaration","scope":4532,"src":"26494:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":4511,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:13"},"scope":4937,"src":"26439:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4557,"nodeType":"Block","src":"27060:150:13","statements":[{"expression":{"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4540,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"27070:10:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"27090:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":4541,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:13","typeDescriptions":{}}},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":4546,"nodeType":"ExpressionStatement","src":"27070:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4547,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"27110:10:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"27124:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4556,"nodeType":"IfStatement","src":"27106:98:13","trueBody":{"id":4555,"nodeType":"Block","src":"27131:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:13","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"27187:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4550,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"27152:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4554,"nodeType":"RevertStatement","src":"27145:48:13"}]}}]},"documentation":{"id":4533,"nodeType":"StructuredDocumentation","src":"26669:312:13","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4558,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:13","nodeType":"FunctionDefinition","parameters":{"id":4536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4535,"mutability":"mutable","name":"value","nameLocation":"27011:5:13","nodeType":"VariableDeclaration","scope":4558,"src":"27004:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4534,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:13"},"returnParameters":{"id":4539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4538,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:13","nodeType":"VariableDeclaration","scope":4558,"src":"27041:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":4537,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:13"},"scope":4937,"src":"26986:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4583,"nodeType":"Block","src":"27607:150:13","statements":[{"expression":{"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4566,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"27617:10:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"27637:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":4567,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:13","typeDescriptions":{}}},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":4572,"nodeType":"ExpressionStatement","src":"27617:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4573,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"27657:10:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"27671:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4582,"nodeType":"IfStatement","src":"27653:98:13","trueBody":{"id":4581,"nodeType":"Block","src":"27678:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:13","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"27734:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4576,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"27699:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4580,"nodeType":"RevertStatement","src":"27692:48:13"}]}}]},"documentation":{"id":4559,"nodeType":"StructuredDocumentation","src":"27216:312:13","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4584,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:13","nodeType":"FunctionDefinition","parameters":{"id":4562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4561,"mutability":"mutable","name":"value","nameLocation":"27558:5:13","nodeType":"VariableDeclaration","scope":4584,"src":"27551:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4560,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:13"},"returnParameters":{"id":4565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:13","nodeType":"VariableDeclaration","scope":4584,"src":"27588:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":4563,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:13"},"scope":4937,"src":"27533:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4609,"nodeType":"Block","src":"28147:148:13","statements":[{"expression":{"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4592,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"28157:10:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"28176:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":4593,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:13","typeDescriptions":{}}},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":4598,"nodeType":"ExpressionStatement","src":"28157:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4599,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"28196:10:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"28210:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4608,"nodeType":"IfStatement","src":"28192:97:13","trueBody":{"id":4607,"nodeType":"Block","src":"28217:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"28272:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4602,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"28238:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4606,"nodeType":"RevertStatement","src":"28231:47:13"}]}}]},"documentation":{"id":4585,"nodeType":"StructuredDocumentation","src":"27763:307:13","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4610,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:13","nodeType":"FunctionDefinition","parameters":{"id":4588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4587,"mutability":"mutable","name":"value","nameLocation":"28099:5:13","nodeType":"VariableDeclaration","scope":4610,"src":"28092:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4586,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:13"},"returnParameters":{"id":4591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4590,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:13","nodeType":"VariableDeclaration","scope":4610,"src":"28129:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":4589,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:13"},"scope":4937,"src":"28075:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4635,"nodeType":"Block","src":"28685:148:13","statements":[{"expression":{"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4618,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"28695:10:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"28714:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":4619,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:13","typeDescriptions":{}}},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":4624,"nodeType":"ExpressionStatement","src":"28695:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4625,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"28734:10:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"28748:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4634,"nodeType":"IfStatement","src":"28730:97:13","trueBody":{"id":4633,"nodeType":"Block","src":"28755:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:13","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"28810:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4628,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"28776:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4632,"nodeType":"RevertStatement","src":"28769:47:13"}]}}]},"documentation":{"id":4611,"nodeType":"StructuredDocumentation","src":"28301:307:13","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4636,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:13","nodeType":"FunctionDefinition","parameters":{"id":4614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4613,"mutability":"mutable","name":"value","nameLocation":"28637:5:13","nodeType":"VariableDeclaration","scope":4636,"src":"28630:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4612,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:13"},"returnParameters":{"id":4617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4616,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:13","nodeType":"VariableDeclaration","scope":4636,"src":"28667:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":4615,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:13"},"scope":4937,"src":"28613:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4661,"nodeType":"Block","src":"29223:148:13","statements":[{"expression":{"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4644,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"29233:10:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"29252:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":4645,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:13","typeDescriptions":{}}},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":4650,"nodeType":"ExpressionStatement","src":"29233:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4651,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"29272:10:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"29286:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4660,"nodeType":"IfStatement","src":"29268:97:13","trueBody":{"id":4659,"nodeType":"Block","src":"29293:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:13","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"29348:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4654,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"29314:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4658,"nodeType":"RevertStatement","src":"29307:47:13"}]}}]},"documentation":{"id":4637,"nodeType":"StructuredDocumentation","src":"28839:307:13","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4662,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:13","nodeType":"FunctionDefinition","parameters":{"id":4640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4639,"mutability":"mutable","name":"value","nameLocation":"29175:5:13","nodeType":"VariableDeclaration","scope":4662,"src":"29168:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4638,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:13"},"returnParameters":{"id":4643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4642,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:13","nodeType":"VariableDeclaration","scope":4662,"src":"29205:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":4641,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:13"},"scope":4937,"src":"29151:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4687,"nodeType":"Block","src":"29761:148:13","statements":[{"expression":{"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4670,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4668,"src":"29771:10:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"29790:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":4671,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:13","typeDescriptions":{}}},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":4676,"nodeType":"ExpressionStatement","src":"29771:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4677,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4668,"src":"29810:10:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"29824:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4686,"nodeType":"IfStatement","src":"29806:97:13","trueBody":{"id":4685,"nodeType":"Block","src":"29831:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:13","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"29886:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4680,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"29852:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4684,"nodeType":"RevertStatement","src":"29845:47:13"}]}}]},"documentation":{"id":4663,"nodeType":"StructuredDocumentation","src":"29377:307:13","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4688,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:13","nodeType":"FunctionDefinition","parameters":{"id":4666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4665,"mutability":"mutable","name":"value","nameLocation":"29713:5:13","nodeType":"VariableDeclaration","scope":4688,"src":"29706:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4664,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:13"},"returnParameters":{"id":4669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4668,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:13","nodeType":"VariableDeclaration","scope":4688,"src":"29743:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":4667,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:13"},"scope":4937,"src":"29689:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4713,"nodeType":"Block","src":"30299:148:13","statements":[{"expression":{"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4696,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"30309:10:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"30328:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":4697,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:13","typeDescriptions":{}}},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4702,"nodeType":"ExpressionStatement","src":"30309:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4703,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"30348:10:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"30362:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4712,"nodeType":"IfStatement","src":"30344:97:13","trueBody":{"id":4711,"nodeType":"Block","src":"30369:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"30424:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4706,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"30390:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4710,"nodeType":"RevertStatement","src":"30383:47:13"}]}}]},"documentation":{"id":4689,"nodeType":"StructuredDocumentation","src":"29915:307:13","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4714,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:13","nodeType":"FunctionDefinition","parameters":{"id":4692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4691,"mutability":"mutable","name":"value","nameLocation":"30251:5:13","nodeType":"VariableDeclaration","scope":4714,"src":"30244:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4690,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:13"},"returnParameters":{"id":4695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4694,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:13","nodeType":"VariableDeclaration","scope":4714,"src":"30281:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4693,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:13"},"scope":4937,"src":"30227:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4739,"nodeType":"Block","src":"30837:148:13","statements":[{"expression":{"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4722,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"30847:10:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"30866:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":4723,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:13","typeDescriptions":{}}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":4728,"nodeType":"ExpressionStatement","src":"30847:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4729,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"30886:10:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"30900:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4738,"nodeType":"IfStatement","src":"30882:97:13","trueBody":{"id":4737,"nodeType":"Block","src":"30907:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:13","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"30962:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4732,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"30928:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4736,"nodeType":"RevertStatement","src":"30921:47:13"}]}}]},"documentation":{"id":4715,"nodeType":"StructuredDocumentation","src":"30453:307:13","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4740,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:13","nodeType":"FunctionDefinition","parameters":{"id":4718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4717,"mutability":"mutable","name":"value","nameLocation":"30789:5:13","nodeType":"VariableDeclaration","scope":4740,"src":"30782:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4716,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:13"},"returnParameters":{"id":4721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4720,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:13","nodeType":"VariableDeclaration","scope":4740,"src":"30819:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":4719,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:13"},"scope":4937,"src":"30765:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4765,"nodeType":"Block","src":"31375:148:13","statements":[{"expression":{"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4748,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"31385:10:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"31404:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":4749,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:13","typeDescriptions":{}}},"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":4754,"nodeType":"ExpressionStatement","src":"31385:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4755,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"31424:10:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"31438:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4764,"nodeType":"IfStatement","src":"31420:97:13","trueBody":{"id":4763,"nodeType":"Block","src":"31445:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"31500:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4758,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"31466:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4762,"nodeType":"RevertStatement","src":"31459:47:13"}]}}]},"documentation":{"id":4741,"nodeType":"StructuredDocumentation","src":"30991:307:13","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4766,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:13","nodeType":"FunctionDefinition","parameters":{"id":4744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4743,"mutability":"mutable","name":"value","nameLocation":"31327:5:13","nodeType":"VariableDeclaration","scope":4766,"src":"31320:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4742,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:13"},"returnParameters":{"id":4747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4746,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:13","nodeType":"VariableDeclaration","scope":4766,"src":"31357:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":4745,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:13"},"scope":4937,"src":"31303:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4791,"nodeType":"Block","src":"31913:148:13","statements":[{"expression":{"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4774,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"31923:10:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"31942:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":4775,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:13","typeDescriptions":{}}},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":4780,"nodeType":"ExpressionStatement","src":"31923:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4781,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"31962:10:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"31976:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4790,"nodeType":"IfStatement","src":"31958:97:13","trueBody":{"id":4789,"nodeType":"Block","src":"31983:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"32038:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4784,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"32004:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4788,"nodeType":"RevertStatement","src":"31997:47:13"}]}}]},"documentation":{"id":4767,"nodeType":"StructuredDocumentation","src":"31529:307:13","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4792,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:13","nodeType":"FunctionDefinition","parameters":{"id":4770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4769,"mutability":"mutable","name":"value","nameLocation":"31865:5:13","nodeType":"VariableDeclaration","scope":4792,"src":"31858:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4768,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:13"},"returnParameters":{"id":4773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4772,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:13","nodeType":"VariableDeclaration","scope":4792,"src":"31895:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":4771,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:13"},"scope":4937,"src":"31841:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4817,"nodeType":"Block","src":"32451:148:13","statements":[{"expression":{"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4800,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"32461:10:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"32480:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4801,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:13","typeDescriptions":{}}},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4806,"nodeType":"ExpressionStatement","src":"32461:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4807,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"32500:10:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"32514:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4816,"nodeType":"IfStatement","src":"32496:97:13","trueBody":{"id":4815,"nodeType":"Block","src":"32521:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"32576:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4810,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"32542:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4814,"nodeType":"RevertStatement","src":"32535:47:13"}]}}]},"documentation":{"id":4793,"nodeType":"StructuredDocumentation","src":"32067:307:13","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4818,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:13","nodeType":"FunctionDefinition","parameters":{"id":4796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4795,"mutability":"mutable","name":"value","nameLocation":"32403:5:13","nodeType":"VariableDeclaration","scope":4818,"src":"32396:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4794,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:13"},"returnParameters":{"id":4799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4798,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:13","nodeType":"VariableDeclaration","scope":4818,"src":"32433:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":4797,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:13"},"scope":4937,"src":"32379:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4843,"nodeType":"Block","src":"32989:148:13","statements":[{"expression":{"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4826,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"32999:10:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"33018:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":4827,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:13","typeDescriptions":{}}},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":4832,"nodeType":"ExpressionStatement","src":"32999:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4833,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"33038:10:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"33052:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4842,"nodeType":"IfStatement","src":"33034:97:13","trueBody":{"id":4841,"nodeType":"Block","src":"33059:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:13","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"33114:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4836,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"33080:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4840,"nodeType":"RevertStatement","src":"33073:47:13"}]}}]},"documentation":{"id":4819,"nodeType":"StructuredDocumentation","src":"32605:307:13","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4844,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:13","nodeType":"FunctionDefinition","parameters":{"id":4822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4821,"mutability":"mutable","name":"value","nameLocation":"32941:5:13","nodeType":"VariableDeclaration","scope":4844,"src":"32934:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4820,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:13"},"returnParameters":{"id":4825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4824,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:13","nodeType":"VariableDeclaration","scope":4844,"src":"32971:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4823,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:13"},"scope":4937,"src":"32917:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4869,"nodeType":"Block","src":"33527:148:13","statements":[{"expression":{"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4852,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"33537:10:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"33556:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":4853,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:13","typeDescriptions":{}}},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":4858,"nodeType":"ExpressionStatement","src":"33537:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4859,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"33576:10:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"33590:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4868,"nodeType":"IfStatement","src":"33572:97:13","trueBody":{"id":4867,"nodeType":"Block","src":"33597:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"33652:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4862,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"33618:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4866,"nodeType":"RevertStatement","src":"33611:47:13"}]}}]},"documentation":{"id":4845,"nodeType":"StructuredDocumentation","src":"33143:307:13","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4870,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:13","nodeType":"FunctionDefinition","parameters":{"id":4848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4847,"mutability":"mutable","name":"value","nameLocation":"33479:5:13","nodeType":"VariableDeclaration","scope":4870,"src":"33472:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4846,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:13"},"returnParameters":{"id":4851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4850,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:13","nodeType":"VariableDeclaration","scope":4870,"src":"33509:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":4849,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:13"},"scope":4937,"src":"33455:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4895,"nodeType":"Block","src":"34058:146:13","statements":[{"expression":{"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4878,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"34068:10:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"34086:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":4879,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:13","typeDescriptions":{}}},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":4884,"nodeType":"ExpressionStatement","src":"34068:24:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4885,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"34106:10:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"34120:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4894,"nodeType":"IfStatement","src":"34102:96:13","trueBody":{"id":4893,"nodeType":"Block","src":"34127:71:13","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"34181:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4888,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"34148:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4892,"nodeType":"RevertStatement","src":"34141:46:13"}]}}]},"documentation":{"id":4871,"nodeType":"StructuredDocumentation","src":"33681:302:13","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4896,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:13","nodeType":"FunctionDefinition","parameters":{"id":4874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4873,"mutability":"mutable","name":"value","nameLocation":"34011:5:13","nodeType":"VariableDeclaration","scope":4896,"src":"34004:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4872,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:13"},"returnParameters":{"id":4877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4876,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:13","nodeType":"VariableDeclaration","scope":4896,"src":"34041:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":4875,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:13"},"scope":4937,"src":"33988:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4925,"nodeType":"Block","src":"34444:250:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"34557:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":4909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4908,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4907,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:13","memberName":"max","nodeType":"MemberAccess","src":"34573:16:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4905,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:13","typeDescriptions":{}}},"id":4912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4919,"nodeType":"IfStatement","src":"34553:105:13","trueBody":{"id":4918,"nodeType":"Block","src":"34592:66:13","statements":[{"errorCall":{"arguments":[{"id":4915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"34641:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4914,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"34613:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4917,"nodeType":"RevertStatement","src":"34606:41:13"}]}},{"expression":{"arguments":[{"id":4922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"34681:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4920,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:13","typeDescriptions":{}}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4903,"id":4924,"nodeType":"Return","src":"34667:20:13"}]},"documentation":{"id":4897,"nodeType":"StructuredDocumentation","src":"34210:165:13","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":4926,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:13","nodeType":"FunctionDefinition","parameters":{"id":4900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4899,"mutability":"mutable","name":"value","nameLocation":"34406:5:13","nodeType":"VariableDeclaration","scope":4926,"src":"34398:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4898,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:13"},"returnParameters":{"id":4903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4926,"src":"34436:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4901,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:13"},"scope":4937,"src":"34380:314:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4935,"nodeType":"Block","src":"34853:87:13","statements":[{"AST":{"nativeSrc":"34888:46:13","nodeType":"YulBlock","src":"34888:46:13","statements":[{"nativeSrc":"34902:22:13","nodeType":"YulAssignment","src":"34902:22:13","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:13","nodeType":"YulIdentifier","src":"34921:1:13"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:13","nodeType":"YulIdentifier","src":"34914:6:13"},"nativeSrc":"34914:9:13","nodeType":"YulFunctionCall","src":"34914:9:13"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:13","nodeType":"YulIdentifier","src":"34907:6:13"},"nativeSrc":"34907:17:13","nodeType":"YulFunctionCall","src":"34907:17:13"},"variableNames":[{"name":"u","nativeSrc":"34902:1:13","nodeType":"YulIdentifier","src":"34902:1:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4929,"isOffset":false,"isSlot":false,"src":"34921:1:13","valueSize":1},{"declaration":4932,"isOffset":false,"isSlot":false,"src":"34902:1:13","valueSize":1}],"flags":["memory-safe"],"id":4934,"nodeType":"InlineAssembly","src":"34863:71:13"}]},"documentation":{"id":4927,"nodeType":"StructuredDocumentation","src":"34700:90:13","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":4936,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:13","nodeType":"FunctionDefinition","parameters":{"id":4930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4929,"mutability":"mutable","name":"b","nameLocation":"34816:1:13","nodeType":"VariableDeclaration","scope":4936,"src":"34811:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4928,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:13"},"returnParameters":{"id":4933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4932,"mutability":"mutable","name":"u","nameLocation":"34850:1:13","nodeType":"VariableDeclaration","scope":4936,"src":"34842:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4931,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:13"},"scope":4937,"src":"34795:145:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4938,"src":"769:34173:13","usedErrors":[3182,3187,3194,3199],"usedEvents":[]}],"src":"192:34751:13"},"id":13},"contracts/SimpleSwap.sol":{"ast":{"absolutePath":"contracts/SimpleSwap.sol","exportedSymbols":{"ERC20":[889],"IERC20":[967],"Math":[3172],"Panic":[1539],"SafeCast":[4937],"SafeERC20":[1457],"SimpleSwap":[5845]},"id":5846,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4939,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4941,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5846,"sourceUnit":968,"src":"57:70:14","symbolAliases":[{"foreign":{"id":4940,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"65:6:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":4943,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5846,"sourceUnit":1458,"src":"128:82:14","symbolAliases":[{"foreign":{"id":4942,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"136:9:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4945,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5846,"sourceUnit":890,"src":"211:68:14","symbolAliases":[{"foreign":{"id":4944,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"219:5:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":4946,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5846,"sourceUnit":3173,"src":"280:53:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4948,"name":"ERC20","nameLocations":["553:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":889,"src":"553:5:14"},"id":4949,"nodeType":"InheritanceSpecifier","src":"553:5:14"}],"canonicalName":"SimpleSwap","contractDependencies":[],"contractKind":"contract","documentation":{"id":4947,"nodeType":"StructuredDocumentation","src":"335:194:14","text":" @title SimpleSwap\n @notice A simplified Uniswap-like token swap and liquidity pool implementation\n @dev This contract allows users to swap between two tokens and provide liquidity"},"fullyImplemented":true,"id":5845,"linearizedBaseContracts":[5845,889,279,993,967,1487],"name":"SimpleSwap","nameLocation":"539:10:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4953,"libraryName":{"id":4950,"name":"SafeERC20","nameLocations":["571:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":1457,"src":"571:9:14"},"nodeType":"UsingForDirective","src":"565:27:14","typeName":{"id":4952,"nodeType":"UserDefinedTypeName","pathNode":{"id":4951,"name":"IERC20","nameLocations":["585:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"585:6:14"},"referencedDeclaration":967,"src":"585:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}}},{"constant":false,"documentation":{"id":4954,"nodeType":"StructuredDocumentation","src":"602:58:14","text":"@notice Address of the first token in the trading pair"},"functionSelector":"0dfe1681","id":4956,"mutability":"mutable","name":"token0","nameLocation":"680:6:14","nodeType":"VariableDeclaration","scope":5845,"src":"665:21:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4955,"name":"address","nodeType":"ElementaryTypeName","src":"665:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":4957,"nodeType":"StructuredDocumentation","src":"697:59:14","text":"@notice Address of the second token in the trading pair"},"functionSelector":"d21220a7","id":4959,"mutability":"mutable","name":"token1","nameLocation":"776:6:14","nodeType":"VariableDeclaration","scope":5845,"src":"761:21:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4958,"name":"address","nodeType":"ElementaryTypeName","src":"761:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"canonicalName":"SimpleSwap.SwapData","documentation":{"id":4960,"nodeType":"StructuredDocumentation","src":"790:713:14","text":" @title SwapData\n @notice Contains all necessary data for token swap operations\n @dev Used to group swap-related parameters and avoid stack too deep errors\n @member tokenIn Address of the token being swapped (input token)\n @member tokenOut Address of the token to be received (output token)\n @member amountIn Exact amount of input tokens to be swapped\n @member amountOut Expected amount of output tokens to receive\n @member reserveIn Current reserve amount of the input token in the pool\n @member reserveOut Current reserve amount of the output token in the pool\n @custom:usage Used in swapExactTokensForTokens and related internal functions"},"id":4973,"members":[{"constant":false,"id":4962,"mutability":"mutable","name":"tokenIn","nameLocation":"1542:7:14","nodeType":"VariableDeclaration","scope":4973,"src":"1534:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4961,"name":"address","nodeType":"ElementaryTypeName","src":"1534:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4964,"mutability":"mutable","name":"tokenOut","nameLocation":"1567:8:14","nodeType":"VariableDeclaration","scope":4973,"src":"1559:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4963,"name":"address","nodeType":"ElementaryTypeName","src":"1559:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4966,"mutability":"mutable","name":"amountIn","nameLocation":"1593:8:14","nodeType":"VariableDeclaration","scope":4973,"src":"1585:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4965,"name":"uint256","nodeType":"ElementaryTypeName","src":"1585:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4968,"mutability":"mutable","name":"amountOut","nameLocation":"1619:9:14","nodeType":"VariableDeclaration","scope":4973,"src":"1611:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4967,"name":"uint256","nodeType":"ElementaryTypeName","src":"1611:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4970,"mutability":"mutable","name":"reserveIn","nameLocation":"1646:9:14","nodeType":"VariableDeclaration","scope":4973,"src":"1638:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4969,"name":"uint256","nodeType":"ElementaryTypeName","src":"1638:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4972,"mutability":"mutable","name":"reserveOut","nameLocation":"1673:10:14","nodeType":"VariableDeclaration","scope":4973,"src":"1665:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4971,"name":"uint256","nodeType":"ElementaryTypeName","src":"1665:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SwapData","nameLocation":"1515:8:14","nodeType":"StructDefinition","scope":5845,"src":"1508:182:14","visibility":"public"},{"canonicalName":"SimpleSwap.RemoveLiqData","documentation":{"id":4974,"nodeType":"StructuredDocumentation","src":"1697:376:14","text":" @title RemoveLiqData\n @notice Contains basic data for liquidity removal operations\n @dev Simplified struct for removeLiquidity function parameters\n @member tokenA Address of the first token in the pair\n @member tokenB Address of the second token in the pair\n @custom:usage Used in removeLiquidity and related internal functions"},"id":4979,"members":[{"constant":false,"id":4976,"mutability":"mutable","name":"tokenA","nameLocation":"2117:6:14","nodeType":"VariableDeclaration","scope":4979,"src":"2109:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4975,"name":"address","nodeType":"ElementaryTypeName","src":"2109:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4978,"mutability":"mutable","name":"tokenB","nameLocation":"2141:6:14","nodeType":"VariableDeclaration","scope":4979,"src":"2133:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4977,"name":"address","nodeType":"ElementaryTypeName","src":"2133:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"RemoveLiqData","nameLocation":"2085:13:14","nodeType":"StructDefinition","scope":5845,"src":"2078:76:14","visibility":"public"},{"anonymous":false,"documentation":{"id":4980,"nodeType":"StructuredDocumentation","src":"2161:505:14","text":" @notice Emitted when liquidity is added to the pool\n @dev Records all relevant details of a liquidity provision event\n @param provider Address that provided the liquidity (indexed for filtering)\n @param amountA Amount of tokenA deposited\n @param amountB Amount of tokenB deposited\n @param liquidity Amount of LP tokens minted to the provider\n @custom:examples \n - When adding 100 TokenA and 200 TokenB, emits (provider, 100, 200, sqrt(100*200))"},"eventSelector":"64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e","id":4990,"name":"LiquidityAdded","nameLocation":"2677:14:14","nodeType":"EventDefinition","parameters":{"id":4989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4982,"indexed":true,"mutability":"mutable","name":"provider","nameLocation":"2717:8:14","nodeType":"VariableDeclaration","scope":4990,"src":"2701:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4981,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4984,"indexed":false,"mutability":"mutable","name":"amountA","nameLocation":"2743:7:14","nodeType":"VariableDeclaration","scope":4990,"src":"2735:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4983,"name":"uint256","nodeType":"ElementaryTypeName","src":"2735:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4986,"indexed":false,"mutability":"mutable","name":"amountB","nameLocation":"2768:7:14","nodeType":"VariableDeclaration","scope":4990,"src":"2760:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4985,"name":"uint256","nodeType":"ElementaryTypeName","src":"2760:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4988,"indexed":false,"mutability":"mutable","name":"liquidity","nameLocation":"2793:9:14","nodeType":"VariableDeclaration","scope":4990,"src":"2785:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4987,"name":"uint256","nodeType":"ElementaryTypeName","src":"2785:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2691:117:14"},"src":"2671:138:14"},{"anonymous":false,"documentation":{"id":4991,"nodeType":"StructuredDocumentation","src":"2820:509:14","text":" @notice Emitted when liquidity is removed from the pool\n @dev Records all relevant details of a liquidity withdrawal event\n @param provider Address that removed the liquidity (indexed for filtering)\n @param amountA Amount of tokenA withdrawn\n @param amountB Amount of tokenB withdrawn\n @param liquidity Amount of LP tokens burned from the provider\n @custom:examples \n - When removing 50% of LP tokens, emits (provider, reserveA/2, reserveB/2, LP/2)"},"eventSelector":"1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d","id":5001,"name":"LiquidityRemoved","nameLocation":"3340:16:14","nodeType":"EventDefinition","parameters":{"id":5000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4993,"indexed":true,"mutability":"mutable","name":"provider","nameLocation":"3382:8:14","nodeType":"VariableDeclaration","scope":5001,"src":"3366:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4992,"name":"address","nodeType":"ElementaryTypeName","src":"3366:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4995,"indexed":false,"mutability":"mutable","name":"amountA","nameLocation":"3408:7:14","nodeType":"VariableDeclaration","scope":5001,"src":"3400:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4994,"name":"uint256","nodeType":"ElementaryTypeName","src":"3400:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4997,"indexed":false,"mutability":"mutable","name":"amountB","nameLocation":"3433:7:14","nodeType":"VariableDeclaration","scope":5001,"src":"3425:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4996,"name":"uint256","nodeType":"ElementaryTypeName","src":"3425:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4999,"indexed":false,"mutability":"mutable","name":"liquidity","nameLocation":"3458:9:14","nodeType":"VariableDeclaration","scope":5001,"src":"3450:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4998,"name":"uint256","nodeType":"ElementaryTypeName","src":"3450:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3356:117:14"},"src":"3334:140:14"},{"body":{"id":5021,"nodeType":"Block","src":"3761:59:14","statements":[{"expression":{"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5013,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"3771:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5014,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"3780:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3771:16:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5016,"nodeType":"ExpressionStatement","src":"3771:16:14"},{"expression":{"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5017,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"3797:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5018,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"3806:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3797:16:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5020,"nodeType":"ExpressionStatement","src":"3797:16:14"}]},"documentation":{"id":5002,"nodeType":"StructuredDocumentation","src":"3480:204:14","text":" @dev Initializes the contract with the two tokens to be traded\n @param _token0 Address of the first token in the pair\n @param _token1 Address of the second token in the pair"},"id":5022,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4c6971756964697479","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3741:11:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_f635637ba62fd05a8c192160221386e8a7a4f08458b93e1a9885a356979e42ec","typeString":"literal_string \"Liquidity\""},"value":"Liquidity"},{"hexValue":"4c4951","id":5010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3754:5:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_4021f2c0e815c4b5a0cde20b3b0abd2cf98f021314b06481d278c5d2352c2d28","typeString":"literal_string \"LIQ\""},"value":"LIQ"}],"id":5011,"kind":"baseConstructorSpecifier","modifierName":{"id":5008,"name":"ERC20","nameLocations":["3735:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":889,"src":"3735:5:14"},"nodeType":"ModifierInvocation","src":"3735:25:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5004,"mutability":"mutable","name":"_token0","nameLocation":"3709:7:14","nodeType":"VariableDeclaration","scope":5022,"src":"3701:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5003,"name":"address","nodeType":"ElementaryTypeName","src":"3701:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5006,"mutability":"mutable","name":"_token1","nameLocation":"3726:7:14","nodeType":"VariableDeclaration","scope":5022,"src":"3718:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5005,"name":"address","nodeType":"ElementaryTypeName","src":"3718:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3700:34:14"},"returnParameters":{"id":5012,"nodeType":"ParameterList","parameters":[],"src":"3761:0:14"},"scope":5845,"src":"3689:131:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5147,"nodeType":"Block","src":"4995:821:14","statements":[{"assignments":[5049],"declarations":[{"constant":false,"id":5049,"mutability":"mutable","name":"_token0","nameLocation":"5013:7:14","nodeType":"VariableDeclaration","scope":5147,"src":"5005:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5048,"name":"address","nodeType":"ElementaryTypeName","src":"5005:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5051,"initialValue":{"id":5050,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"5023:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5005:24:14"},{"assignments":[5053],"declarations":[{"constant":false,"id":5053,"mutability":"mutable","name":"_token1","nameLocation":"5047:7:14","nodeType":"VariableDeclaration","scope":5147,"src":"5039:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5052,"name":"address","nodeType":"ElementaryTypeName","src":"5039:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5055,"initialValue":{"id":5054,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"5057:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5039:24:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5057,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"5081:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":5058,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5093:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5099:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"5093:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5081:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446561646c696e6520706173736564","id":5061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5110:17:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f","typeString":"literal_string \"Deadline passed\""},"value":"Deadline passed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f","typeString":"literal_string \"Deadline passed\""}],"id":5056,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5073:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5073:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5063,"nodeType":"ExpressionStatement","src":"5073:55:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5065,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"5147:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5066,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"5157:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5147:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5068,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5027,"src":"5168:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5069,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"5178:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5168:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5147:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5146:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5073,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"5191:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5074,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"5201:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5191:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5076,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5027,"src":"5212:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5077,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"5222:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5212:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5191:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5190:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5146:84:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e73","id":5082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5232:16:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3","typeString":"literal_string \"Invalid tokens\""},"value":"Invalid tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3","typeString":"literal_string \"Invalid tokens\""}],"id":5064,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5138:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:111:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5084,"nodeType":"ExpressionStatement","src":"5138:111:14"},{"assignments":[5086],"declarations":[{"constant":false,"id":5086,"mutability":"mutable","name":"balanceA","nameLocation":"5267:8:14","nodeType":"VariableDeclaration","scope":5147,"src":"5259:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5085,"name":"uint256","nodeType":"ElementaryTypeName","src":"5259:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5096,"initialValue":{"arguments":[{"arguments":[{"id":5093,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5311:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}],"id":5092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5303:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5091,"name":"address","nodeType":"ElementaryTypeName","src":"5303:7:14","typeDescriptions":{}}},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5303:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5088,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"5285:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5087,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5278:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5278:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5293:9:14","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":924,"src":"5278:24:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5278:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5259:58:14"},{"assignments":[5098],"declarations":[{"constant":false,"id":5098,"mutability":"mutable","name":"balanceB","nameLocation":"5335:8:14","nodeType":"VariableDeclaration","scope":5147,"src":"5327:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5097,"name":"uint256","nodeType":"ElementaryTypeName","src":"5327:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5108,"initialValue":{"arguments":[{"arguments":[{"id":5105,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5379:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}],"id":5104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5371:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5103,"name":"address","nodeType":"ElementaryTypeName","src":"5371:7:14","typeDescriptions":{}}},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5371:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5100,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5027,"src":"5353:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5099,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5346:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5346:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5361:9:14","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":924,"src":"5346:24:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5346:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5327:58:14"},{"expression":{"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5109,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"5405:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5110,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"5414:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5111,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"5404:18:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5113,"name":"amountADesired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"5463:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5114,"name":"amountBDesired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"5491:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5115,"name":"amountAMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5033,"src":"5519:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5116,"name":"amountBMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"5543:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5117,"name":"balanceA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"5567:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5118,"name":"balanceB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"5589:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5112,"name":"_calculateOptimalAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"5425:24:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5425:182:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"5404:203:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5121,"nodeType":"ExpressionStatement","src":"5404:203:14"},{"expression":{"arguments":[{"id":5123,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"5642:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5124,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5027,"src":"5650:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5125,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"5658:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5126,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"5667:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5127,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"5676:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5122,"name":"_executeDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"5626:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,address,uint256,uint256,address)"}},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5626:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5129,"nodeType":"ExpressionStatement","src":"5626:53:14"},{"expression":{"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5130,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"5698:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5133,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"5720:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5134,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"5730:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5720:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5131,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"5710:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3172_$","typeString":"type(library Math)"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5715:4:14","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":2716,"src":"5710:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5710:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5698:40:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5138,"nodeType":"ExpressionStatement","src":"5698:40:14"},{"eventCall":{"arguments":[{"expression":{"id":5140,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5769:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5773:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5769:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5142,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"5781:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5143,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"5790:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5144,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"5799:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5139,"name":"LiquidityAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"5754:14:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5754:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5146,"nodeType":"EmitStatement","src":"5749:60:14"}]},"documentation":{"id":5023,"nodeType":"StructuredDocumentation","src":"3826:850:14","text":" @notice Adds liquidity to the pool\n @dev Mints liquidity tokens proportional to the deposited amounts\n @param tokenA Address of first token in the pair\n @param tokenB Address of second token in the pair\n @param amountADesired Desired amount of tokenA to deposit\n @param amountBDesired Desired amount of tokenB to deposit\n @param amountAMin Minimum amount of tokenA to deposit (slippage protection)\n @param amountBMin Minimum amount of tokenB to deposit (slippage protection)\n @param to Address that will receive the liquidity tokens\n @param deadline Unix timestamp after which the transaction will revert\n @return amountA Actual amount of tokenA deposited\n @return amountB Actual amount of tokenB deposited\n @return liquidity Amount of liquidity tokens minted"},"functionSelector":"e8e33700","id":5148,"implemented":true,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"4691:12:14","nodeType":"FunctionDefinition","parameters":{"id":5040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5025,"mutability":"mutable","name":"tokenA","nameLocation":"4721:6:14","nodeType":"VariableDeclaration","scope":5148,"src":"4713:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5024,"name":"address","nodeType":"ElementaryTypeName","src":"4713:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5027,"mutability":"mutable","name":"tokenB","nameLocation":"4745:6:14","nodeType":"VariableDeclaration","scope":5148,"src":"4737:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5026,"name":"address","nodeType":"ElementaryTypeName","src":"4737:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5029,"mutability":"mutable","name":"amountADesired","nameLocation":"4769:14:14","nodeType":"VariableDeclaration","scope":5148,"src":"4761:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5028,"name":"uint256","nodeType":"ElementaryTypeName","src":"4761:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5031,"mutability":"mutable","name":"amountBDesired","nameLocation":"4801:14:14","nodeType":"VariableDeclaration","scope":5148,"src":"4793:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5030,"name":"uint256","nodeType":"ElementaryTypeName","src":"4793:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5033,"mutability":"mutable","name":"amountAMin","nameLocation":"4833:10:14","nodeType":"VariableDeclaration","scope":5148,"src":"4825:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5032,"name":"uint256","nodeType":"ElementaryTypeName","src":"4825:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5035,"mutability":"mutable","name":"amountBMin","nameLocation":"4861:10:14","nodeType":"VariableDeclaration","scope":5148,"src":"4853:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5034,"name":"uint256","nodeType":"ElementaryTypeName","src":"4853:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5037,"mutability":"mutable","name":"to","nameLocation":"4889:2:14","nodeType":"VariableDeclaration","scope":5148,"src":"4881:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5036,"name":"address","nodeType":"ElementaryTypeName","src":"4881:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5039,"mutability":"mutable","name":"deadline","nameLocation":"4909:8:14","nodeType":"VariableDeclaration","scope":5148,"src":"4901:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5038,"name":"uint256","nodeType":"ElementaryTypeName","src":"4901:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4703:220:14"},"returnParameters":{"id":5047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5042,"mutability":"mutable","name":"amountA","nameLocation":"4950:7:14","nodeType":"VariableDeclaration","scope":5148,"src":"4942:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5041,"name":"uint256","nodeType":"ElementaryTypeName","src":"4942:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5044,"mutability":"mutable","name":"amountB","nameLocation":"4967:7:14","nodeType":"VariableDeclaration","scope":5148,"src":"4959:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5043,"name":"uint256","nodeType":"ElementaryTypeName","src":"4959:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5046,"mutability":"mutable","name":"liquidity","nameLocation":"4984:9:14","nodeType":"VariableDeclaration","scope":5148,"src":"4976:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5045,"name":"uint256","nodeType":"ElementaryTypeName","src":"4976:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4941:53:14"},"scope":5845,"src":"4682:1134:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5226,"nodeType":"Block","src":"7076:588:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5168,"name":"reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"7090:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7102:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7090:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5171,"name":"reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5161,"src":"7107:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7119:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7107:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7090:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5180,"nodeType":"IfStatement","src":"7086:100:14","trueBody":{"id":5179,"nodeType":"Block","src":"7122:64:14","statements":[{"expression":{"components":[{"id":5175,"name":"amountADesired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"7144:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5176,"name":"amountBDesired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"7160:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7143:32:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":5167,"id":5178,"nodeType":"Return","src":"7136:39:14"}]}},{"assignments":[5182],"declarations":[{"constant":false,"id":5182,"mutability":"mutable","name":"amountBOptimal","nameLocation":"7212:14:14","nodeType":"VariableDeclaration","scope":5226,"src":"7204:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5181,"name":"uint256","nodeType":"ElementaryTypeName","src":"7204:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5189,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5183,"name":"amountADesired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"7230:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5184,"name":"reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5161,"src":"7247:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7230:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7229:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5187,"name":"reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"7259:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:38:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7204:63:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5190,"name":"amountBOptimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"7281:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5191,"name":"amountBDesired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"7299:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7281:32:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5205,"nodeType":"IfStatement","src":"7277:178:14","trueBody":{"id":5204,"nodeType":"Block","src":"7315:140:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5194,"name":"amountBOptimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"7337:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5195,"name":"amountBMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"7355:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7337:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204220616d6f756e74","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7367:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7956b12eed2c2f66e7d911209e39ae880dbb4cb35c0044f27817de99463b5f8a","typeString":"literal_string \"Insufficient B amount\""},"value":"Insufficient B amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7956b12eed2c2f66e7d911209e39ae880dbb4cb35c0044f27817de99463b5f8a","typeString":"literal_string \"Insufficient B amount\""}],"id":5193,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7329:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7329:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5199,"nodeType":"ExpressionStatement","src":"7329:62:14"},{"expression":{"components":[{"id":5200,"name":"amountADesired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"7413:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5201,"name":"amountBOptimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"7429:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5202,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7412:32:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":5167,"id":5203,"nodeType":"Return","src":"7405:39:14"}]}},{"assignments":[5207],"declarations":[{"constant":false,"id":5207,"mutability":"mutable","name":"amountAOptimal","nameLocation":"7481:14:14","nodeType":"VariableDeclaration","scope":5226,"src":"7473:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5206,"name":"uint256","nodeType":"ElementaryTypeName","src":"7473:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5214,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5208,"name":"amountBDesired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"7499:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5209,"name":"reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"7516:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7499:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7498:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5212,"name":"reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5161,"src":"7528:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7498:38:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7473:63:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5216,"name":"amountAOptimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"7554:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5217,"name":"amountAMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"7572:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7554:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204120616d6f756e74","id":5219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7584:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d6e3e7a778f04de2588734c091c00112253879305eae6cf8201e2362b43fd0d","typeString":"literal_string \"Insufficient A amount\""},"value":"Insufficient A amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d6e3e7a778f04de2588734c091c00112253879305eae6cf8201e2362b43fd0d","typeString":"literal_string \"Insufficient A amount\""}],"id":5215,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7546:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7546:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5221,"nodeType":"ExpressionStatement","src":"7546:62:14"},{"expression":{"components":[{"id":5222,"name":"amountAOptimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"7626:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5223,"name":"amountBDesired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"7642:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7625:32:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":5167,"id":5225,"nodeType":"Return","src":"7618:39:14"}]},"documentation":{"id":5149,"nodeType":"StructuredDocumentation","src":"5822:981:14","text":" @notice Calculates the optimal token amounts for liquidity deposit\n @dev Determines the correct ratio of tokens to deposit based on current reserves\n @param amountADesired Desired amount of token A to deposit\n @param amountBDesired Desired amount of token B to deposit\n @param amountAMin Minimum acceptable amount of token A (slippage protection)\n @param amountBMin Minimum acceptable amount of token B (slippage protection)\n @param reserveA Current reserve amount of token A in the pool\n @param reserveB Current reserve amount of token B in the pool\n @return amountA Optimal/actual amount of token A to deposit\n @return amountB Optimal/actual amount of token B to deposit\n @custom:implements \n - For empty pool: uses desired amounts directly\n - For existing pool: calculates optimal ratio based on current reserves\n - Validates amounts meet minimum requirements (slippage protection)"},"id":5227,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateOptimalAmounts","nameLocation":"6817:24:14","nodeType":"FunctionDefinition","parameters":{"id":5162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5151,"mutability":"mutable","name":"amountADesired","nameLocation":"6859:14:14","nodeType":"VariableDeclaration","scope":5227,"src":"6851:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5150,"name":"uint256","nodeType":"ElementaryTypeName","src":"6851:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5153,"mutability":"mutable","name":"amountBDesired","nameLocation":"6891:14:14","nodeType":"VariableDeclaration","scope":5227,"src":"6883:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5152,"name":"uint256","nodeType":"ElementaryTypeName","src":"6883:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5155,"mutability":"mutable","name":"amountAMin","nameLocation":"6923:10:14","nodeType":"VariableDeclaration","scope":5227,"src":"6915:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5154,"name":"uint256","nodeType":"ElementaryTypeName","src":"6915:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5157,"mutability":"mutable","name":"amountBMin","nameLocation":"6951:10:14","nodeType":"VariableDeclaration","scope":5227,"src":"6943:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5156,"name":"uint256","nodeType":"ElementaryTypeName","src":"6943:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5159,"mutability":"mutable","name":"reserveA","nameLocation":"6979:8:14","nodeType":"VariableDeclaration","scope":5227,"src":"6971:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5158,"name":"uint256","nodeType":"ElementaryTypeName","src":"6971:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5161,"mutability":"mutable","name":"reserveB","nameLocation":"7005:8:14","nodeType":"VariableDeclaration","scope":5227,"src":"6997:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5160,"name":"uint256","nodeType":"ElementaryTypeName","src":"6997:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6841:178:14"},"returnParameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5164,"mutability":"mutable","name":"amountA","nameLocation":"7050:7:14","nodeType":"VariableDeclaration","scope":5227,"src":"7042:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5163,"name":"uint256","nodeType":"ElementaryTypeName","src":"7042:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5166,"mutability":"mutable","name":"amountB","nameLocation":"7067:7:14","nodeType":"VariableDeclaration","scope":5227,"src":"7059:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5165,"name":"uint256","nodeType":"ElementaryTypeName","src":"7059:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7041:34:14"},"scope":5845,"src":"6808:856:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5277,"nodeType":"Block","src":"8619:210:14","statements":[{"expression":{"arguments":[{"expression":{"id":5245,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8661:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8665:6:14","memberName":"sender","nodeType":"MemberAccess","src":"8661:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5249,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8681:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}],"id":5248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8673:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5247,"name":"address","nodeType":"ElementaryTypeName","src":"8673:7:14","typeDescriptions":{}}},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8673:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5251,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"8688:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5242,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"8636:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5241,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"8629:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8629:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8644:16:14","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1065,"src":"8629:31:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8629:67:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5253,"nodeType":"ExpressionStatement","src":"8629:67:14"},{"expression":{"arguments":[{"expression":{"id":5258,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8738:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8742:6:14","memberName":"sender","nodeType":"MemberAccess","src":"8738:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5262,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8758:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}],"id":5261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5260,"name":"address","nodeType":"ElementaryTypeName","src":"8750:7:14","typeDescriptions":{}}},"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5264,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"8765:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5255,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"8713:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5254,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"8706:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8706:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8721:16:14","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1065,"src":"8706:31:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8706:67:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5266,"nodeType":"ExpressionStatement","src":"8706:67:14"},{"expression":{"arguments":[{"id":5268,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"8789:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5271,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"8803:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5272,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"8813:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8803:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5269,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"8793:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3172_$","typeString":"type(library Math)"}},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8798:4:14","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":2716,"src":"8793:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8793:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5267,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"8783:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8783:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5276,"nodeType":"ExpressionStatement","src":"8783:39:14"}]},"documentation":{"id":5228,"nodeType":"StructuredDocumentation","src":"7670:787:14","text":" @notice Executes the token transfers and mints liquidity tokens\n @dev Performs the actual deposit operations after amounts are calculated\n @param tokenA Address of first token in the pair\n @param tokenB Address of second token in the pair\n @param amountA Amount of token A to transfer\n @param amountB Amount of token B to transfer\n @param to Address that will receive the liquidity tokens\n @custom:actions\n - Transfers amountA of tokenA from sender to contract\n - Transfers amountB of tokenB from sender to contract\n - Mints sqrt(amountA*amountB) liquidity tokens to 'to' address\n @custom:security \n - Uses SafeERC20 for secure token transfers\n - Requires prior approval of tokens by sender"},"id":5278,"implemented":true,"kind":"function","modifiers":[],"name":"_executeDeposit","nameLocation":"8471:15:14","nodeType":"FunctionDefinition","parameters":{"id":5239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5230,"mutability":"mutable","name":"tokenA","nameLocation":"8504:6:14","nodeType":"VariableDeclaration","scope":5278,"src":"8496:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5229,"name":"address","nodeType":"ElementaryTypeName","src":"8496:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5232,"mutability":"mutable","name":"tokenB","nameLocation":"8528:6:14","nodeType":"VariableDeclaration","scope":5278,"src":"8520:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5231,"name":"address","nodeType":"ElementaryTypeName","src":"8520:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5234,"mutability":"mutable","name":"amountA","nameLocation":"8552:7:14","nodeType":"VariableDeclaration","scope":5278,"src":"8544:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5233,"name":"uint256","nodeType":"ElementaryTypeName","src":"8544:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5236,"mutability":"mutable","name":"amountB","nameLocation":"8577:7:14","nodeType":"VariableDeclaration","scope":5278,"src":"8569:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5235,"name":"uint256","nodeType":"ElementaryTypeName","src":"8569:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5238,"mutability":"mutable","name":"to","nameLocation":"8602:2:14","nodeType":"VariableDeclaration","scope":5278,"src":"8594:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5237,"name":"address","nodeType":"ElementaryTypeName","src":"8594:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8486:124:14"},"returnParameters":{"id":5240,"nodeType":"ParameterList","parameters":[],"src":"8619:0:14"},"scope":5845,"src":"8462:367:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5393,"nodeType":"Block","src":"9820:696:14","statements":[{"assignments":[5301],"declarations":[{"constant":false,"id":5301,"mutability":"mutable","name":"_token0","nameLocation":"9838:7:14","nodeType":"VariableDeclaration","scope":5393,"src":"9830:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5300,"name":"address","nodeType":"ElementaryTypeName","src":"9830:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5303,"initialValue":{"id":5302,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"9848:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9830:24:14"},{"assignments":[5305],"declarations":[{"constant":false,"id":5305,"mutability":"mutable","name":"_token1","nameLocation":"9872:7:14","nodeType":"VariableDeclaration","scope":5393,"src":"9864:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5304,"name":"address","nodeType":"ElementaryTypeName","src":"9864:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5307,"initialValue":{"id":5306,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"9882:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9864:24:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5309,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5293,"src":"9906:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":5310,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9918:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9924:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"9918:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9906:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446561646c696e6520706173736564","id":5313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9935:17:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f","typeString":"literal_string \"Deadline passed\""},"value":"Deadline passed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f","typeString":"literal_string \"Deadline passed\""}],"id":5308,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9898:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9898:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5315,"nodeType":"ExpressionStatement","src":"9898:55:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5317,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"9972:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5318,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"9982:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9972:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5320,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"9993:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5321,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"10003:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9993:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9972:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5324,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9971:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5325,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"10016:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5326,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"10026:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10016:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5328,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"10037:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5329,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"10047:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10037:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10016:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10015:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9971:84:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e73","id":5334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10057:16:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3","typeString":"literal_string \"Invalid tokens\""},"value":"Invalid tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3","typeString":"literal_string \"Invalid tokens\""}],"id":5316,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9963:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9963:111:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5336,"nodeType":"ExpressionStatement","src":"9963:111:14"},{"assignments":[5339],"declarations":[{"constant":false,"id":5339,"mutability":"mutable","name":"data","nameLocation":"10106:4:14","nodeType":"VariableDeclaration","scope":5393,"src":"10085:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiqData_$4979_memory_ptr","typeString":"struct SimpleSwap.RemoveLiqData"},"typeName":{"id":5338,"nodeType":"UserDefinedTypeName","pathNode":{"id":5337,"name":"RemoveLiqData","nameLocations":["10085:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":4979,"src":"10085:13:14"},"referencedDeclaration":4979,"src":"10085:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiqData_$4979_storage_ptr","typeString":"struct SimpleSwap.RemoveLiqData"}},"visibility":"internal"}],"id":5340,"nodeType":"VariableDeclarationStatement","src":"10085:25:14"},{"expression":{"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5341,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"10120:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiqData_$4979_memory_ptr","typeString":"struct SimpleSwap.RemoveLiqData memory"}},"id":5343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10125:6:14","memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":4976,"src":"10120:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5344,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"10134:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10120:20:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5346,"nodeType":"ExpressionStatement","src":"10120:20:14"},{"expression":{"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5347,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"10150:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiqData_$4979_memory_ptr","typeString":"struct SimpleSwap.RemoveLiqData memory"}},"id":5349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10155:6:14","memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":4978,"src":"10150:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5350,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"10164:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10150:20:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5352,"nodeType":"ExpressionStatement","src":"10150:20:14"},{"expression":{"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5353,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"10190:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5354,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"10199:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5355,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"10189:18:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5357,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"10228:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5358,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"10239:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiqData_$4979_memory_ptr","typeString":"struct SimpleSwap.RemoveLiqData memory"}},"id":5359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10244:6:14","memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":4976,"src":"10239:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5360,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"10252:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiqData_$4979_memory_ptr","typeString":"struct SimpleSwap.RemoveLiqData memory"}},"id":5361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10257:6:14","memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":4978,"src":"10252:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5356,"name":"_calculateAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"10210:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,address,address) view returns (uint256,uint256)"}},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10210:54:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"10189:75:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5364,"nodeType":"ExpressionStatement","src":"10189:75:14"},{"expression":{"arguments":[{"id":5366,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"10291:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5367,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"10300:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5368,"name":"amountAMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"10309:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5369,"name":"amountBMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"10321:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5365,"name":"_validateAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"10274:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256) pure"}},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10274:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5371,"nodeType":"ExpressionStatement","src":"10274:58:14"},{"expression":{"arguments":[{"expression":{"id":5373,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10366:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10370:6:14","memberName":"sender","nodeType":"MemberAccess","src":"10366:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5375,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"10378:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5376,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"10382:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5377,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"10393:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5378,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"10402:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5379,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"10411:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiqData_$4979_memory_ptr","typeString":"struct SimpleSwap.RemoveLiqData memory"}},"id":5380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10416:6:14","memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":4976,"src":"10411:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5381,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"10424:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiqData_$4979_memory_ptr","typeString":"struct SimpleSwap.RemoveLiqData memory"}},"id":5382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10429:6:14","memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":4978,"src":"10424:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5372,"name":"_executeRemoveLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"10342:23:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,uint256,uint256,uint256,address,address)"}},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10342:94:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5384,"nodeType":"ExpressionStatement","src":"10342:94:14"},{"eventCall":{"arguments":[{"expression":{"id":5386,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10469:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10473:6:14","memberName":"sender","nodeType":"MemberAccess","src":"10469:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5388,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"10481:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5389,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"10490:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5390,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"10499:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5385,"name":"LiquidityRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"10452:16:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10452:57:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5392,"nodeType":"EmitStatement","src":"10447:62:14"}]},"documentation":{"id":5279,"nodeType":"StructuredDocumentation","src":"8835:720:14","text":" @notice Removes liquidity from the pool\n @dev Burns liquidity tokens and returns the underlying assets\n @param tokenA Address of first token in the pair\n @param tokenB Address of second token in the pair\n @param liquidity Amount of liquidity tokens to burn\n @param amountAMin Minimum amount of tokenA to receive (slippage protection)\n @param amountBMin Minimum amount of tokenB to receive (slippage protection)\n @param to Address that will receive the underlying tokens\n @param deadline Unix timestamp after which the transaction will revert\n @return amountA Actual amount of tokenA received\n @return amountB Actual amount of tokenB received"},"functionSelector":"baa2abde","id":5394,"implemented":true,"kind":"function","modifiers":[],"name":"removeLiquidity","nameLocation":"9569:15:14","nodeType":"FunctionDefinition","parameters":{"id":5294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5281,"mutability":"mutable","name":"tokenA","nameLocation":"9602:6:14","nodeType":"VariableDeclaration","scope":5394,"src":"9594:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5280,"name":"address","nodeType":"ElementaryTypeName","src":"9594:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5283,"mutability":"mutable","name":"tokenB","nameLocation":"9626:6:14","nodeType":"VariableDeclaration","scope":5394,"src":"9618:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5282,"name":"address","nodeType":"ElementaryTypeName","src":"9618:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5285,"mutability":"mutable","name":"liquidity","nameLocation":"9650:9:14","nodeType":"VariableDeclaration","scope":5394,"src":"9642:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5284,"name":"uint256","nodeType":"ElementaryTypeName","src":"9642:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5287,"mutability":"mutable","name":"amountAMin","nameLocation":"9677:10:14","nodeType":"VariableDeclaration","scope":5394,"src":"9669:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5286,"name":"uint256","nodeType":"ElementaryTypeName","src":"9669:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5289,"mutability":"mutable","name":"amountBMin","nameLocation":"9705:10:14","nodeType":"VariableDeclaration","scope":5394,"src":"9697:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5288,"name":"uint256","nodeType":"ElementaryTypeName","src":"9697:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5291,"mutability":"mutable","name":"to","nameLocation":"9733:2:14","nodeType":"VariableDeclaration","scope":5394,"src":"9725:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5290,"name":"address","nodeType":"ElementaryTypeName","src":"9725:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5293,"mutability":"mutable","name":"deadline","nameLocation":"9753:8:14","nodeType":"VariableDeclaration","scope":5394,"src":"9745:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5292,"name":"uint256","nodeType":"ElementaryTypeName","src":"9745:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9584:183:14"},"returnParameters":{"id":5299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5296,"mutability":"mutable","name":"amountA","nameLocation":"9794:7:14","nodeType":"VariableDeclaration","scope":5394,"src":"9786:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5295,"name":"uint256","nodeType":"ElementaryTypeName","src":"9786:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5298,"mutability":"mutable","name":"amountB","nameLocation":"9811:7:14","nodeType":"VariableDeclaration","scope":5394,"src":"9803:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5297,"name":"uint256","nodeType":"ElementaryTypeName","src":"9803:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9785:34:14"},"scope":5845,"src":"9560:956:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5451,"nodeType":"Block","src":"11497:266:14","statements":[{"assignments":[5409],"declarations":[{"constant":false,"id":5409,"mutability":"mutable","name":"balanceA","nameLocation":"11515:8:14","nodeType":"VariableDeclaration","scope":5451,"src":"11507:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5408,"name":"uint256","nodeType":"ElementaryTypeName","src":"11507:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5419,"initialValue":{"arguments":[{"arguments":[{"id":5416,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11559:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}],"id":5415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11551:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5414,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:14","typeDescriptions":{}}},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11551:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5411,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"11533:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5410,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"11526:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11526:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11541:9:14","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":924,"src":"11526:24:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11526:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11507:58:14"},{"assignments":[5421],"declarations":[{"constant":false,"id":5421,"mutability":"mutable","name":"balanceB","nameLocation":"11583:8:14","nodeType":"VariableDeclaration","scope":5451,"src":"11575:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5420,"name":"uint256","nodeType":"ElementaryTypeName","src":"11575:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5431,"initialValue":{"arguments":[{"arguments":[{"id":5428,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11627:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}],"id":5427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11619:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5426,"name":"address","nodeType":"ElementaryTypeName","src":"11619:7:14","typeDescriptions":{}}},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11619:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5423,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"11601:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5422,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"11594:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11594:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11609:9:14","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":924,"src":"11594:24:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11594:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11575:58:14"},{"assignments":[5433],"declarations":[{"constant":false,"id":5433,"mutability":"mutable","name":"supply","nameLocation":"11651:6:14","nodeType":"VariableDeclaration","scope":5451,"src":"11643:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5432,"name":"uint256","nodeType":"ElementaryTypeName","src":"11643:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5436,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5434,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"11660:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11660:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11643:30:14"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5437,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"11692:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5438,"name":"balanceA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5409,"src":"11704:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11692:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11691:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5441,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"11716:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11691:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5443,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"11725:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5444,"name":"balanceB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"11737:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11725:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11724:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5447,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"11749:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11724:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11690:66:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":5407,"id":5450,"nodeType":"Return","src":"11683:73:14"}]},"documentation":{"id":5395,"nodeType":"StructuredDocumentation","src":"10522:836:14","text":" @notice Calculates the proportional token amounts for a given liquidity share\n @dev Computes the amount of each token that corresponds to the liquidity share being withdrawn\n @param liquidity Amount of liquidity tokens being burned/redeemed\n @param tokenA Address of the first token in the pair\n @param tokenB Address of the second token in the pair\n @return amountA Proportional amount of tokenA that the liquidity represents\n @return amountB Proportional amount of tokenB that the liquidity represents\n @custom:math (liquidity * balanceA) / totalSupply for each token\n @custom:security \n - Reads actual token balances from the contract\n - Uses precise division to maintain proper ratios\n - Returns amounts proportional to the pool's current reserves"},"id":5452,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateAmounts","nameLocation":"11372:17:14","nodeType":"FunctionDefinition","parameters":{"id":5402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5397,"mutability":"mutable","name":"liquidity","nameLocation":"11398:9:14","nodeType":"VariableDeclaration","scope":5452,"src":"11390:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5396,"name":"uint256","nodeType":"ElementaryTypeName","src":"11390:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5399,"mutability":"mutable","name":"tokenA","nameLocation":"11417:6:14","nodeType":"VariableDeclaration","scope":5452,"src":"11409:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5398,"name":"address","nodeType":"ElementaryTypeName","src":"11409:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5401,"mutability":"mutable","name":"tokenB","nameLocation":"11433:6:14","nodeType":"VariableDeclaration","scope":5452,"src":"11425:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5400,"name":"address","nodeType":"ElementaryTypeName","src":"11425:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11389:51:14"},"returnParameters":{"id":5407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5404,"mutability":"mutable","name":"amountA","nameLocation":"11471:7:14","nodeType":"VariableDeclaration","scope":5452,"src":"11463:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5403,"name":"uint256","nodeType":"ElementaryTypeName","src":"11463:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5406,"mutability":"mutable","name":"amountB","nameLocation":"11488:7:14","nodeType":"VariableDeclaration","scope":5452,"src":"11480:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5405,"name":"uint256","nodeType":"ElementaryTypeName","src":"11480:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11462:34:14"},"scope":5845,"src":"11363:400:14","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5478,"nodeType":"Block","src":"12623:137:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5465,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"12641:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5466,"name":"amountAMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"12652:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12641:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204120616d6f756e74","id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12664:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d6e3e7a778f04de2588734c091c00112253879305eae6cf8201e2362b43fd0d","typeString":"literal_string \"Insufficient A amount\""},"value":"Insufficient A amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d6e3e7a778f04de2588734c091c00112253879305eae6cf8201e2362b43fd0d","typeString":"literal_string \"Insufficient A amount\""}],"id":5464,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12633:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12633:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5470,"nodeType":"ExpressionStatement","src":"12633:55:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5472,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"12706:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5473,"name":"amountBMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"12717:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12706:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204220616d6f756e74","id":5475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12729:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7956b12eed2c2f66e7d911209e39ae880dbb4cb35c0044f27817de99463b5f8a","typeString":"literal_string \"Insufficient B amount\""},"value":"Insufficient B amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7956b12eed2c2f66e7d911209e39ae880dbb4cb35c0044f27817de99463b5f8a","typeString":"literal_string \"Insufficient B amount\""}],"id":5471,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12698:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12698:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5477,"nodeType":"ExpressionStatement","src":"12698:55:14"}]},"documentation":{"id":5453,"nodeType":"StructuredDocumentation","src":"11769:736:14","text":" @notice Validates that the received amounts meet minimum requirements\n @dev Ensures the amounts satisfy the user's specified minimums (slippage protection)\n @param amountA Actual amount of tokenA being received\n @param amountB Actual amount of tokenB being received\n @param amountAMin Minimum acceptable amount of tokenA\n @param amountBMin Minimum acceptable amount of tokenB\n @custom:reverts With \"Insufficient A amount\" if amountA < amountAMin\n @custom:reverts With \"Insufficient B amount\" if amountB < amountBMin\n @custom:security\n - Protects users from front-running and excessive slippage\n - Should be called after calculating actual withdrawal amounts"},"id":5479,"implemented":true,"kind":"function","modifiers":[],"name":"_validateAmounts","nameLocation":"12519:16:14","nodeType":"FunctionDefinition","parameters":{"id":5462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5455,"mutability":"mutable","name":"amountA","nameLocation":"12544:7:14","nodeType":"VariableDeclaration","scope":5479,"src":"12536:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5454,"name":"uint256","nodeType":"ElementaryTypeName","src":"12536:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5457,"mutability":"mutable","name":"amountB","nameLocation":"12561:7:14","nodeType":"VariableDeclaration","scope":5479,"src":"12553:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5456,"name":"uint256","nodeType":"ElementaryTypeName","src":"12553:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5459,"mutability":"mutable","name":"amountAMin","nameLocation":"12578:10:14","nodeType":"VariableDeclaration","scope":5479,"src":"12570:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5458,"name":"uint256","nodeType":"ElementaryTypeName","src":"12570:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5461,"mutability":"mutable","name":"amountBMin","nameLocation":"12598:10:14","nodeType":"VariableDeclaration","scope":5479,"src":"12590:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5460,"name":"uint256","nodeType":"ElementaryTypeName","src":"12590:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12535:74:14"},"returnParameters":{"id":5463,"nodeType":"ParameterList","parameters":[],"src":"12623:0:14"},"scope":5845,"src":"12510:250:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5518,"nodeType":"Block","src":"14185:139:14","statements":[{"expression":{"arguments":[{"id":5498,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"14201:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5499,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"14207:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5497,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"14195:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14195:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5501,"nodeType":"ExpressionStatement","src":"14195:22:14"},{"expression":{"arguments":[{"id":5506,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"14255:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5507,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"14259:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5503,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"14234:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5502,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"14227:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14227:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14242:12:14","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1038,"src":"14227:27:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14227:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5509,"nodeType":"ExpressionStatement","src":"14227:40:14"},{"expression":{"arguments":[{"id":5514,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"14305:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5515,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"14309:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5511,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"14284:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5510,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"14277:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14277:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14292:12:14","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1038,"src":"14277:27:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14277:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5517,"nodeType":"ExpressionStatement","src":"14277:40:14"}]},"documentation":{"id":5480,"nodeType":"StructuredDocumentation","src":"12766:1200:14","text":" @notice Executes the removal of liquidity by burning LP tokens and transferring underlying assets\n @dev Handles the actual token transfers when a user withdraws liquidity from the pool\n @param from Address from which liquidity tokens will be burned\n @param to Address that will receive the underlying tokens\n @param liquidity Amount of LP tokens to burn\n @param amountA Amount of tokenA to transfer to the recipient\n @param amountB Amount of tokenB to transfer to the recipient\n @param tokenA Address of the first token in the pair\n @param tokenB Address of the second token in the pair\n @custom:actions\n - Burns `liquidity` LP tokens from `from` address\n - Transfers `amountA` of tokenA to `to` address\n - Transfers `amountB` of tokenB to `to` address\n @custom:security\n - Requires proper authorization to burn LP tokens\n - Uses SafeERC20 for secure token transfers\n - Assumes proper validation of amounts was done before calling\n @custom:events\n - Emits Transfer event (from ERC20) when burning LP tokens\n - Emits LiquidityRemoved event (if defined in the contract)"},"id":5519,"implemented":true,"kind":"function","modifiers":[],"name":"_executeRemoveLiquidity","nameLocation":"13980:23:14","nodeType":"FunctionDefinition","parameters":{"id":5495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5482,"mutability":"mutable","name":"from","nameLocation":"14021:4:14","nodeType":"VariableDeclaration","scope":5519,"src":"14013:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5481,"name":"address","nodeType":"ElementaryTypeName","src":"14013:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5484,"mutability":"mutable","name":"to","nameLocation":"14043:2:14","nodeType":"VariableDeclaration","scope":5519,"src":"14035:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5483,"name":"address","nodeType":"ElementaryTypeName","src":"14035:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5486,"mutability":"mutable","name":"liquidity","nameLocation":"14063:9:14","nodeType":"VariableDeclaration","scope":5519,"src":"14055:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5485,"name":"uint256","nodeType":"ElementaryTypeName","src":"14055:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5488,"mutability":"mutable","name":"amountA","nameLocation":"14090:7:14","nodeType":"VariableDeclaration","scope":5519,"src":"14082:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5487,"name":"uint256","nodeType":"ElementaryTypeName","src":"14082:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5490,"mutability":"mutable","name":"amountB","nameLocation":"14115:7:14","nodeType":"VariableDeclaration","scope":5519,"src":"14107:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5489,"name":"uint256","nodeType":"ElementaryTypeName","src":"14107:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5492,"mutability":"mutable","name":"tokenA","nameLocation":"14140:6:14","nodeType":"VariableDeclaration","scope":5519,"src":"14132:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5491,"name":"address","nodeType":"ElementaryTypeName","src":"14132:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5494,"mutability":"mutable","name":"tokenB","nameLocation":"14164:6:14","nodeType":"VariableDeclaration","scope":5519,"src":"14156:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5493,"name":"address","nodeType":"ElementaryTypeName","src":"14156:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14003:173:14"},"returnParameters":{"id":5496,"nodeType":"ParameterList","parameters":[],"src":"14185:0:14"},"scope":5845,"src":"13971:353:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5651,"nodeType":"Block","src":"15177:813:14","statements":[{"assignments":[5538],"declarations":[{"constant":false,"id":5538,"mutability":"mutable","name":"_token0","nameLocation":"15195:7:14","nodeType":"VariableDeclaration","scope":5651,"src":"15187:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5537,"name":"address","nodeType":"ElementaryTypeName","src":"15187:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5540,"initialValue":{"id":5539,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"15205:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15187:24:14"},{"assignments":[5542],"declarations":[{"constant":false,"id":5542,"mutability":"mutable","name":"_token1","nameLocation":"15229:7:14","nodeType":"VariableDeclaration","scope":5651,"src":"15221:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5541,"name":"address","nodeType":"ElementaryTypeName","src":"15221:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5544,"initialValue":{"id":5543,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"15239:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15221:24:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5546,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5531,"src":"15263:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":5547,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15275:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15281:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"15275:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15263:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446561646c696e6520706173736564","id":5550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15292:17:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f","typeString":"literal_string \"Deadline passed\""},"value":"Deadline passed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f","typeString":"literal_string \"Deadline passed\""}],"id":5545,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"15255:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15255:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5552,"nodeType":"ExpressionStatement","src":"15255:55:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5554,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"15328:4:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15333:6:14","memberName":"length","nodeType":"MemberAccess","src":"15328:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":5556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15343:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15328:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070617468","id":5558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15346:14:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_6eaf91a30795816d7b5ab342a2ebdd69fbc6fb670d48889a575f3f685dfb42c8","typeString":"literal_string \"Invalid path\""},"value":"Invalid path"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6eaf91a30795816d7b5ab342a2ebdd69fbc6fb670d48889a575f3f685dfb42c8","typeString":"literal_string \"Invalid path\""}],"id":5553,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"15320:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15320:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5560,"nodeType":"ExpressionStatement","src":"15320:41:14"},{"assignments":[5563],"declarations":[{"constant":false,"id":5563,"mutability":"mutable","name":"data","nameLocation":"15395:4:14","nodeType":"VariableDeclaration","scope":5651,"src":"15379:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData"},"typeName":{"id":5562,"nodeType":"UserDefinedTypeName","pathNode":{"id":5561,"name":"SwapData","nameLocations":["15379:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":4973,"src":"15379:8:14"},"referencedDeclaration":4973,"src":"15379:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_storage_ptr","typeString":"struct SimpleSwap.SwapData"}},"visibility":"internal"}],"id":5564,"nodeType":"VariableDeclarationStatement","src":"15379:20:14"},{"expression":{"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5565,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"15409:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15414:7:14","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":4962,"src":"15409:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5568,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"15424:4:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5570,"indexExpression":{"hexValue":"30","id":5569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15429:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15424:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15409:22:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5572,"nodeType":"ExpressionStatement","src":"15409:22:14"},{"expression":{"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5573,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"15441:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15446:8:14","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":4964,"src":"15441:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5576,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"15457:4:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5578,"indexExpression":{"hexValue":"31","id":5577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15462:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15457:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15441:23:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5580,"nodeType":"ExpressionStatement","src":"15441:23:14"},{"expression":{"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5581,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"15474:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15479:8:14","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":4966,"src":"15474:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5584,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5522,"src":"15490:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15474:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5586,"nodeType":"ExpressionStatement","src":"15474:24:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5588,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"15518:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15523:7:14","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":4962,"src":"15518:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5590,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"15534:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15518:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5592,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"15545:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15550:8:14","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":4964,"src":"15545:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5594,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"15562:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15545:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15518:51:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5597,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:53:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5598,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"15575:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15580:7:14","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":4962,"src":"15575:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5600,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"15591:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15575:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5602,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"15602:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15607:8:14","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":4964,"src":"15602:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5604,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"15619:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15602:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15575:51:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5607,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15574:53:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:110:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e73","id":5609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15629:16:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3","typeString":"literal_string \"Invalid tokens\""},"value":"Invalid tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3","typeString":"literal_string \"Invalid tokens\""}],"id":5587,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"15509:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15509:137:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5611,"nodeType":"ExpressionStatement","src":"15509:137:14"},{"expression":{"arguments":[{"id":5613,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"15684:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}],"id":5612,"name":"_calculateReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"15665:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_SwapData_$4973_memory_ptr_$returns$__$","typeString":"function (struct SimpleSwap.SwapData memory) view"}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15665:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5615,"nodeType":"ExpressionStatement","src":"15665:24:14"},{"expression":{"id":5627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5616,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"15699:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5618,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15704:9:14","memberName":"amountOut","nodeType":"MemberAccess","referencedDeclaration":4968,"src":"15699:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5620,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"15729:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15734:8:14","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":4966,"src":"15729:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5622,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"15744:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15749:9:14","memberName":"reserveIn","nodeType":"MemberAccess","referencedDeclaration":4970,"src":"15744:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5624,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"15760:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15765:10:14","memberName":"reserveOut","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"15760:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5619,"name":"getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"15716:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15699:77:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5628,"nodeType":"ExpressionStatement","src":"15699:77:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5630,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"15803:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15808:9:14","memberName":"amountOut","nodeType":"MemberAccess","referencedDeclaration":4968,"src":"15803:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5632,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"15821:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206f757470757420616d6f756e74","id":5634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15835:28:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90","typeString":"literal_string \"Insufficient output amount\""},"value":"Insufficient output amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90","typeString":"literal_string \"Insufficient output amount\""}],"id":5629,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"15795:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15795:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5636,"nodeType":"ExpressionStatement","src":"15795:69:14"},{"expression":{"arguments":[{"id":5638,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"15896:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},{"id":5639,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5529,"src":"15902:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5637,"name":"_executeSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"15883:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_SwapData_$4973_memory_ptr_$_t_address_$returns$__$","typeString":"function (struct SimpleSwap.SwapData memory,address)"}},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15883:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5641,"nodeType":"ExpressionStatement","src":"15883:22:14"},{"expression":{"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5642,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5535,"src":"15924:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5644,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"15953:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15958:8:14","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":4966,"src":"15953:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5646,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"15968:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5647,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15973:9:14","memberName":"amountOut","nodeType":"MemberAccess","referencedDeclaration":4968,"src":"15968:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5643,"name":"createAmountsArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"15934:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory)"}},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15934:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"15924:59:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5650,"nodeType":"ExpressionStatement","src":"15924:59:14"}]},"documentation":{"id":5520,"nodeType":"StructuredDocumentation","src":"14330:625:14","text":" @notice Swaps an exact amount of input tokens for as many output tokens as possible\n @dev Uses the current pool reserves to determine the exchange rate\n @param amountIn Exact amount of input tokens to swap\n @param amountOutMin Minimum amount of output tokens to receive (slippage protection)\n @param path Array with token addresses (must be length 2 for this implementation)\n @param to Address that will receive the output tokens\n @param deadline Unix timestamp after which the transaction will revert\n @return amounts Array containing the input and output amounts"},"functionSelector":"38ed1739","id":5652,"implemented":true,"kind":"function","modifiers":[],"name":"swapExactTokensForTokens","nameLocation":"14969:24:14","nodeType":"FunctionDefinition","parameters":{"id":5532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5522,"mutability":"mutable","name":"amountIn","nameLocation":"15011:8:14","nodeType":"VariableDeclaration","scope":5652,"src":"15003:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5521,"name":"uint256","nodeType":"ElementaryTypeName","src":"15003:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5524,"mutability":"mutable","name":"amountOutMin","nameLocation":"15037:12:14","nodeType":"VariableDeclaration","scope":5652,"src":"15029:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5523,"name":"uint256","nodeType":"ElementaryTypeName","src":"15029:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5527,"mutability":"mutable","name":"path","nameLocation":"15078:4:14","nodeType":"VariableDeclaration","scope":5652,"src":"15059:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5525,"name":"address","nodeType":"ElementaryTypeName","src":"15059:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5526,"nodeType":"ArrayTypeName","src":"15059:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5529,"mutability":"mutable","name":"to","nameLocation":"15100:2:14","nodeType":"VariableDeclaration","scope":5652,"src":"15092:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5528,"name":"address","nodeType":"ElementaryTypeName","src":"15092:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5531,"mutability":"mutable","name":"deadline","nameLocation":"15120:8:14","nodeType":"VariableDeclaration","scope":5652,"src":"15112:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5530,"name":"uint256","nodeType":"ElementaryTypeName","src":"15112:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14993:141:14"},"returnParameters":{"id":5536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5535,"mutability":"mutable","name":"amounts","nameLocation":"15168:7:14","nodeType":"VariableDeclaration","scope":5652,"src":"15154:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5533,"name":"uint","nodeType":"ElementaryTypeName","src":"15154:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5534,"nodeType":"ArrayTypeName","src":"15154:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15153:23:14"},"scope":5845,"src":"14960:1030:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5689,"nodeType":"Block","src":"17023:153:14","statements":[{"expression":{"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5659,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"17033:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5661,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17038:9:14","memberName":"reserveIn","nodeType":"MemberAccess","referencedDeclaration":4970,"src":"17033:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5669,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17089:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}],"id":5668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17081:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5667,"name":"address","nodeType":"ElementaryTypeName","src":"17081:7:14","typeDescriptions":{}}},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17081:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":5663,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"17057:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17062:7:14","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":4962,"src":"17057:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5662,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"17050:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17050:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17071:9:14","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":924,"src":"17050:30:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17050:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17033:62:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5673,"nodeType":"ExpressionStatement","src":"17033:62:14"},{"expression":{"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5674,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"17105:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5676,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17110:10:14","memberName":"reserveOut","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"17105:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5684,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17163:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}],"id":5683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17155:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5682,"name":"address","nodeType":"ElementaryTypeName","src":"17155:7:14","typeDescriptions":{}}},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17155:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":5678,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"17130:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5679,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17135:8:14","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":4964,"src":"17130:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5677,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"17123:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":5680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17123:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17145:9:14","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":924,"src":"17123:31:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17123:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17105:64:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5688,"nodeType":"ExpressionStatement","src":"17105:64:14"}]},"documentation":{"id":5653,"nodeType":"StructuredDocumentation","src":"15996:959:14","text":" @notice Updates the reserve amounts in the SwapData struct with current token balances\n @dev Reads the latest token balances from the contract and updates the reserves in memory\n @param data SwapData struct containing:\n        - tokenIn: Address of the input token\n        - tokenOut: Address of the output token\n        - reserveIn: Will be updated with current balance of input token\n        - reserveOut: Will be updated with current balance of output token\n @custom:operation\n - Reads tokenIn balance from contract (updates reserveIn)\n - Reads tokenOut balance from contract (updates reserveOut)\n @custom:security\n - Only reads state (view function)\n - Uses SafeERC20 for balance checks\n - Result is stored in memory, not storage\n @custom:note\n - Modifies the input struct in memory\n - Called before swap calculations to get latest reserves"},"id":5690,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateReserves","nameLocation":"16969:18:14","nodeType":"FunctionDefinition","parameters":{"id":5657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5656,"mutability":"mutable","name":"data","nameLocation":"17004:4:14","nodeType":"VariableDeclaration","scope":5690,"src":"16988:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData"},"typeName":{"id":5655,"nodeType":"UserDefinedTypeName","pathNode":{"id":5654,"name":"SwapData","nameLocations":["16988:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":4973,"src":"16988:8:14"},"referencedDeclaration":4973,"src":"16988:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_storage_ptr","typeString":"struct SimpleSwap.SwapData"}},"visibility":"internal"}],"src":"16987:22:14"},"returnParameters":{"id":5658,"nodeType":"ParameterList","parameters":[],"src":"17023:0:14"},"scope":5845,"src":"16960:216:14","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5724,"nodeType":"Block","src":"18115:160:14","statements":[{"expression":{"arguments":[{"expression":{"id":5704,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18163:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18167:6:14","memberName":"sender","nodeType":"MemberAccess","src":"18163:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5708,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"18183:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}],"id":5707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18175:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5706,"name":"address","nodeType":"ElementaryTypeName","src":"18175:7:14","typeDescriptions":{}}},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18175:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5710,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"18190:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5711,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18195:8:14","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":4966,"src":"18190:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":5700,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"18132:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5701,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18137:7:14","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":4962,"src":"18132:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5699,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"18125:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18125:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18146:16:14","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1065,"src":"18125:37:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18125:79:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5713,"nodeType":"ExpressionStatement","src":"18125:79:14"},{"expression":{"arguments":[{"id":5719,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"18249:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5720,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"18253:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5721,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18258:9:14","memberName":"amountOut","nodeType":"MemberAccess","referencedDeclaration":4968,"src":"18253:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":5715,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"18221:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData memory"}},"id":5716,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18226:8:14","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":4964,"src":"18221:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5714,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"18214:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18214:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18236:12:14","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1038,"src":"18214:34:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18214:54:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5723,"nodeType":"ExpressionStatement","src":"18214:54:14"}]},"documentation":{"id":5691,"nodeType":"StructuredDocumentation","src":"17182:864:14","text":" @notice Executes the token swap by transferring tokens between parties\n @dev Performs the actual token transfers for a swap operation\n @param data SwapData struct containing:\n        - tokenIn: Address of the input token\n        - tokenOut: Address of the output token\n        - amountIn: Amount of input tokens being swapped\n        - amountOut: Amount of output tokens to be received\n @param to Address that will receive the output tokens\n @custom:actions\n - Transfers `amountIn` of `tokenIn` from sender to this contract\n - Transfers `amountOut` of `tokenOut` from contract to receiver\n @custom:security\n - Uses SafeERC20 for secure token transfers\n - Requires prior approval of input tokens by sender\n - Assumes proper amount checks were done before calling"},"id":5725,"implemented":true,"kind":"function","modifiers":[],"name":"_executeSwap","nameLocation":"18060:12:14","nodeType":"FunctionDefinition","parameters":{"id":5697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5694,"mutability":"mutable","name":"data","nameLocation":"18089:4:14","nodeType":"VariableDeclaration","scope":5725,"src":"18073:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_memory_ptr","typeString":"struct SimpleSwap.SwapData"},"typeName":{"id":5693,"nodeType":"UserDefinedTypeName","pathNode":{"id":5692,"name":"SwapData","nameLocations":["18073:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":4973,"src":"18073:8:14"},"referencedDeclaration":4973,"src":"18073:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapData_$4973_storage_ptr","typeString":"struct SimpleSwap.SwapData"}},"visibility":"internal"},{"constant":false,"id":5696,"mutability":"mutable","name":"to","nameLocation":"18103:2:14","nodeType":"VariableDeclaration","scope":5725,"src":"18095:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5695,"name":"address","nodeType":"ElementaryTypeName","src":"18095:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18072:34:14"},"returnParameters":{"id":5698,"nodeType":"ParameterList","parameters":[],"src":"18115:0:14"},"scope":5845,"src":"18051:224:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5758,"nodeType":"Block","src":"18979:127:14","statements":[{"expression":{"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5736,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"18989:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"32","id":5740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19010:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":5739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18999:10:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5737,"name":"uint","nodeType":"ElementaryTypeName","src":"19003:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5738,"nodeType":"ArrayTypeName","src":"19003:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18999:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"18989:23:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5743,"nodeType":"ExpressionStatement","src":"18989:23:14"},{"expression":{"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5744,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"19022:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5746,"indexExpression":{"hexValue":"30","id":5745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19030:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19022:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5747,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"19035:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19022:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5749,"nodeType":"ExpressionStatement","src":"19022:21:14"},{"expression":{"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5750,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"19053:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5752,"indexExpression":{"hexValue":"31","id":5751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19061:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19053:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5753,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"19066:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19053:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5755,"nodeType":"ExpressionStatement","src":"19053:22:14"},{"expression":{"id":5756,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"19092:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":5735,"id":5757,"nodeType":"Return","src":"19085:14:14"}]},"documentation":{"id":5726,"nodeType":"StructuredDocumentation","src":"18281:583:14","text":" @notice Creates an amounts array for swap operations\n @dev Constructs a fixed-size array to return swap input/output amounts\n @param amountIn Exact amount of input tokens being swapped\n @param amountOut Calculated amount of output tokens\n @return amounts Fixed-size array where:\n         - amounts[0] = input amount (amountIn)\n         - amounts[1] = output amount (amountOut)\n @custom:usage Used to maintain compatibility with swap function return signatures\n @custom:note Array format matches common DEX interfaces"},"id":5759,"implemented":true,"kind":"function","modifiers":[],"name":"createAmountsArray","nameLocation":"18878:18:14","nodeType":"FunctionDefinition","parameters":{"id":5731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5728,"mutability":"mutable","name":"amountIn","nameLocation":"18905:8:14","nodeType":"VariableDeclaration","scope":5759,"src":"18897:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5727,"name":"uint256","nodeType":"ElementaryTypeName","src":"18897:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5730,"mutability":"mutable","name":"amountOut","nameLocation":"18923:9:14","nodeType":"VariableDeclaration","scope":5759,"src":"18915:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5729,"name":"uint256","nodeType":"ElementaryTypeName","src":"18915:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18896:37:14"},"returnParameters":{"id":5735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5734,"mutability":"mutable","name":"amounts","nameLocation":"18970:7:14","nodeType":"VariableDeclaration","scope":5759,"src":"18956:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5732,"name":"uint","nodeType":"ElementaryTypeName","src":"18956:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5733,"nodeType":"ArrayTypeName","src":"18956:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"18955:23:14"},"scope":5845,"src":"18869:237:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5802,"nodeType":"Block","src":"19513:189:14","statements":[{"assignments":[5770],"declarations":[{"constant":false,"id":5770,"mutability":"mutable","name":"reserveA","nameLocation":"19531:8:14","nodeType":"VariableDeclaration","scope":5802,"src":"19523:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5769,"name":"uint256","nodeType":"ElementaryTypeName","src":"19523:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5780,"initialValue":{"arguments":[{"arguments":[{"id":5777,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"19575:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}],"id":5776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19567:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5775,"name":"address","nodeType":"ElementaryTypeName","src":"19567:7:14","typeDescriptions":{}}},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19567:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5772,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"19549:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5771,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"19542:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19542:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19557:9:14","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":924,"src":"19542:24:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19542:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19523:58:14"},{"assignments":[5782],"declarations":[{"constant":false,"id":5782,"mutability":"mutable","name":"reserveB","nameLocation":"19599:8:14","nodeType":"VariableDeclaration","scope":5802,"src":"19591:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5781,"name":"uint256","nodeType":"ElementaryTypeName","src":"19591:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5792,"initialValue":{"arguments":[{"arguments":[{"id":5789,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"19643:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleSwap_$5845","typeString":"contract SimpleSwap"}],"id":5788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19635:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5787,"name":"address","nodeType":"ElementaryTypeName","src":"19635:7:14","typeDescriptions":{}}},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19635:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5784,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"19617:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5783,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"19610:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19610:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19625:9:14","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":924,"src":"19610:24:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19610:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19591:58:14"},{"expression":{"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5793,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"19659:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5794,"name":"reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"19668:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":5795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19679:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"19668:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19667:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5798,"name":"reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"19687:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19667:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19659:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5801,"nodeType":"ExpressionStatement","src":"19659:36:14"}]},"documentation":{"id":5760,"nodeType":"StructuredDocumentation","src":"19112:308:14","text":" @notice Returns the current price ratio between two tokens\n @dev Price is expressed as tokenB per tokenA, scaled by 1e18\n @param tokenA Address of the base token\n @param tokenB Address of the quote token\n @return price Price ratio (tokenB/tokenA) multiplied by 1e18"},"functionSelector":"ac41865a","id":5803,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"19434:8:14","nodeType":"FunctionDefinition","parameters":{"id":5765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5762,"mutability":"mutable","name":"tokenA","nameLocation":"19451:6:14","nodeType":"VariableDeclaration","scope":5803,"src":"19443:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5761,"name":"address","nodeType":"ElementaryTypeName","src":"19443:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5764,"mutability":"mutable","name":"tokenB","nameLocation":"19467:6:14","nodeType":"VariableDeclaration","scope":5803,"src":"19459:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5763,"name":"address","nodeType":"ElementaryTypeName","src":"19459:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19442:32:14"},"returnParameters":{"id":5768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5767,"mutability":"mutable","name":"price","nameLocation":"19506:5:14","nodeType":"VariableDeclaration","scope":5803,"src":"19498:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5766,"name":"uint256","nodeType":"ElementaryTypeName","src":"19498:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19497:15:14"},"scope":5845,"src":"19425:277:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5843,"nodeType":"Block","src":"20209:210:14","statements":[{"assignments":[5816],"declarations":[{"constant":false,"id":5816,"mutability":"mutable","name":"numerator","nameLocation":"20227:9:14","nodeType":"VariableDeclaration","scope":5843,"src":"20219:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5815,"name":"uint256","nodeType":"ElementaryTypeName","src":"20219:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5820,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5817,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"20239:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5818,"name":"reserveOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"20250:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20239:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20219:41:14"},{"assignments":[5822],"declarations":[{"constant":false,"id":5822,"mutability":"mutable","name":"denominator","nameLocation":"20278:11:14","nodeType":"VariableDeclaration","scope":5843,"src":"20270:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5821,"name":"uint256","nodeType":"ElementaryTypeName","src":"20270:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5826,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5823,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"20292:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5824,"name":"reserveIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"20303:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20292:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20270:42:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5828,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"20330:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20344:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20330:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206469766973696f6e","id":5831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20347:13:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef454a3ea0c22f8d07b6c481320b7d1deed66223e2a6ddc7d2fc84c6da989b8d","typeString":"literal_string \"No division\""},"value":"No division"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef454a3ea0c22f8d07b6c481320b7d1deed66223e2a6ddc7d2fc84c6da989b8d","typeString":"literal_string \"No division\""}],"id":5827,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"20322:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20322:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5833,"nodeType":"ExpressionStatement","src":"20322:39:14"},{"expression":{"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5834,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"20371:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5835,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"20381:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":5836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20393:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"20381:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5838,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20380:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5839,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"20401:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20380:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20371:41:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5842,"nodeType":"ExpressionStatement","src":"20371:41:14"}]},"documentation":{"id":5804,"nodeType":"StructuredDocumentation","src":"19708:357:14","text":" @notice Calculates the amount of output tokens for a given input\n @dev Uses a simple constant product formula (x*y=k)\n @param amountIn Amount of input tokens\n @param reserveIn Reserve amount of input tokens\n @param reserveOut Reserve amount of output tokens\n @return amount Calculated amount of output tokens"},"functionSelector":"054d50d4","id":5844,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"20079:12:14","nodeType":"FunctionDefinition","parameters":{"id":5811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5806,"mutability":"mutable","name":"amountIn","nameLocation":"20106:8:14","nodeType":"VariableDeclaration","scope":5844,"src":"20101:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5805,"name":"uint","nodeType":"ElementaryTypeName","src":"20101:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5808,"mutability":"mutable","name":"reserveIn","nameLocation":"20130:9:14","nodeType":"VariableDeclaration","scope":5844,"src":"20125:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5807,"name":"uint","nodeType":"ElementaryTypeName","src":"20125:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5810,"mutability":"mutable","name":"reserveOut","nameLocation":"20155:10:14","nodeType":"VariableDeclaration","scope":5844,"src":"20150:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5809,"name":"uint","nodeType":"ElementaryTypeName","src":"20150:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20091:80:14"},"returnParameters":{"id":5814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5813,"mutability":"mutable","name":"amount","nameLocation":"20201:6:14","nodeType":"VariableDeclaration","scope":5844,"src":"20193:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5812,"name":"uint256","nodeType":"ElementaryTypeName","src":"20193:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20192:16:14"},"scope":5845,"src":"20070:349:14","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":5846,"src":"530:19891:14","usedErrors":[249,254,259,268,273,278,1005],"usedEvents":[901,910,4990,5001]}],"src":"32:20389:14"},"id":14},"contracts/TokenA.sol":{"ast":{"absolutePath":"contracts/TokenA.sol","exportedSymbols":{"ERC20":[889],"Ownable":[147],"TokenA":[5899]},"id":5900,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5847,"literals":["solidity","^","0.8",".27"],"nodeType":"PragmaDirective","src":"81:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":5849,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5900,"sourceUnit":890,"src":"156:68:15","symbolAliases":[{"foreign":{"id":5848,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"164:5:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5851,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5900,"sourceUnit":148,"src":"296:67:15","symbolAliases":[{"foreign":{"id":5850,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"304:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5853,"name":"ERC20","nameLocations":["555:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":889,"src":"555:5:15"},"id":5854,"nodeType":"InheritanceSpecifier","src":"555:5:15"},{"baseName":{"id":5855,"name":"Ownable","nameLocations":["562:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"562:7:15"},"id":5856,"nodeType":"InheritanceSpecifier","src":"562:7:15"}],"canonicalName":"TokenA","contractDependencies":[],"contractKind":"contract","documentation":{"id":5852,"nodeType":"StructuredDocumentation","src":"365:170:15","text":" @title TokenA\n @dev Implementation of a custom ERC20 token with minting functionality\n The contract is Ownable, meaning only the owner can mint new tokens."},"fullyImplemented":true,"id":5899,"linearizedBaseContracts":[5899,147,889,279,993,967,1487],"name":"TokenA","nameLocation":"545:6:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":5881,"nodeType":"Block","src":"1009:166:15","statements":[{"expression":{"arguments":[{"id":5872,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"1118:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030303030303030303030303030","id":5873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:19:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1000000000000000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1151:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5875,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"1157:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1157:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1151:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1129:38:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5871,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"1112:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1112:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5880,"nodeType":"ExpressionStatement","src":"1112:56:15"}]},"documentation":{"id":5857,"nodeType":"StructuredDocumentation","src":"581:221:15","text":" @dev Constructor that sets the initial token distribution and ownership\n @param recipient Address to receive the initial minted tokens\n @param initialOwner Address that will own the contract"},"id":5882,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"746f6b656e41","id":5864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"874:8:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e47217fd3766e2b543d418df1b6b943eb0ba0332789bb50d101cd4308e40948e","typeString":"literal_string \"tokenA\""},"value":"tokenA"},{"hexValue":"544f4b41","id":5865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"884:6:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_54cb4339281ff9d59731bdc078d820e446c38360346f239c02ce8f55f5a6d80f","typeString":"literal_string \"TOKA\""},"value":"TOKA"}],"id":5866,"kind":"baseConstructorSpecifier","modifierName":{"id":5863,"name":"ERC20","nameLocations":["868:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":889,"src":"868:5:15"},"nodeType":"ModifierInvocation","src":"868:23:15"},{"arguments":[{"id":5868,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"948:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5869,"kind":"baseConstructorSpecifier","modifierName":{"id":5867,"name":"Ownable","nameLocations":["940:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"940:7:15"},"nodeType":"ModifierInvocation","src":"940:21:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5859,"mutability":"mutable","name":"recipient","nameLocation":"827:9:15","nodeType":"VariableDeclaration","scope":5882,"src":"819:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5858,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5861,"mutability":"mutable","name":"initialOwner","nameLocation":"846:12:15","nodeType":"VariableDeclaration","scope":5882,"src":"838:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5860,"name":"address","nodeType":"ElementaryTypeName","src":"838:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"818:41:15"},"returnParameters":{"id":5870,"nodeType":"ParameterList","parameters":[],"src":"1009:0:15"},"scope":5899,"src":"807:368:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5897,"nodeType":"Block","src":"1452:105:15","statements":[{"expression":{"arguments":[{"id":5893,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"1539:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5894,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"1543:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5892,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"1533:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1533:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5896,"nodeType":"ExpressionStatement","src":"1533:17:15"}]},"documentation":{"id":5883,"nodeType":"StructuredDocumentation","src":"1181:207:15","text":" @dev Mint new tokens to a specified address. Only callable by the contract owner.\n @param to Address that will receive the minted tokens\n @param amount Amount of tokens to mint"},"functionSelector":"40c10f19","id":5898,"implemented":true,"kind":"function","modifiers":[{"id":5890,"kind":"modifierInvocation","modifierName":{"id":5889,"name":"onlyOwner","nameLocations":["1442:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1442:9:15"},"nodeType":"ModifierInvocation","src":"1442:9:15"}],"name":"mint","nameLocation":"1402:4:15","nodeType":"FunctionDefinition","parameters":{"id":5888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5885,"mutability":"mutable","name":"to","nameLocation":"1415:2:15","nodeType":"VariableDeclaration","scope":5898,"src":"1407:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5884,"name":"address","nodeType":"ElementaryTypeName","src":"1407:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5887,"mutability":"mutable","name":"amount","nameLocation":"1427:6:15","nodeType":"VariableDeclaration","scope":5898,"src":"1419:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5886,"name":"uint256","nodeType":"ElementaryTypeName","src":"1419:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1406:28:15"},"returnParameters":{"id":5891,"nodeType":"ParameterList","parameters":[],"src":"1452:0:15"},"scope":5899,"src":"1393:164:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":5900,"src":"536:1023:15","usedErrors":[13,18,249,254,259,268,273,278],"usedEvents":[24,901,910]}],"src":"81:1478:15"},"id":15},"contracts/TokenB.sol":{"ast":{"absolutePath":"contracts/TokenB.sol","exportedSymbols":{"ERC20":[889],"Ownable":[147],"TokenB":[5953]},"id":5954,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5901,"literals":["solidity","^","0.8",".27"],"nodeType":"PragmaDirective","src":"81:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":5903,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5954,"sourceUnit":890,"src":"156:68:16","symbolAliases":[{"foreign":{"id":5902,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"164:5:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5905,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5954,"sourceUnit":148,"src":"296:67:16","symbolAliases":[{"foreign":{"id":5904,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"304:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5907,"name":"ERC20","nameLocations":["569:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":889,"src":"569:5:16"},"id":5908,"nodeType":"InheritanceSpecifier","src":"569:5:16"},{"baseName":{"id":5909,"name":"Ownable","nameLocations":["576:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"576:7:16"},"id":5910,"nodeType":"InheritanceSpecifier","src":"576:7:16"}],"canonicalName":"TokenB","contractDependencies":[],"contractKind":"contract","documentation":{"id":5906,"nodeType":"StructuredDocumentation","src":"365:184:16","text":" @title TokenB\n @dev Implementation of a custom ERC20 token with minting functionality\n This contract is Ownable, meaning only the owner has the right to mint new tokens."},"fullyImplemented":true,"id":5953,"linearizedBaseContracts":[5953,147,889,279,993,967,1487],"name":"TokenB","nameLocation":"559:6:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":5935,"nodeType":"Block","src":"1087:166:16","statements":[{"expression":{"arguments":[{"id":5926,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"1196:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030303030303030303030303030","id":5927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1207:19:16","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1000000000000000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1229:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5929,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"1235:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1229:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1207:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5925,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"1190:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1190:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5934,"nodeType":"ExpressionStatement","src":"1190:56:16"}]},"documentation":{"id":5911,"nodeType":"StructuredDocumentation","src":"595:267:16","text":" @dev Constructor that sets up the initial token distribution and contract ownership\n @param recipient The address that will receive the initial minted tokens\n @param initialOwner The address that will be set as the owner of the contract"},"id":5936,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"746f6b656e42","id":5918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"934:8:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b60bff69c4decbb391a22864f6f740985dec3795461dc29de9d42637dea2e41b","typeString":"literal_string \"tokenB\""},"value":"tokenB"},{"hexValue":"544f4b42","id":5919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"944:6:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_deca478258a9a19db6b89fd6d180eba664ea70c8a9e5d48aeee06cf3af821b45","typeString":"literal_string \"TOKB\""},"value":"TOKB"}],"id":5920,"kind":"baseConstructorSpecifier","modifierName":{"id":5917,"name":"ERC20","nameLocations":["928:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":889,"src":"928:5:16"},"nodeType":"ModifierInvocation","src":"928:23:16"},{"arguments":[{"id":5922,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5915,"src":"1024:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5923,"kind":"baseConstructorSpecifier","modifierName":{"id":5921,"name":"Ownable","nameLocations":["1016:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1016:7:16"},"nodeType":"ModifierInvocation","src":"1016:21:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5913,"mutability":"mutable","name":"recipient","nameLocation":"887:9:16","nodeType":"VariableDeclaration","scope":5936,"src":"879:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5912,"name":"address","nodeType":"ElementaryTypeName","src":"879:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5915,"mutability":"mutable","name":"initialOwner","nameLocation":"906:12:16","nodeType":"VariableDeclaration","scope":5936,"src":"898:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5914,"name":"address","nodeType":"ElementaryTypeName","src":"898:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"878:41:16"},"returnParameters":{"id":5924,"nodeType":"ParameterList","parameters":[],"src":"1087:0:16"},"scope":5953,"src":"867:386:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5951,"nodeType":"Block","src":"1545:105:16","statements":[{"expression":{"arguments":[{"id":5947,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5939,"src":"1632:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5948,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"1636:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5946,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"1626:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1626:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5950,"nodeType":"ExpressionStatement","src":"1626:17:16"}]},"documentation":{"id":5937,"nodeType":"StructuredDocumentation","src":"1259:222:16","text":" @dev Mint new tokens to a specified address. Only callable by the owner of the contract.\n @param to The address that will receive the minted tokens\n @param amount The amount of tokens to mint"},"functionSelector":"40c10f19","id":5952,"implemented":true,"kind":"function","modifiers":[{"id":5944,"kind":"modifierInvocation","modifierName":{"id":5943,"name":"onlyOwner","nameLocations":["1535:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1535:9:16"},"nodeType":"ModifierInvocation","src":"1535:9:16"}],"name":"mint","nameLocation":"1495:4:16","nodeType":"FunctionDefinition","parameters":{"id":5942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5939,"mutability":"mutable","name":"to","nameLocation":"1508:2:16","nodeType":"VariableDeclaration","scope":5952,"src":"1500:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5938,"name":"address","nodeType":"ElementaryTypeName","src":"1500:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5941,"mutability":"mutable","name":"amount","nameLocation":"1520:6:16","nodeType":"VariableDeclaration","scope":5952,"src":"1512:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5940,"name":"uint256","nodeType":"ElementaryTypeName","src":"1512:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1499:28:16"},"returnParameters":{"id":5945,"nodeType":"ParameterList","parameters":[],"src":"1545:0:16"},"scope":5953,"src":"1486:164:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":5954,"src":"550:1102:16","usedErrors":[13,18,249,254,259,268,273,278],"usedEvents":[24,901,910]}],"src":"81:1571:16"},"id":16}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122021d82994344a725674ffbd18bfdbf3408286b4c70160438f71557a49498ed9a764736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0xD8 0x29 SWAP5 CALLVALUE BLOBBASEFEE PUSH19 0x5674FFBD18BFDBF3408286B4C70160438F7155 PUSH27 0x49498ED9A764736F6C634300081C00330000000000000000000000 ","sourceMap":"698:9376:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122021d82994344a725674ffbd18bfdbf3408286b4c70160438f71557a49498ed9a764736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0xD8 0x29 SWAP5 CALLVALUE BLOBBASEFEE PUSH19 0x5674FFBD18BFDBF3408286B4C70160438F7155 PUSH27 0x49498ED9A764736F6C634300081C00330000000000000000000000 ","sourceMap":"698:9376:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201619ae7223aa01bdc7afa5042f76fccaa3f5955b0138f23cbc3d1bec23770a5f64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND NOT 0xAE PUSH19 0x23AA01BDC7AFA5042F76FCCAA3F5955B0138F2 EXTCODECOPY 0xBC RETURNDATASIZE SHL 0xEC 0x23 PUSH24 0xA5F64736F6C634300081C00330000000000000000000000 ","sourceMap":"281:31863:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201619ae7223aa01bdc7afa5042f76fccaa3f5955b0138f23cbc3d1bec23770a5f64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND NOT 0xAE PUSH19 0x23AA01BDC7AFA5042F76FCCAA3F5955B0138F2 EXTCODECOPY 0xBC RETURNDATASIZE SHL 0xEC 0x23 PUSH24 0xA5F64736F6C634300081C00330000000000000000000000 ","sourceMap":"281:31863:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"contracts/SimpleSwap.sol":{"SimpleSwap":{"abi":[{"inputs":[{"internalType":"address","name":"_token0","type":"address"},{"internalType":"address","name":"_token1","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"provider","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountA","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountB","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidity","type":"uint256"}],"name":"LiquidityAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"provider","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountA","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountB","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidity","type":"uint256"}],"name":"LiquidityRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountADesired","type":"uint256"},{"internalType":"uint256","name":"amountBDesired","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_426":{"entryPoint":null,"id":426,"parameterSlots":2,"returnSlots":0},"@_5022":{"entryPoint":null,"id":5022,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":407,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":428,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":646,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":492,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":943,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":366,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":334,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":778,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":908,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":798,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1084,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":667,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":597,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1056,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":788,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1026,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":550,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":503,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":832,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":329,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":683,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1013,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":884,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":696,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":842,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":384,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":879,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:6582:17","nodeType":"YulBlock","src":"0:6582:17","statements":[{"body":{"nativeSrc":"47:35:17","nodeType":"YulBlock","src":"47:35:17","statements":[{"nativeSrc":"57:19:17","nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:17","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:17","nodeType":"YulIdentifier","src":"67:5:17"},"nativeSrc":"67:9:17","nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:17","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:17","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:17","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nativeSrc":"177:28:17","nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:17","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:17","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:17","nodeType":"YulIdentifier","src":"187:6:17"},"nativeSrc":"187:12:17","nodeType":"YulFunctionCall","src":"187:12:17"},"nativeSrc":"187:12:17","nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:17","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nativeSrc":"300:28:17","nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:17","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:17","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:17","nodeType":"YulIdentifier","src":"310:6:17"},"nativeSrc":"310:12:17","nodeType":"YulFunctionCall","src":"310:12:17"},"nativeSrc":"310:12:17","nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:17","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nativeSrc":"379:81:17","nodeType":"YulBlock","src":"379:81:17","statements":[{"nativeSrc":"389:65:17","nodeType":"YulAssignment","src":"389:65:17","value":{"arguments":[{"name":"value","nativeSrc":"404:5:17","nodeType":"YulIdentifier","src":"404:5:17"},{"kind":"number","nativeSrc":"411:42:17","nodeType":"YulLiteral","src":"411:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:17","nodeType":"YulIdentifier","src":"400:3:17"},"nativeSrc":"400:54:17","nodeType":"YulFunctionCall","src":"400:54:17"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:17","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:17","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:17","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:126:17"},{"body":{"nativeSrc":"511:51:17","nodeType":"YulBlock","src":"511:51:17","statements":[{"nativeSrc":"521:35:17","nodeType":"YulAssignment","src":"521:35:17","value":{"arguments":[{"name":"value","nativeSrc":"550:5:17","nodeType":"YulIdentifier","src":"550:5:17"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:17","nodeType":"YulIdentifier","src":"532:17:17"},"nativeSrc":"532:24:17","nodeType":"YulFunctionCall","src":"532:24:17"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:17","nodeType":"YulIdentifier","src":"521:7:17"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:17","nodeType":"YulTypedName","src":"493:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:17","nodeType":"YulTypedName","src":"503:7:17","type":""}],"src":"466:96:17"},{"body":{"nativeSrc":"611:79:17","nodeType":"YulBlock","src":"611:79:17","statements":[{"body":{"nativeSrc":"668:16:17","nodeType":"YulBlock","src":"668:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:17","nodeType":"YulLiteral","src":"677:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:17","nodeType":"YulLiteral","src":"680:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:17","nodeType":"YulIdentifier","src":"670:6:17"},"nativeSrc":"670:12:17","nodeType":"YulFunctionCall","src":"670:12:17"},"nativeSrc":"670:12:17","nodeType":"YulExpressionStatement","src":"670:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:17","nodeType":"YulIdentifier","src":"634:5:17"},{"arguments":[{"name":"value","nativeSrc":"659:5:17","nodeType":"YulIdentifier","src":"659:5:17"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:17","nodeType":"YulIdentifier","src":"641:17:17"},"nativeSrc":"641:24:17","nodeType":"YulFunctionCall","src":"641:24:17"}],"functionName":{"name":"eq","nativeSrc":"631:2:17","nodeType":"YulIdentifier","src":"631:2:17"},"nativeSrc":"631:35:17","nodeType":"YulFunctionCall","src":"631:35:17"}],"functionName":{"name":"iszero","nativeSrc":"624:6:17","nodeType":"YulIdentifier","src":"624:6:17"},"nativeSrc":"624:43:17","nodeType":"YulFunctionCall","src":"624:43:17"},"nativeSrc":"621:63:17","nodeType":"YulIf","src":"621:63:17"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:17","nodeType":"YulTypedName","src":"604:5:17","type":""}],"src":"568:122:17"},{"body":{"nativeSrc":"759:80:17","nodeType":"YulBlock","src":"759:80:17","statements":[{"nativeSrc":"769:22:17","nodeType":"YulAssignment","src":"769:22:17","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:17","nodeType":"YulIdentifier","src":"784:6:17"}],"functionName":{"name":"mload","nativeSrc":"778:5:17","nodeType":"YulIdentifier","src":"778:5:17"},"nativeSrc":"778:13:17","nodeType":"YulFunctionCall","src":"778:13:17"},"variableNames":[{"name":"value","nativeSrc":"769:5:17","nodeType":"YulIdentifier","src":"769:5:17"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:17","nodeType":"YulIdentifier","src":"827:5:17"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:17","nodeType":"YulIdentifier","src":"800:26:17"},"nativeSrc":"800:33:17","nodeType":"YulFunctionCall","src":"800:33:17"},"nativeSrc":"800:33:17","nodeType":"YulExpressionStatement","src":"800:33:17"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:17","nodeType":"YulTypedName","src":"737:6:17","type":""},{"name":"end","nativeSrc":"745:3:17","nodeType":"YulTypedName","src":"745:3:17","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:17","nodeType":"YulTypedName","src":"753:5:17","type":""}],"src":"696:143:17"},{"body":{"nativeSrc":"939:413:17","nodeType":"YulBlock","src":"939:413:17","statements":[{"body":{"nativeSrc":"985:83:17","nodeType":"YulBlock","src":"985:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"987:77:17","nodeType":"YulIdentifier","src":"987:77:17"},"nativeSrc":"987:79:17","nodeType":"YulFunctionCall","src":"987:79:17"},"nativeSrc":"987:79:17","nodeType":"YulExpressionStatement","src":"987:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"960:7:17","nodeType":"YulIdentifier","src":"960:7:17"},{"name":"headStart","nativeSrc":"969:9:17","nodeType":"YulIdentifier","src":"969:9:17"}],"functionName":{"name":"sub","nativeSrc":"956:3:17","nodeType":"YulIdentifier","src":"956:3:17"},"nativeSrc":"956:23:17","nodeType":"YulFunctionCall","src":"956:23:17"},{"kind":"number","nativeSrc":"981:2:17","nodeType":"YulLiteral","src":"981:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"952:3:17","nodeType":"YulIdentifier","src":"952:3:17"},"nativeSrc":"952:32:17","nodeType":"YulFunctionCall","src":"952:32:17"},"nativeSrc":"949:119:17","nodeType":"YulIf","src":"949:119:17"},{"nativeSrc":"1078:128:17","nodeType":"YulBlock","src":"1078:128:17","statements":[{"nativeSrc":"1093:15:17","nodeType":"YulVariableDeclaration","src":"1093:15:17","value":{"kind":"number","nativeSrc":"1107:1:17","nodeType":"YulLiteral","src":"1107:1:17","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1097:6:17","nodeType":"YulTypedName","src":"1097:6:17","type":""}]},{"nativeSrc":"1122:74:17","nodeType":"YulAssignment","src":"1122:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1168:9:17","nodeType":"YulIdentifier","src":"1168:9:17"},{"name":"offset","nativeSrc":"1179:6:17","nodeType":"YulIdentifier","src":"1179:6:17"}],"functionName":{"name":"add","nativeSrc":"1164:3:17","nodeType":"YulIdentifier","src":"1164:3:17"},"nativeSrc":"1164:22:17","nodeType":"YulFunctionCall","src":"1164:22:17"},{"name":"dataEnd","nativeSrc":"1188:7:17","nodeType":"YulIdentifier","src":"1188:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1132:31:17","nodeType":"YulIdentifier","src":"1132:31:17"},"nativeSrc":"1132:64:17","nodeType":"YulFunctionCall","src":"1132:64:17"},"variableNames":[{"name":"value0","nativeSrc":"1122:6:17","nodeType":"YulIdentifier","src":"1122:6:17"}]}]},{"nativeSrc":"1216:129:17","nodeType":"YulBlock","src":"1216:129:17","statements":[{"nativeSrc":"1231:16:17","nodeType":"YulVariableDeclaration","src":"1231:16:17","value":{"kind":"number","nativeSrc":"1245:2:17","nodeType":"YulLiteral","src":"1245:2:17","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1235:6:17","nodeType":"YulTypedName","src":"1235:6:17","type":""}]},{"nativeSrc":"1261:74:17","nodeType":"YulAssignment","src":"1261:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1307:9:17","nodeType":"YulIdentifier","src":"1307:9:17"},{"name":"offset","nativeSrc":"1318:6:17","nodeType":"YulIdentifier","src":"1318:6:17"}],"functionName":{"name":"add","nativeSrc":"1303:3:17","nodeType":"YulIdentifier","src":"1303:3:17"},"nativeSrc":"1303:22:17","nodeType":"YulFunctionCall","src":"1303:22:17"},{"name":"dataEnd","nativeSrc":"1327:7:17","nodeType":"YulIdentifier","src":"1327:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1271:31:17","nodeType":"YulIdentifier","src":"1271:31:17"},"nativeSrc":"1271:64:17","nodeType":"YulFunctionCall","src":"1271:64:17"},"variableNames":[{"name":"value1","nativeSrc":"1261:6:17","nodeType":"YulIdentifier","src":"1261:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nativeSrc":"845:507:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"901:9:17","nodeType":"YulTypedName","src":"901:9:17","type":""},{"name":"dataEnd","nativeSrc":"912:7:17","nodeType":"YulTypedName","src":"912:7:17","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"924:6:17","nodeType":"YulTypedName","src":"924:6:17","type":""},{"name":"value1","nativeSrc":"932:6:17","nodeType":"YulTypedName","src":"932:6:17","type":""}],"src":"845:507:17"},{"body":{"nativeSrc":"1417:40:17","nodeType":"YulBlock","src":"1417:40:17","statements":[{"nativeSrc":"1428:22:17","nodeType":"YulAssignment","src":"1428:22:17","value":{"arguments":[{"name":"value","nativeSrc":"1444:5:17","nodeType":"YulIdentifier","src":"1444:5:17"}],"functionName":{"name":"mload","nativeSrc":"1438:5:17","nodeType":"YulIdentifier","src":"1438:5:17"},"nativeSrc":"1438:12:17","nodeType":"YulFunctionCall","src":"1438:12:17"},"variableNames":[{"name":"length","nativeSrc":"1428:6:17","nodeType":"YulIdentifier","src":"1428:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1358:99:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1400:5:17","nodeType":"YulTypedName","src":"1400:5:17","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1410:6:17","nodeType":"YulTypedName","src":"1410:6:17","type":""}],"src":"1358:99:17"},{"body":{"nativeSrc":"1491:152:17","nodeType":"YulBlock","src":"1491:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1508:1:17","nodeType":"YulLiteral","src":"1508:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"1511:77:17","nodeType":"YulLiteral","src":"1511:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1501:6:17","nodeType":"YulIdentifier","src":"1501:6:17"},"nativeSrc":"1501:88:17","nodeType":"YulFunctionCall","src":"1501:88:17"},"nativeSrc":"1501:88:17","nodeType":"YulExpressionStatement","src":"1501:88:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1605:1:17","nodeType":"YulLiteral","src":"1605:1:17","type":"","value":"4"},{"kind":"number","nativeSrc":"1608:4:17","nodeType":"YulLiteral","src":"1608:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1598:6:17","nodeType":"YulIdentifier","src":"1598:6:17"},"nativeSrc":"1598:15:17","nodeType":"YulFunctionCall","src":"1598:15:17"},"nativeSrc":"1598:15:17","nodeType":"YulExpressionStatement","src":"1598:15:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1629:1:17","nodeType":"YulLiteral","src":"1629:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"1632:4:17","nodeType":"YulLiteral","src":"1632:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1622:6:17","nodeType":"YulIdentifier","src":"1622:6:17"},"nativeSrc":"1622:15:17","nodeType":"YulFunctionCall","src":"1622:15:17"},"nativeSrc":"1622:15:17","nodeType":"YulExpressionStatement","src":"1622:15:17"}]},"name":"panic_error_0x41","nativeSrc":"1463:180:17","nodeType":"YulFunctionDefinition","src":"1463:180:17"},{"body":{"nativeSrc":"1677:152:17","nodeType":"YulBlock","src":"1677:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1694:1:17","nodeType":"YulLiteral","src":"1694:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"1697:77:17","nodeType":"YulLiteral","src":"1697:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1687:6:17","nodeType":"YulIdentifier","src":"1687:6:17"},"nativeSrc":"1687:88:17","nodeType":"YulFunctionCall","src":"1687:88:17"},"nativeSrc":"1687:88:17","nodeType":"YulExpressionStatement","src":"1687:88:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1791:1:17","nodeType":"YulLiteral","src":"1791:1:17","type":"","value":"4"},{"kind":"number","nativeSrc":"1794:4:17","nodeType":"YulLiteral","src":"1794:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1784:6:17","nodeType":"YulIdentifier","src":"1784:6:17"},"nativeSrc":"1784:15:17","nodeType":"YulFunctionCall","src":"1784:15:17"},"nativeSrc":"1784:15:17","nodeType":"YulExpressionStatement","src":"1784:15:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1815:1:17","nodeType":"YulLiteral","src":"1815:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"1818:4:17","nodeType":"YulLiteral","src":"1818:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1808:6:17","nodeType":"YulIdentifier","src":"1808:6:17"},"nativeSrc":"1808:15:17","nodeType":"YulFunctionCall","src":"1808:15:17"},"nativeSrc":"1808:15:17","nodeType":"YulExpressionStatement","src":"1808:15:17"}]},"name":"panic_error_0x22","nativeSrc":"1649:180:17","nodeType":"YulFunctionDefinition","src":"1649:180:17"},{"body":{"nativeSrc":"1886:269:17","nodeType":"YulBlock","src":"1886:269:17","statements":[{"nativeSrc":"1896:22:17","nodeType":"YulAssignment","src":"1896:22:17","value":{"arguments":[{"name":"data","nativeSrc":"1910:4:17","nodeType":"YulIdentifier","src":"1910:4:17"},{"kind":"number","nativeSrc":"1916:1:17","nodeType":"YulLiteral","src":"1916:1:17","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"1906:3:17","nodeType":"YulIdentifier","src":"1906:3:17"},"nativeSrc":"1906:12:17","nodeType":"YulFunctionCall","src":"1906:12:17"},"variableNames":[{"name":"length","nativeSrc":"1896:6:17","nodeType":"YulIdentifier","src":"1896:6:17"}]},{"nativeSrc":"1927:38:17","nodeType":"YulVariableDeclaration","src":"1927:38:17","value":{"arguments":[{"name":"data","nativeSrc":"1957:4:17","nodeType":"YulIdentifier","src":"1957:4:17"},{"kind":"number","nativeSrc":"1963:1:17","nodeType":"YulLiteral","src":"1963:1:17","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1953:3:17","nodeType":"YulIdentifier","src":"1953:3:17"},"nativeSrc":"1953:12:17","nodeType":"YulFunctionCall","src":"1953:12:17"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1931:18:17","nodeType":"YulTypedName","src":"1931:18:17","type":""}]},{"body":{"nativeSrc":"2004:51:17","nodeType":"YulBlock","src":"2004:51:17","statements":[{"nativeSrc":"2018:27:17","nodeType":"YulAssignment","src":"2018:27:17","value":{"arguments":[{"name":"length","nativeSrc":"2032:6:17","nodeType":"YulIdentifier","src":"2032:6:17"},{"kind":"number","nativeSrc":"2040:4:17","nodeType":"YulLiteral","src":"2040:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"2028:3:17","nodeType":"YulIdentifier","src":"2028:3:17"},"nativeSrc":"2028:17:17","nodeType":"YulFunctionCall","src":"2028:17:17"},"variableNames":[{"name":"length","nativeSrc":"2018:6:17","nodeType":"YulIdentifier","src":"2018:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1984:18:17","nodeType":"YulIdentifier","src":"1984:18:17"}],"functionName":{"name":"iszero","nativeSrc":"1977:6:17","nodeType":"YulIdentifier","src":"1977:6:17"},"nativeSrc":"1977:26:17","nodeType":"YulFunctionCall","src":"1977:26:17"},"nativeSrc":"1974:81:17","nodeType":"YulIf","src":"1974:81:17"},{"body":{"nativeSrc":"2107:42:17","nodeType":"YulBlock","src":"2107:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"2121:16:17","nodeType":"YulIdentifier","src":"2121:16:17"},"nativeSrc":"2121:18:17","nodeType":"YulFunctionCall","src":"2121:18:17"},"nativeSrc":"2121:18:17","nodeType":"YulExpressionStatement","src":"2121:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2071:18:17","nodeType":"YulIdentifier","src":"2071:18:17"},{"arguments":[{"name":"length","nativeSrc":"2094:6:17","nodeType":"YulIdentifier","src":"2094:6:17"},{"kind":"number","nativeSrc":"2102:2:17","nodeType":"YulLiteral","src":"2102:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"2091:2:17","nodeType":"YulIdentifier","src":"2091:2:17"},"nativeSrc":"2091:14:17","nodeType":"YulFunctionCall","src":"2091:14:17"}],"functionName":{"name":"eq","nativeSrc":"2068:2:17","nodeType":"YulIdentifier","src":"2068:2:17"},"nativeSrc":"2068:38:17","nodeType":"YulFunctionCall","src":"2068:38:17"},"nativeSrc":"2065:84:17","nodeType":"YulIf","src":"2065:84:17"}]},"name":"extract_byte_array_length","nativeSrc":"1835:320:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1870:4:17","nodeType":"YulTypedName","src":"1870:4:17","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1879:6:17","nodeType":"YulTypedName","src":"1879:6:17","type":""}],"src":"1835:320:17"},{"body":{"nativeSrc":"2215:87:17","nodeType":"YulBlock","src":"2215:87:17","statements":[{"nativeSrc":"2225:11:17","nodeType":"YulAssignment","src":"2225:11:17","value":{"name":"ptr","nativeSrc":"2233:3:17","nodeType":"YulIdentifier","src":"2233:3:17"},"variableNames":[{"name":"data","nativeSrc":"2225:4:17","nodeType":"YulIdentifier","src":"2225:4:17"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2253:1:17","nodeType":"YulLiteral","src":"2253:1:17","type":"","value":"0"},{"name":"ptr","nativeSrc":"2256:3:17","nodeType":"YulIdentifier","src":"2256:3:17"}],"functionName":{"name":"mstore","nativeSrc":"2246:6:17","nodeType":"YulIdentifier","src":"2246:6:17"},"nativeSrc":"2246:14:17","nodeType":"YulFunctionCall","src":"2246:14:17"},"nativeSrc":"2246:14:17","nodeType":"YulExpressionStatement","src":"2246:14:17"},{"nativeSrc":"2269:26:17","nodeType":"YulAssignment","src":"2269:26:17","value":{"arguments":[{"kind":"number","nativeSrc":"2287:1:17","nodeType":"YulLiteral","src":"2287:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"2290:4:17","nodeType":"YulLiteral","src":"2290:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2277:9:17","nodeType":"YulIdentifier","src":"2277:9:17"},"nativeSrc":"2277:18:17","nodeType":"YulFunctionCall","src":"2277:18:17"},"variableNames":[{"name":"data","nativeSrc":"2269:4:17","nodeType":"YulIdentifier","src":"2269:4:17"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"2161:141:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"2202:3:17","nodeType":"YulTypedName","src":"2202:3:17","type":""}],"returnVariables":[{"name":"data","nativeSrc":"2210:4:17","nodeType":"YulTypedName","src":"2210:4:17","type":""}],"src":"2161:141:17"},{"body":{"nativeSrc":"2352:49:17","nodeType":"YulBlock","src":"2352:49:17","statements":[{"nativeSrc":"2362:33:17","nodeType":"YulAssignment","src":"2362:33:17","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2380:5:17","nodeType":"YulIdentifier","src":"2380:5:17"},{"kind":"number","nativeSrc":"2387:2:17","nodeType":"YulLiteral","src":"2387:2:17","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2376:3:17","nodeType":"YulIdentifier","src":"2376:3:17"},"nativeSrc":"2376:14:17","nodeType":"YulFunctionCall","src":"2376:14:17"},{"kind":"number","nativeSrc":"2392:2:17","nodeType":"YulLiteral","src":"2392:2:17","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"2372:3:17","nodeType":"YulIdentifier","src":"2372:3:17"},"nativeSrc":"2372:23:17","nodeType":"YulFunctionCall","src":"2372:23:17"},"variableNames":[{"name":"result","nativeSrc":"2362:6:17","nodeType":"YulIdentifier","src":"2362:6:17"}]}]},"name":"divide_by_32_ceil","nativeSrc":"2308:93:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2335:5:17","nodeType":"YulTypedName","src":"2335:5:17","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2345:6:17","nodeType":"YulTypedName","src":"2345:6:17","type":""}],"src":"2308:93:17"},{"body":{"nativeSrc":"2460:54:17","nodeType":"YulBlock","src":"2460:54:17","statements":[{"nativeSrc":"2470:37:17","nodeType":"YulAssignment","src":"2470:37:17","value":{"arguments":[{"name":"bits","nativeSrc":"2495:4:17","nodeType":"YulIdentifier","src":"2495:4:17"},{"name":"value","nativeSrc":"2501:5:17","nodeType":"YulIdentifier","src":"2501:5:17"}],"functionName":{"name":"shl","nativeSrc":"2491:3:17","nodeType":"YulIdentifier","src":"2491:3:17"},"nativeSrc":"2491:16:17","nodeType":"YulFunctionCall","src":"2491:16:17"},"variableNames":[{"name":"newValue","nativeSrc":"2470:8:17","nodeType":"YulIdentifier","src":"2470:8:17"}]}]},"name":"shift_left_dynamic","nativeSrc":"2407:107:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"2435:4:17","nodeType":"YulTypedName","src":"2435:4:17","type":""},{"name":"value","nativeSrc":"2441:5:17","nodeType":"YulTypedName","src":"2441:5:17","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"2451:8:17","nodeType":"YulTypedName","src":"2451:8:17","type":""}],"src":"2407:107:17"},{"body":{"nativeSrc":"2596:317:17","nodeType":"YulBlock","src":"2596:317:17","statements":[{"nativeSrc":"2606:35:17","nodeType":"YulVariableDeclaration","src":"2606:35:17","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"2627:10:17","nodeType":"YulIdentifier","src":"2627:10:17"},{"kind":"number","nativeSrc":"2639:1:17","nodeType":"YulLiteral","src":"2639:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"2623:3:17","nodeType":"YulIdentifier","src":"2623:3:17"},"nativeSrc":"2623:18:17","nodeType":"YulFunctionCall","src":"2623:18:17"},"variables":[{"name":"shiftBits","nativeSrc":"2610:9:17","nodeType":"YulTypedName","src":"2610:9:17","type":""}]},{"nativeSrc":"2650:109:17","nodeType":"YulVariableDeclaration","src":"2650:109:17","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2681:9:17","nodeType":"YulIdentifier","src":"2681:9:17"},{"kind":"number","nativeSrc":"2692:66:17","nodeType":"YulLiteral","src":"2692:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2662:18:17","nodeType":"YulIdentifier","src":"2662:18:17"},"nativeSrc":"2662:97:17","nodeType":"YulFunctionCall","src":"2662:97:17"},"variables":[{"name":"mask","nativeSrc":"2654:4:17","nodeType":"YulTypedName","src":"2654:4:17","type":""}]},{"nativeSrc":"2768:51:17","nodeType":"YulAssignment","src":"2768:51:17","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2799:9:17","nodeType":"YulIdentifier","src":"2799:9:17"},{"name":"toInsert","nativeSrc":"2810:8:17","nodeType":"YulIdentifier","src":"2810:8:17"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2780:18:17","nodeType":"YulIdentifier","src":"2780:18:17"},"nativeSrc":"2780:39:17","nodeType":"YulFunctionCall","src":"2780:39:17"},"variableNames":[{"name":"toInsert","nativeSrc":"2768:8:17","nodeType":"YulIdentifier","src":"2768:8:17"}]},{"nativeSrc":"2828:30:17","nodeType":"YulAssignment","src":"2828:30:17","value":{"arguments":[{"name":"value","nativeSrc":"2841:5:17","nodeType":"YulIdentifier","src":"2841:5:17"},{"arguments":[{"name":"mask","nativeSrc":"2852:4:17","nodeType":"YulIdentifier","src":"2852:4:17"}],"functionName":{"name":"not","nativeSrc":"2848:3:17","nodeType":"YulIdentifier","src":"2848:3:17"},"nativeSrc":"2848:9:17","nodeType":"YulFunctionCall","src":"2848:9:17"}],"functionName":{"name":"and","nativeSrc":"2837:3:17","nodeType":"YulIdentifier","src":"2837:3:17"},"nativeSrc":"2837:21:17","nodeType":"YulFunctionCall","src":"2837:21:17"},"variableNames":[{"name":"value","nativeSrc":"2828:5:17","nodeType":"YulIdentifier","src":"2828:5:17"}]},{"nativeSrc":"2867:40:17","nodeType":"YulAssignment","src":"2867:40:17","value":{"arguments":[{"name":"value","nativeSrc":"2880:5:17","nodeType":"YulIdentifier","src":"2880:5:17"},{"arguments":[{"name":"toInsert","nativeSrc":"2891:8:17","nodeType":"YulIdentifier","src":"2891:8:17"},{"name":"mask","nativeSrc":"2901:4:17","nodeType":"YulIdentifier","src":"2901:4:17"}],"functionName":{"name":"and","nativeSrc":"2887:3:17","nodeType":"YulIdentifier","src":"2887:3:17"},"nativeSrc":"2887:19:17","nodeType":"YulFunctionCall","src":"2887:19:17"}],"functionName":{"name":"or","nativeSrc":"2877:2:17","nodeType":"YulIdentifier","src":"2877:2:17"},"nativeSrc":"2877:30:17","nodeType":"YulFunctionCall","src":"2877:30:17"},"variableNames":[{"name":"result","nativeSrc":"2867:6:17","nodeType":"YulIdentifier","src":"2867:6:17"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"2520:393:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2557:5:17","nodeType":"YulTypedName","src":"2557:5:17","type":""},{"name":"shiftBytes","nativeSrc":"2564:10:17","nodeType":"YulTypedName","src":"2564:10:17","type":""},{"name":"toInsert","nativeSrc":"2576:8:17","nodeType":"YulTypedName","src":"2576:8:17","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2589:6:17","nodeType":"YulTypedName","src":"2589:6:17","type":""}],"src":"2520:393:17"},{"body":{"nativeSrc":"2964:32:17","nodeType":"YulBlock","src":"2964:32:17","statements":[{"nativeSrc":"2974:16:17","nodeType":"YulAssignment","src":"2974:16:17","value":{"name":"value","nativeSrc":"2985:5:17","nodeType":"YulIdentifier","src":"2985:5:17"},"variableNames":[{"name":"cleaned","nativeSrc":"2974:7:17","nodeType":"YulIdentifier","src":"2974:7:17"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2919:77:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2946:5:17","nodeType":"YulTypedName","src":"2946:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2956:7:17","nodeType":"YulTypedName","src":"2956:7:17","type":""}],"src":"2919:77:17"},{"body":{"nativeSrc":"3034:28:17","nodeType":"YulBlock","src":"3034:28:17","statements":[{"nativeSrc":"3044:12:17","nodeType":"YulAssignment","src":"3044:12:17","value":{"name":"value","nativeSrc":"3051:5:17","nodeType":"YulIdentifier","src":"3051:5:17"},"variableNames":[{"name":"ret","nativeSrc":"3044:3:17","nodeType":"YulIdentifier","src":"3044:3:17"}]}]},"name":"identity","nativeSrc":"3002:60:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3020:5:17","nodeType":"YulTypedName","src":"3020:5:17","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3030:3:17","nodeType":"YulTypedName","src":"3030:3:17","type":""}],"src":"3002:60:17"},{"body":{"nativeSrc":"3128:82:17","nodeType":"YulBlock","src":"3128:82:17","statements":[{"nativeSrc":"3138:66:17","nodeType":"YulAssignment","src":"3138:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3196:5:17","nodeType":"YulIdentifier","src":"3196:5:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3178:17:17","nodeType":"YulIdentifier","src":"3178:17:17"},"nativeSrc":"3178:24:17","nodeType":"YulFunctionCall","src":"3178:24:17"}],"functionName":{"name":"identity","nativeSrc":"3169:8:17","nodeType":"YulIdentifier","src":"3169:8:17"},"nativeSrc":"3169:34:17","nodeType":"YulFunctionCall","src":"3169:34:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3151:17:17","nodeType":"YulIdentifier","src":"3151:17:17"},"nativeSrc":"3151:53:17","nodeType":"YulFunctionCall","src":"3151:53:17"},"variableNames":[{"name":"converted","nativeSrc":"3138:9:17","nodeType":"YulIdentifier","src":"3138:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3068:142:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3108:5:17","nodeType":"YulTypedName","src":"3108:5:17","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3118:9:17","nodeType":"YulTypedName","src":"3118:9:17","type":""}],"src":"3068:142:17"},{"body":{"nativeSrc":"3263:28:17","nodeType":"YulBlock","src":"3263:28:17","statements":[{"nativeSrc":"3273:12:17","nodeType":"YulAssignment","src":"3273:12:17","value":{"name":"value","nativeSrc":"3280:5:17","nodeType":"YulIdentifier","src":"3280:5:17"},"variableNames":[{"name":"ret","nativeSrc":"3273:3:17","nodeType":"YulIdentifier","src":"3273:3:17"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"3216:75:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3249:5:17","nodeType":"YulTypedName","src":"3249:5:17","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3259:3:17","nodeType":"YulTypedName","src":"3259:3:17","type":""}],"src":"3216:75:17"},{"body":{"nativeSrc":"3373:193:17","nodeType":"YulBlock","src":"3373:193:17","statements":[{"nativeSrc":"3383:63:17","nodeType":"YulVariableDeclaration","src":"3383:63:17","value":{"arguments":[{"name":"value_0","nativeSrc":"3438:7:17","nodeType":"YulIdentifier","src":"3438:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3407:30:17","nodeType":"YulIdentifier","src":"3407:30:17"},"nativeSrc":"3407:39:17","nodeType":"YulFunctionCall","src":"3407:39:17"},"variables":[{"name":"convertedValue_0","nativeSrc":"3387:16:17","nodeType":"YulTypedName","src":"3387:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3462:4:17","nodeType":"YulIdentifier","src":"3462:4:17"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3502:4:17","nodeType":"YulIdentifier","src":"3502:4:17"}],"functionName":{"name":"sload","nativeSrc":"3496:5:17","nodeType":"YulIdentifier","src":"3496:5:17"},"nativeSrc":"3496:11:17","nodeType":"YulFunctionCall","src":"3496:11:17"},{"name":"offset","nativeSrc":"3509:6:17","nodeType":"YulIdentifier","src":"3509:6:17"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"3541:16:17","nodeType":"YulIdentifier","src":"3541:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"3517:23:17","nodeType":"YulIdentifier","src":"3517:23:17"},"nativeSrc":"3517:41:17","nodeType":"YulFunctionCall","src":"3517:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"3468:27:17","nodeType":"YulIdentifier","src":"3468:27:17"},"nativeSrc":"3468:91:17","nodeType":"YulFunctionCall","src":"3468:91:17"}],"functionName":{"name":"sstore","nativeSrc":"3455:6:17","nodeType":"YulIdentifier","src":"3455:6:17"},"nativeSrc":"3455:105:17","nodeType":"YulFunctionCall","src":"3455:105:17"},"nativeSrc":"3455:105:17","nodeType":"YulExpressionStatement","src":"3455:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3297:269:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3350:4:17","nodeType":"YulTypedName","src":"3350:4:17","type":""},{"name":"offset","nativeSrc":"3356:6:17","nodeType":"YulTypedName","src":"3356:6:17","type":""},{"name":"value_0","nativeSrc":"3364:7:17","nodeType":"YulTypedName","src":"3364:7:17","type":""}],"src":"3297:269:17"},{"body":{"nativeSrc":"3621:24:17","nodeType":"YulBlock","src":"3621:24:17","statements":[{"nativeSrc":"3631:8:17","nodeType":"YulAssignment","src":"3631:8:17","value":{"kind":"number","nativeSrc":"3638:1:17","nodeType":"YulLiteral","src":"3638:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"3631:3:17","nodeType":"YulIdentifier","src":"3631:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"3572:73:17","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"3617:3:17","nodeType":"YulTypedName","src":"3617:3:17","type":""}],"src":"3572:73:17"},{"body":{"nativeSrc":"3704:136:17","nodeType":"YulBlock","src":"3704:136:17","statements":[{"nativeSrc":"3714:46:17","nodeType":"YulVariableDeclaration","src":"3714:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"3728:30:17","nodeType":"YulIdentifier","src":"3728:30:17"},"nativeSrc":"3728:32:17","nodeType":"YulFunctionCall","src":"3728:32:17"},"variables":[{"name":"zero_0","nativeSrc":"3718:6:17","nodeType":"YulTypedName","src":"3718:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3813:4:17","nodeType":"YulIdentifier","src":"3813:4:17"},{"name":"offset","nativeSrc":"3819:6:17","nodeType":"YulIdentifier","src":"3819:6:17"},{"name":"zero_0","nativeSrc":"3827:6:17","nodeType":"YulIdentifier","src":"3827:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3769:43:17","nodeType":"YulIdentifier","src":"3769:43:17"},"nativeSrc":"3769:65:17","nodeType":"YulFunctionCall","src":"3769:65:17"},"nativeSrc":"3769:65:17","nodeType":"YulExpressionStatement","src":"3769:65:17"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"3651:189:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3690:4:17","nodeType":"YulTypedName","src":"3690:4:17","type":""},{"name":"offset","nativeSrc":"3696:6:17","nodeType":"YulTypedName","src":"3696:6:17","type":""}],"src":"3651:189:17"},{"body":{"nativeSrc":"3896:136:17","nodeType":"YulBlock","src":"3896:136:17","statements":[{"body":{"nativeSrc":"3963:63:17","nodeType":"YulBlock","src":"3963:63:17","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"4007:5:17","nodeType":"YulIdentifier","src":"4007:5:17"},{"kind":"number","nativeSrc":"4014:1:17","nodeType":"YulLiteral","src":"4014:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"3977:29:17","nodeType":"YulIdentifier","src":"3977:29:17"},"nativeSrc":"3977:39:17","nodeType":"YulFunctionCall","src":"3977:39:17"},"nativeSrc":"3977:39:17","nodeType":"YulExpressionStatement","src":"3977:39:17"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"3916:5:17","nodeType":"YulIdentifier","src":"3916:5:17"},{"name":"end","nativeSrc":"3923:3:17","nodeType":"YulIdentifier","src":"3923:3:17"}],"functionName":{"name":"lt","nativeSrc":"3913:2:17","nodeType":"YulIdentifier","src":"3913:2:17"},"nativeSrc":"3913:14:17","nodeType":"YulFunctionCall","src":"3913:14:17"},"nativeSrc":"3906:120:17","nodeType":"YulForLoop","post":{"nativeSrc":"3928:26:17","nodeType":"YulBlock","src":"3928:26:17","statements":[{"nativeSrc":"3930:22:17","nodeType":"YulAssignment","src":"3930:22:17","value":{"arguments":[{"name":"start","nativeSrc":"3943:5:17","nodeType":"YulIdentifier","src":"3943:5:17"},{"kind":"number","nativeSrc":"3950:1:17","nodeType":"YulLiteral","src":"3950:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3939:3:17","nodeType":"YulIdentifier","src":"3939:3:17"},"nativeSrc":"3939:13:17","nodeType":"YulFunctionCall","src":"3939:13:17"},"variableNames":[{"name":"start","nativeSrc":"3930:5:17","nodeType":"YulIdentifier","src":"3930:5:17"}]}]},"pre":{"nativeSrc":"3910:2:17","nodeType":"YulBlock","src":"3910:2:17","statements":[]},"src":"3906:120:17"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"3846:186:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"3884:5:17","nodeType":"YulTypedName","src":"3884:5:17","type":""},{"name":"end","nativeSrc":"3891:3:17","nodeType":"YulTypedName","src":"3891:3:17","type":""}],"src":"3846:186:17"},{"body":{"nativeSrc":"4117:464:17","nodeType":"YulBlock","src":"4117:464:17","statements":[{"body":{"nativeSrc":"4143:431:17","nodeType":"YulBlock","src":"4143:431:17","statements":[{"nativeSrc":"4157:54:17","nodeType":"YulVariableDeclaration","src":"4157:54:17","value":{"arguments":[{"name":"array","nativeSrc":"4205:5:17","nodeType":"YulIdentifier","src":"4205:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4173:31:17","nodeType":"YulIdentifier","src":"4173:31:17"},"nativeSrc":"4173:38:17","nodeType":"YulFunctionCall","src":"4173:38:17"},"variables":[{"name":"dataArea","nativeSrc":"4161:8:17","nodeType":"YulTypedName","src":"4161:8:17","type":""}]},{"nativeSrc":"4224:63:17","nodeType":"YulVariableDeclaration","src":"4224:63:17","value":{"arguments":[{"name":"dataArea","nativeSrc":"4247:8:17","nodeType":"YulIdentifier","src":"4247:8:17"},{"arguments":[{"name":"startIndex","nativeSrc":"4275:10:17","nodeType":"YulIdentifier","src":"4275:10:17"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4257:17:17","nodeType":"YulIdentifier","src":"4257:17:17"},"nativeSrc":"4257:29:17","nodeType":"YulFunctionCall","src":"4257:29:17"}],"functionName":{"name":"add","nativeSrc":"4243:3:17","nodeType":"YulIdentifier","src":"4243:3:17"},"nativeSrc":"4243:44:17","nodeType":"YulFunctionCall","src":"4243:44:17"},"variables":[{"name":"deleteStart","nativeSrc":"4228:11:17","nodeType":"YulTypedName","src":"4228:11:17","type":""}]},{"body":{"nativeSrc":"4444:27:17","nodeType":"YulBlock","src":"4444:27:17","statements":[{"nativeSrc":"4446:23:17","nodeType":"YulAssignment","src":"4446:23:17","value":{"name":"dataArea","nativeSrc":"4461:8:17","nodeType":"YulIdentifier","src":"4461:8:17"},"variableNames":[{"name":"deleteStart","nativeSrc":"4446:11:17","nodeType":"YulIdentifier","src":"4446:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4428:10:17","nodeType":"YulIdentifier","src":"4428:10:17"},{"kind":"number","nativeSrc":"4440:2:17","nodeType":"YulLiteral","src":"4440:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4425:2:17","nodeType":"YulIdentifier","src":"4425:2:17"},"nativeSrc":"4425:18:17","nodeType":"YulFunctionCall","src":"4425:18:17"},"nativeSrc":"4422:49:17","nodeType":"YulIf","src":"4422:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"4513:11:17","nodeType":"YulIdentifier","src":"4513:11:17"},{"arguments":[{"name":"dataArea","nativeSrc":"4530:8:17","nodeType":"YulIdentifier","src":"4530:8:17"},{"arguments":[{"name":"len","nativeSrc":"4558:3:17","nodeType":"YulIdentifier","src":"4558:3:17"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4540:17:17","nodeType":"YulIdentifier","src":"4540:17:17"},"nativeSrc":"4540:22:17","nodeType":"YulFunctionCall","src":"4540:22:17"}],"functionName":{"name":"add","nativeSrc":"4526:3:17","nodeType":"YulIdentifier","src":"4526:3:17"},"nativeSrc":"4526:37:17","nodeType":"YulFunctionCall","src":"4526:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"4484:28:17","nodeType":"YulIdentifier","src":"4484:28:17"},"nativeSrc":"4484:80:17","nodeType":"YulFunctionCall","src":"4484:80:17"},"nativeSrc":"4484:80:17","nodeType":"YulExpressionStatement","src":"4484:80:17"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"4134:3:17","nodeType":"YulIdentifier","src":"4134:3:17"},{"kind":"number","nativeSrc":"4139:2:17","nodeType":"YulLiteral","src":"4139:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4131:2:17","nodeType":"YulIdentifier","src":"4131:2:17"},"nativeSrc":"4131:11:17","nodeType":"YulFunctionCall","src":"4131:11:17"},"nativeSrc":"4128:446:17","nodeType":"YulIf","src":"4128:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4038:543:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4093:5:17","nodeType":"YulTypedName","src":"4093:5:17","type":""},{"name":"len","nativeSrc":"4100:3:17","nodeType":"YulTypedName","src":"4100:3:17","type":""},{"name":"startIndex","nativeSrc":"4105:10:17","nodeType":"YulTypedName","src":"4105:10:17","type":""}],"src":"4038:543:17"},{"body":{"nativeSrc":"4650:54:17","nodeType":"YulBlock","src":"4650:54:17","statements":[{"nativeSrc":"4660:37:17","nodeType":"YulAssignment","src":"4660:37:17","value":{"arguments":[{"name":"bits","nativeSrc":"4685:4:17","nodeType":"YulIdentifier","src":"4685:4:17"},{"name":"value","nativeSrc":"4691:5:17","nodeType":"YulIdentifier","src":"4691:5:17"}],"functionName":{"name":"shr","nativeSrc":"4681:3:17","nodeType":"YulIdentifier","src":"4681:3:17"},"nativeSrc":"4681:16:17","nodeType":"YulFunctionCall","src":"4681:16:17"},"variableNames":[{"name":"newValue","nativeSrc":"4660:8:17","nodeType":"YulIdentifier","src":"4660:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"4587:117:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4625:4:17","nodeType":"YulTypedName","src":"4625:4:17","type":""},{"name":"value","nativeSrc":"4631:5:17","nodeType":"YulTypedName","src":"4631:5:17","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4641:8:17","nodeType":"YulTypedName","src":"4641:8:17","type":""}],"src":"4587:117:17"},{"body":{"nativeSrc":"4761:118:17","nodeType":"YulBlock","src":"4761:118:17","statements":[{"nativeSrc":"4771:68:17","nodeType":"YulVariableDeclaration","src":"4771:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4820:1:17","nodeType":"YulLiteral","src":"4820:1:17","type":"","value":"8"},{"name":"bytes","nativeSrc":"4823:5:17","nodeType":"YulIdentifier","src":"4823:5:17"}],"functionName":{"name":"mul","nativeSrc":"4816:3:17","nodeType":"YulIdentifier","src":"4816:3:17"},"nativeSrc":"4816:13:17","nodeType":"YulFunctionCall","src":"4816:13:17"},{"arguments":[{"kind":"number","nativeSrc":"4835:1:17","nodeType":"YulLiteral","src":"4835:1:17","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4831:3:17","nodeType":"YulIdentifier","src":"4831:3:17"},"nativeSrc":"4831:6:17","nodeType":"YulFunctionCall","src":"4831:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"4787:28:17","nodeType":"YulIdentifier","src":"4787:28:17"},"nativeSrc":"4787:51:17","nodeType":"YulFunctionCall","src":"4787:51:17"}],"functionName":{"name":"not","nativeSrc":"4783:3:17","nodeType":"YulIdentifier","src":"4783:3:17"},"nativeSrc":"4783:56:17","nodeType":"YulFunctionCall","src":"4783:56:17"},"variables":[{"name":"mask","nativeSrc":"4775:4:17","nodeType":"YulTypedName","src":"4775:4:17","type":""}]},{"nativeSrc":"4848:25:17","nodeType":"YulAssignment","src":"4848:25:17","value":{"arguments":[{"name":"data","nativeSrc":"4862:4:17","nodeType":"YulIdentifier","src":"4862:4:17"},{"name":"mask","nativeSrc":"4868:4:17","nodeType":"YulIdentifier","src":"4868:4:17"}],"functionName":{"name":"and","nativeSrc":"4858:3:17","nodeType":"YulIdentifier","src":"4858:3:17"},"nativeSrc":"4858:15:17","nodeType":"YulFunctionCall","src":"4858:15:17"},"variableNames":[{"name":"result","nativeSrc":"4848:6:17","nodeType":"YulIdentifier","src":"4848:6:17"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"4710:169:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4738:4:17","nodeType":"YulTypedName","src":"4738:4:17","type":""},{"name":"bytes","nativeSrc":"4744:5:17","nodeType":"YulTypedName","src":"4744:5:17","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4754:6:17","nodeType":"YulTypedName","src":"4754:6:17","type":""}],"src":"4710:169:17"},{"body":{"nativeSrc":"4965:214:17","nodeType":"YulBlock","src":"4965:214:17","statements":[{"nativeSrc":"5098:37:17","nodeType":"YulAssignment","src":"5098:37:17","value":{"arguments":[{"name":"data","nativeSrc":"5125:4:17","nodeType":"YulIdentifier","src":"5125:4:17"},{"name":"len","nativeSrc":"5131:3:17","nodeType":"YulIdentifier","src":"5131:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"5106:18:17","nodeType":"YulIdentifier","src":"5106:18:17"},"nativeSrc":"5106:29:17","nodeType":"YulFunctionCall","src":"5106:29:17"},"variableNames":[{"name":"data","nativeSrc":"5098:4:17","nodeType":"YulIdentifier","src":"5098:4:17"}]},{"nativeSrc":"5144:29:17","nodeType":"YulAssignment","src":"5144:29:17","value":{"arguments":[{"name":"data","nativeSrc":"5155:4:17","nodeType":"YulIdentifier","src":"5155:4:17"},{"arguments":[{"kind":"number","nativeSrc":"5165:1:17","nodeType":"YulLiteral","src":"5165:1:17","type":"","value":"2"},{"name":"len","nativeSrc":"5168:3:17","nodeType":"YulIdentifier","src":"5168:3:17"}],"functionName":{"name":"mul","nativeSrc":"5161:3:17","nodeType":"YulIdentifier","src":"5161:3:17"},"nativeSrc":"5161:11:17","nodeType":"YulFunctionCall","src":"5161:11:17"}],"functionName":{"name":"or","nativeSrc":"5152:2:17","nodeType":"YulIdentifier","src":"5152:2:17"},"nativeSrc":"5152:21:17","nodeType":"YulFunctionCall","src":"5152:21:17"},"variableNames":[{"name":"used","nativeSrc":"5144:4:17","nodeType":"YulIdentifier","src":"5144:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"4884:295:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4946:4:17","nodeType":"YulTypedName","src":"4946:4:17","type":""},{"name":"len","nativeSrc":"4952:3:17","nodeType":"YulTypedName","src":"4952:3:17","type":""}],"returnVariables":[{"name":"used","nativeSrc":"4960:4:17","nodeType":"YulTypedName","src":"4960:4:17","type":""}],"src":"4884:295:17"},{"body":{"nativeSrc":"5276:1303:17","nodeType":"YulBlock","src":"5276:1303:17","statements":[{"nativeSrc":"5287:51:17","nodeType":"YulVariableDeclaration","src":"5287:51:17","value":{"arguments":[{"name":"src","nativeSrc":"5334:3:17","nodeType":"YulIdentifier","src":"5334:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"5301:32:17","nodeType":"YulIdentifier","src":"5301:32:17"},"nativeSrc":"5301:37:17","nodeType":"YulFunctionCall","src":"5301:37:17"},"variables":[{"name":"newLen","nativeSrc":"5291:6:17","nodeType":"YulTypedName","src":"5291:6:17","type":""}]},{"body":{"nativeSrc":"5423:22:17","nodeType":"YulBlock","src":"5423:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5425:16:17","nodeType":"YulIdentifier","src":"5425:16:17"},"nativeSrc":"5425:18:17","nodeType":"YulFunctionCall","src":"5425:18:17"},"nativeSrc":"5425:18:17","nodeType":"YulExpressionStatement","src":"5425:18:17"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5395:6:17","nodeType":"YulIdentifier","src":"5395:6:17"},{"kind":"number","nativeSrc":"5403:18:17","nodeType":"YulLiteral","src":"5403:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5392:2:17","nodeType":"YulIdentifier","src":"5392:2:17"},"nativeSrc":"5392:30:17","nodeType":"YulFunctionCall","src":"5392:30:17"},"nativeSrc":"5389:56:17","nodeType":"YulIf","src":"5389:56:17"},{"nativeSrc":"5455:52:17","nodeType":"YulVariableDeclaration","src":"5455:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5501:4:17","nodeType":"YulIdentifier","src":"5501:4:17"}],"functionName":{"name":"sload","nativeSrc":"5495:5:17","nodeType":"YulIdentifier","src":"5495:5:17"},"nativeSrc":"5495:11:17","nodeType":"YulFunctionCall","src":"5495:11:17"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5469:25:17","nodeType":"YulIdentifier","src":"5469:25:17"},"nativeSrc":"5469:38:17","nodeType":"YulFunctionCall","src":"5469:38:17"},"variables":[{"name":"oldLen","nativeSrc":"5459:6:17","nodeType":"YulTypedName","src":"5459:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5600:4:17","nodeType":"YulIdentifier","src":"5600:4:17"},{"name":"oldLen","nativeSrc":"5606:6:17","nodeType":"YulIdentifier","src":"5606:6:17"},{"name":"newLen","nativeSrc":"5614:6:17","nodeType":"YulIdentifier","src":"5614:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5554:45:17","nodeType":"YulIdentifier","src":"5554:45:17"},"nativeSrc":"5554:67:17","nodeType":"YulFunctionCall","src":"5554:67:17"},"nativeSrc":"5554:67:17","nodeType":"YulExpressionStatement","src":"5554:67:17"},{"nativeSrc":"5631:18:17","nodeType":"YulVariableDeclaration","src":"5631:18:17","value":{"kind":"number","nativeSrc":"5648:1:17","nodeType":"YulLiteral","src":"5648:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5635:9:17","nodeType":"YulTypedName","src":"5635:9:17","type":""}]},{"nativeSrc":"5659:17:17","nodeType":"YulAssignment","src":"5659:17:17","value":{"kind":"number","nativeSrc":"5672:4:17","nodeType":"YulLiteral","src":"5672:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"5659:9:17","nodeType":"YulIdentifier","src":"5659:9:17"}]},{"cases":[{"body":{"nativeSrc":"5723:611:17","nodeType":"YulBlock","src":"5723:611:17","statements":[{"nativeSrc":"5737:37:17","nodeType":"YulVariableDeclaration","src":"5737:37:17","value":{"arguments":[{"name":"newLen","nativeSrc":"5756:6:17","nodeType":"YulIdentifier","src":"5756:6:17"},{"arguments":[{"kind":"number","nativeSrc":"5768:4:17","nodeType":"YulLiteral","src":"5768:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"5764:3:17","nodeType":"YulIdentifier","src":"5764:3:17"},"nativeSrc":"5764:9:17","nodeType":"YulFunctionCall","src":"5764:9:17"}],"functionName":{"name":"and","nativeSrc":"5752:3:17","nodeType":"YulIdentifier","src":"5752:3:17"},"nativeSrc":"5752:22:17","nodeType":"YulFunctionCall","src":"5752:22:17"},"variables":[{"name":"loopEnd","nativeSrc":"5741:7:17","nodeType":"YulTypedName","src":"5741:7:17","type":""}]},{"nativeSrc":"5788:51:17","nodeType":"YulVariableDeclaration","src":"5788:51:17","value":{"arguments":[{"name":"slot","nativeSrc":"5834:4:17","nodeType":"YulIdentifier","src":"5834:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"5802:31:17","nodeType":"YulIdentifier","src":"5802:31:17"},"nativeSrc":"5802:37:17","nodeType":"YulFunctionCall","src":"5802:37:17"},"variables":[{"name":"dstPtr","nativeSrc":"5792:6:17","nodeType":"YulTypedName","src":"5792:6:17","type":""}]},{"nativeSrc":"5852:10:17","nodeType":"YulVariableDeclaration","src":"5852:10:17","value":{"kind":"number","nativeSrc":"5861:1:17","nodeType":"YulLiteral","src":"5861:1:17","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5856:1:17","nodeType":"YulTypedName","src":"5856:1:17","type":""}]},{"body":{"nativeSrc":"5920:163:17","nodeType":"YulBlock","src":"5920:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"5945:6:17","nodeType":"YulIdentifier","src":"5945:6:17"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5963:3:17","nodeType":"YulIdentifier","src":"5963:3:17"},{"name":"srcOffset","nativeSrc":"5968:9:17","nodeType":"YulIdentifier","src":"5968:9:17"}],"functionName":{"name":"add","nativeSrc":"5959:3:17","nodeType":"YulIdentifier","src":"5959:3:17"},"nativeSrc":"5959:19:17","nodeType":"YulFunctionCall","src":"5959:19:17"}],"functionName":{"name":"mload","nativeSrc":"5953:5:17","nodeType":"YulIdentifier","src":"5953:5:17"},"nativeSrc":"5953:26:17","nodeType":"YulFunctionCall","src":"5953:26:17"}],"functionName":{"name":"sstore","nativeSrc":"5938:6:17","nodeType":"YulIdentifier","src":"5938:6:17"},"nativeSrc":"5938:42:17","nodeType":"YulFunctionCall","src":"5938:42:17"},"nativeSrc":"5938:42:17","nodeType":"YulExpressionStatement","src":"5938:42:17"},{"nativeSrc":"5997:24:17","nodeType":"YulAssignment","src":"5997:24:17","value":{"arguments":[{"name":"dstPtr","nativeSrc":"6011:6:17","nodeType":"YulIdentifier","src":"6011:6:17"},{"kind":"number","nativeSrc":"6019:1:17","nodeType":"YulLiteral","src":"6019:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6007:3:17","nodeType":"YulIdentifier","src":"6007:3:17"},"nativeSrc":"6007:14:17","nodeType":"YulFunctionCall","src":"6007:14:17"},"variableNames":[{"name":"dstPtr","nativeSrc":"5997:6:17","nodeType":"YulIdentifier","src":"5997:6:17"}]},{"nativeSrc":"6038:31:17","nodeType":"YulAssignment","src":"6038:31:17","value":{"arguments":[{"name":"srcOffset","nativeSrc":"6055:9:17","nodeType":"YulIdentifier","src":"6055:9:17"},{"kind":"number","nativeSrc":"6066:2:17","nodeType":"YulLiteral","src":"6066:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6051:3:17","nodeType":"YulIdentifier","src":"6051:3:17"},"nativeSrc":"6051:18:17","nodeType":"YulFunctionCall","src":"6051:18:17"},"variableNames":[{"name":"srcOffset","nativeSrc":"6038:9:17","nodeType":"YulIdentifier","src":"6038:9:17"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5886:1:17","nodeType":"YulIdentifier","src":"5886:1:17"},{"name":"loopEnd","nativeSrc":"5889:7:17","nodeType":"YulIdentifier","src":"5889:7:17"}],"functionName":{"name":"lt","nativeSrc":"5883:2:17","nodeType":"YulIdentifier","src":"5883:2:17"},"nativeSrc":"5883:14:17","nodeType":"YulFunctionCall","src":"5883:14:17"},"nativeSrc":"5875:208:17","nodeType":"YulForLoop","post":{"nativeSrc":"5898:21:17","nodeType":"YulBlock","src":"5898:21:17","statements":[{"nativeSrc":"5900:17:17","nodeType":"YulAssignment","src":"5900:17:17","value":{"arguments":[{"name":"i","nativeSrc":"5909:1:17","nodeType":"YulIdentifier","src":"5909:1:17"},{"kind":"number","nativeSrc":"5912:4:17","nodeType":"YulLiteral","src":"5912:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5905:3:17","nodeType":"YulIdentifier","src":"5905:3:17"},"nativeSrc":"5905:12:17","nodeType":"YulFunctionCall","src":"5905:12:17"},"variableNames":[{"name":"i","nativeSrc":"5900:1:17","nodeType":"YulIdentifier","src":"5900:1:17"}]}]},"pre":{"nativeSrc":"5879:3:17","nodeType":"YulBlock","src":"5879:3:17","statements":[]},"src":"5875:208:17"},{"body":{"nativeSrc":"6119:156:17","nodeType":"YulBlock","src":"6119:156:17","statements":[{"nativeSrc":"6137:43:17","nodeType":"YulVariableDeclaration","src":"6137:43:17","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6164:3:17","nodeType":"YulIdentifier","src":"6164:3:17"},{"name":"srcOffset","nativeSrc":"6169:9:17","nodeType":"YulIdentifier","src":"6169:9:17"}],"functionName":{"name":"add","nativeSrc":"6160:3:17","nodeType":"YulIdentifier","src":"6160:3:17"},"nativeSrc":"6160:19:17","nodeType":"YulFunctionCall","src":"6160:19:17"}],"functionName":{"name":"mload","nativeSrc":"6154:5:17","nodeType":"YulIdentifier","src":"6154:5:17"},"nativeSrc":"6154:26:17","nodeType":"YulFunctionCall","src":"6154:26:17"},"variables":[{"name":"lastValue","nativeSrc":"6141:9:17","nodeType":"YulTypedName","src":"6141:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6204:6:17","nodeType":"YulIdentifier","src":"6204:6:17"},{"arguments":[{"name":"lastValue","nativeSrc":"6231:9:17","nodeType":"YulIdentifier","src":"6231:9:17"},{"arguments":[{"name":"newLen","nativeSrc":"6246:6:17","nodeType":"YulIdentifier","src":"6246:6:17"},{"kind":"number","nativeSrc":"6254:4:17","nodeType":"YulLiteral","src":"6254:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"6242:3:17","nodeType":"YulIdentifier","src":"6242:3:17"},"nativeSrc":"6242:17:17","nodeType":"YulFunctionCall","src":"6242:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"6212:18:17","nodeType":"YulIdentifier","src":"6212:18:17"},"nativeSrc":"6212:48:17","nodeType":"YulFunctionCall","src":"6212:48:17"}],"functionName":{"name":"sstore","nativeSrc":"6197:6:17","nodeType":"YulIdentifier","src":"6197:6:17"},"nativeSrc":"6197:64:17","nodeType":"YulFunctionCall","src":"6197:64:17"},"nativeSrc":"6197:64:17","nodeType":"YulExpressionStatement","src":"6197:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"6102:7:17","nodeType":"YulIdentifier","src":"6102:7:17"},{"name":"newLen","nativeSrc":"6111:6:17","nodeType":"YulIdentifier","src":"6111:6:17"}],"functionName":{"name":"lt","nativeSrc":"6099:2:17","nodeType":"YulIdentifier","src":"6099:2:17"},"nativeSrc":"6099:19:17","nodeType":"YulFunctionCall","src":"6099:19:17"},"nativeSrc":"6096:179:17","nodeType":"YulIf","src":"6096:179:17"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6295:4:17","nodeType":"YulIdentifier","src":"6295:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"6309:6:17","nodeType":"YulIdentifier","src":"6309:6:17"},{"kind":"number","nativeSrc":"6317:1:17","nodeType":"YulLiteral","src":"6317:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"6305:3:17","nodeType":"YulIdentifier","src":"6305:3:17"},"nativeSrc":"6305:14:17","nodeType":"YulFunctionCall","src":"6305:14:17"},{"kind":"number","nativeSrc":"6321:1:17","nodeType":"YulLiteral","src":"6321:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6301:3:17","nodeType":"YulIdentifier","src":"6301:3:17"},"nativeSrc":"6301:22:17","nodeType":"YulFunctionCall","src":"6301:22:17"}],"functionName":{"name":"sstore","nativeSrc":"6288:6:17","nodeType":"YulIdentifier","src":"6288:6:17"},"nativeSrc":"6288:36:17","nodeType":"YulFunctionCall","src":"6288:36:17"},"nativeSrc":"6288:36:17","nodeType":"YulExpressionStatement","src":"6288:36:17"}]},"nativeSrc":"5716:618:17","nodeType":"YulCase","src":"5716:618:17","value":{"kind":"number","nativeSrc":"5721:1:17","nodeType":"YulLiteral","src":"5721:1:17","type":"","value":"1"}},{"body":{"nativeSrc":"6351:222:17","nodeType":"YulBlock","src":"6351:222:17","statements":[{"nativeSrc":"6365:14:17","nodeType":"YulVariableDeclaration","src":"6365:14:17","value":{"kind":"number","nativeSrc":"6378:1:17","nodeType":"YulLiteral","src":"6378:1:17","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"6369:5:17","nodeType":"YulTypedName","src":"6369:5:17","type":""}]},{"body":{"nativeSrc":"6402:67:17","nodeType":"YulBlock","src":"6402:67:17","statements":[{"nativeSrc":"6420:35:17","nodeType":"YulAssignment","src":"6420:35:17","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6439:3:17","nodeType":"YulIdentifier","src":"6439:3:17"},{"name":"srcOffset","nativeSrc":"6444:9:17","nodeType":"YulIdentifier","src":"6444:9:17"}],"functionName":{"name":"add","nativeSrc":"6435:3:17","nodeType":"YulIdentifier","src":"6435:3:17"},"nativeSrc":"6435:19:17","nodeType":"YulFunctionCall","src":"6435:19:17"}],"functionName":{"name":"mload","nativeSrc":"6429:5:17","nodeType":"YulIdentifier","src":"6429:5:17"},"nativeSrc":"6429:26:17","nodeType":"YulFunctionCall","src":"6429:26:17"},"variableNames":[{"name":"value","nativeSrc":"6420:5:17","nodeType":"YulIdentifier","src":"6420:5:17"}]}]},"condition":{"name":"newLen","nativeSrc":"6395:6:17","nodeType":"YulIdentifier","src":"6395:6:17"},"nativeSrc":"6392:77:17","nodeType":"YulIf","src":"6392:77:17"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6489:4:17","nodeType":"YulIdentifier","src":"6489:4:17"},{"arguments":[{"name":"value","nativeSrc":"6548:5:17","nodeType":"YulIdentifier","src":"6548:5:17"},{"name":"newLen","nativeSrc":"6555:6:17","nodeType":"YulIdentifier","src":"6555:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6495:52:17","nodeType":"YulIdentifier","src":"6495:52:17"},"nativeSrc":"6495:67:17","nodeType":"YulFunctionCall","src":"6495:67:17"}],"functionName":{"name":"sstore","nativeSrc":"6482:6:17","nodeType":"YulIdentifier","src":"6482:6:17"},"nativeSrc":"6482:81:17","nodeType":"YulFunctionCall","src":"6482:81:17"},"nativeSrc":"6482:81:17","nodeType":"YulExpressionStatement","src":"6482:81:17"}]},"nativeSrc":"6343:230:17","nodeType":"YulCase","src":"6343:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"5696:6:17","nodeType":"YulIdentifier","src":"5696:6:17"},{"kind":"number","nativeSrc":"5704:2:17","nodeType":"YulLiteral","src":"5704:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5693:2:17","nodeType":"YulIdentifier","src":"5693:2:17"},"nativeSrc":"5693:14:17","nodeType":"YulFunctionCall","src":"5693:14:17"},"nativeSrc":"5686:887:17","nodeType":"YulSwitch","src":"5686:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"5184:1395:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5265:4:17","nodeType":"YulTypedName","src":"5265:4:17","type":""},{"name":"src","nativeSrc":"5271:3:17","nodeType":"YulTypedName","src":"5271:3:17","type":""}],"src":"5184:1395:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516133c53803806133c5833981810160405281019061003291906101ac565b6040518060400160405280600981526020017f4c697175696469747900000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4c4951000000000000000000000000000000000000000000000000000000000081525081600390816100ad919061043c565b5080600490816100bd919061043c565b50505081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061050e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101798261014e565b9050919050565b6101898161016e565b811461019457600080fd5b50565b6000815190506101a681610180565b92915050565b600080604083850312156101c3576101c2610149565b5b60006101d185828601610197565b92505060206101e285828601610197565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061026d57607f821691505b6020821081036102805761027f610226565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026102e87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102ab565b6102f286836102ab565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061033961033461032f8461030a565b610314565b61030a565b9050919050565b6000819050919050565b6103538361031e565b61036761035f82610340565b8484546102b8565b825550505050565b600090565b61037c61036f565b61038781848461034a565b505050565b5b818110156103ab576103a0600082610374565b60018101905061038d565b5050565b601f8211156103f0576103c181610286565b6103ca8461029b565b810160208510156103d9578190505b6103ed6103e58561029b565b83018261038c565b50505b505050565b600082821c905092915050565b6000610413600019846008026103f5565b1980831691505092915050565b600061042c8383610402565b9150826002028217905092915050565b610445826101ec565b67ffffffffffffffff81111561045e5761045d6101f7565b5b6104688254610255565b6104738282856103af565b600060209050601f8311600181146104a65760008415610494578287015190505b61049e8582610420565b865550610506565b601f1984166104b486610286565b60005b828110156104dc578489015182556001820191506020850194506020810190506104b7565b868310156104f957848901516104f5601f891682610402565b8355505b6001600288020188555050505b505050505050565b612ea88061051d6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063baa2abde11610066578063baa2abde146102eb578063d21220a71461031c578063dd62ed3e1461033a578063e8e337001461036a57610100565b806370a082311461023d57806395d89b411461026d578063a9059cbb1461028b578063ac41865a146102bb57610100565b806318160ddd116100d357806318160ddd146101a157806323b872dd146101bf578063313ce567146101ef57806338ed17391461020d57610100565b8063054d50d41461010557806306fdde0314610135578063095ea7b3146101535780630dfe168114610183575b600080fd5b61011f600480360381019061011a9190612227565b61039c565b60405161012c9190612289565b60405180910390f35b61013d61042a565b60405161014a9190612334565b60405180910390f35b61016d600480360381019061016891906123b4565b6104bc565b60405161017a919061240f565b60405180910390f35b61018b6104df565b6040516101989190612439565b60405180910390f35b6101a9610505565b6040516101b69190612289565b60405180910390f35b6101d960048036038101906101d49190612454565b61050f565b6040516101e6919061240f565b60405180910390f35b6101f761053e565b60405161020491906124c3565b60405180910390f35b61022760048036038101906102229190612543565b610547565b604051610234919061269b565b60405180910390f35b610257600480360381019061025291906126bd565b6108af565b6040516102649190612289565b60405180910390f35b6102756108f7565b6040516102829190612334565b60405180910390f35b6102a560048036038101906102a091906123b4565b610989565b6040516102b2919061240f565b60405180910390f35b6102d560048036038101906102d091906126ea565b6109ac565b6040516102e29190612289565b60405180910390f35b6103056004803603810190610300919061272a565b610ad2565b6040516103139291906127cc565b60405180910390f35b610324610d8f565b6040516103319190612439565b60405180910390f35b610354600480360381019061034f91906126ea565b610db5565b6040516103619190612289565b60405180910390f35b610384600480360381019061037f91906127f5565b610e3c565b604051610393939291906128ab565b60405180910390f35b60008082856103ab9190612911565b9050600084866103bb9190612953565b905060008111610400576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f7906129d3565b60405180910390fd5b80670de0b6b3a7640000836104159190612911565b61041f9190612a22565b925050509392505050565b60606003805461043990612a82565b80601f016020809104026020016040519081016040528092919081815260200182805461046590612a82565b80156104b25780601f10610487576101008083540402835291602001916104b2565b820191906000526020600020905b81548152906001019060200180831161049557829003601f168201915b5050505050905090565b6000806104c761117c565b90506104d4818585611184565b600191505092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b60008061051a61117c565b9050610527858285611196565b61053285858561122b565b60019150509392505050565b60006012905090565b60606000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050428410156105da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d190612aff565b60405180910390fd5b60028787905014610620576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061790612b6b565b60405180910390fd5b61062861213f565b8787600081811061063c5761063b612b8b565b5b905060200201602081019061065191906126bd565b816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508787600181811061069c5761069b612b8b565b5b90506020020160208101906106b191906126bd565b816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050898160400181815250508273ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614801561076057508173ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16145b806107d557508173ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161480156107d457508273ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16145b5b610814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080b90612c06565b60405180910390fd5b61081d8161131f565b610834816040015182608001518360a0015161039c565b8160600181815250508881606001511015610884576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087b90612c72565b60405180910390fd5b61088e8187611430565b6108a08160400151826060015161149c565b93505050509695505050505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461090690612a82565b80601f016020809104026020016040519081016040528092919081815260200182805461093290612a82565b801561097f5780601f106109545761010080835404028352916020019161097f565b820191906000526020600020905b81548152906001019060200180831161096257829003601f168201915b5050505050905090565b60008061099461117c565b90506109a181858561122b565b600191505092915050565b6000808373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109e89190612439565b602060405180830381865afa158015610a05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a299190612ca7565b905060008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a669190612439565b602060405180830381865afa158015610a83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa79190612ca7565b905081670de0b6b3a764000082610abe9190612911565b610ac89190612a22565b9250505092915050565b6000806000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905042851015610b66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5d90612aff565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16148015610bcc57508073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16145b80610c3957508073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16148015610c3857508173ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16145b5b610c78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6f90612c06565b60405180910390fd5b610c806121a1565b8b816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508a816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610d038a82600001518360200151611532565b8095508196505050610d1785858b8b61167a565b610d2e33888c888886600001518760200151611706565b3373ffffffffffffffffffffffffffffffffffffffff167f1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d86868d604051610d78939291906128ab565b60405180910390a250505097509795505050505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905042861015610ed1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec890612aff565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168d73ffffffffffffffffffffffffffffffffffffffff16148015610f3757508073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff16145b80610fa457508073ffffffffffffffffffffffffffffffffffffffff168d73ffffffffffffffffffffffffffffffffffffffff16148015610fa357508173ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff16145b5b610fe3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fda90612c06565b60405180910390fd5b60008d73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161101e9190612439565b602060405180830381865afa15801561103b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105f9190612ca7565b905060008d73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161109c9190612439565b602060405180830381865afa1580156110b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110dd9190612ca7565b90506110ed8d8d8d8d868661176f565b80975081985050506111028f8f89898d611875565b61111686886111119190612911565b6118f3565b94503373ffffffffffffffffffffffffffffffffffffffff167f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e888888604051611162939291906128ab565b60405180910390a250505050985098509895505050505050565b600033905090565b6111918383836001611a90565b505050565b60006111a28484610db5565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156112255781811015611215578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161120c93929190612cd4565b60405180910390fd5b61122484848484036000611a90565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361129d5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112949190612439565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361130f5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113069190612439565b60405180910390fd5b61131a838383611c67565b505050565b806000015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161135c9190612439565b602060405180830381865afa158015611379573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139d9190612ca7565b816080018181525050806020015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016113e39190612439565b602060405180830381865afa158015611400573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114249190612ca7565b8160a001818152505050565b61146533308460400151856000015173ffffffffffffffffffffffffffffffffffffffff16611e8c909392919063ffffffff16565b611498818360600151846020015173ffffffffffffffffffffffffffffffffffffffff16611f0e9092919063ffffffff16565b5050565b6060600267ffffffffffffffff8111156114b9576114b8612d0b565b5b6040519080825280602002602001820160405280156114e75781602001602082028036833780820191505090505b50905082816000815181106114ff576114fe612b8b565b5b60200260200101818152505081816001815181106115205761151f612b8b565b5b60200260200101818152505092915050565b60008060008473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016115709190612439565b602060405180830381865afa15801561158d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b19190612ca7565b905060008473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016115ee9190612439565b602060405180830381865afa15801561160b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162f9190612ca7565b9050600061163b610505565b905080838961164a9190612911565b6116549190612a22565b81838a6116619190612911565b61166b9190612a22565b94509450505050935093915050565b818410156116bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b490612d86565b60405180910390fd5b80831015611700576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f790612df2565b60405180910390fd5b50505050565b6117108786611f8d565b61173b86858473ffffffffffffffffffffffffffffffffffffffff16611f0e9092919063ffffffff16565b61176686848373ffffffffffffffffffffffffffffffffffffffff16611f0e9092919063ffffffff16565b50505050505050565b6000806000841480156117825750600083145b156117925787879150915061186a565b600084848a6117a19190612911565b6117ab9190612a22565b905087811161180357858110156117f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ee90612df2565b60405180910390fd5b8881925092505061186a565b600084868a6118129190612911565b61181c9190612a22565b905087811015611861576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185890612d86565b60405180910390fd5b80899350935050505b965096945050505050565b6118a23330858873ffffffffffffffffffffffffffffffffffffffff16611e8c909392919063ffffffff16565b6118cf3330848773ffffffffffffffffffffffffffffffffffffffff16611e8c909392919063ffffffff16565b6118ec816118e784866118e29190612911565b6118f3565b61200f565b5050505050565b60006001821161190557819050611a8b565b6000829050600060019050700100000000000000000000000000000000821061193757608082901c9150604081901b90505b68010000000000000000821061195657604082901c9150602081901b90505b640100000000821061197157602082901c9150601081901b90505b62010000821061198a57601082901c9150600881901b90505b61010082106119a257600882901c9150600481901b90505b601082106119b957600482901c9150600281901b90505b600482106119c957600181901b90505b600181600302901c905060018185816119e5576119e46129f3565b5b048201901c905060018185816119fe576119fd6129f3565b5b048201901c90506001818581611a1757611a166129f3565b5b048201901c90506001818581611a3057611a2f6129f3565b5b048201901c90506001818581611a4957611a486129f3565b5b048201901c90506001818581611a6257611a616129f3565b5b048201901c9050611a84818581611a7c57611a7b6129f3565b5b048211612091565b8103925050505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611b025760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611af99190612439565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b745760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611b6b9190612439565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611c61578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611c589190612289565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611cb9578060026000828254611cad9190612953565b92505081905550611d8c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611d45578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611d3c93929190612cd4565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611dd55780600260008282540392505081905550611e22565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611e7f9190612289565b60405180910390a3505050565b611f08848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611ec193929190612e12565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061209d565b50505050565b611f88838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611f41929190612e49565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061209d565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611fff5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611ff69190612439565b60405180910390fd5b61200b82600083611c67565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036120815760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016120789190612439565b60405180910390fd5b61208d60008383611c67565b5050565b60008115159050919050565b600080602060008451602086016000885af1806120c0576040513d6000823e3d81fd5b3d9250600051915050600082146120db5760018114156120f7565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b1561213957836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016121309190612439565b60405180910390fd5b50505050565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b600080fd5b6000819050919050565b612204816121f1565b811461220f57600080fd5b50565b600081359050612221816121fb565b92915050565b6000806000606084860312156122405761223f6121e7565b5b600061224e86828701612212565b935050602061225f86828701612212565b925050604061227086828701612212565b9150509250925092565b612283816121f1565b82525050565b600060208201905061229e600083018461227a565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156122de5780820151818401526020810190506122c3565b60008484015250505050565b6000601f19601f8301169050919050565b6000612306826122a4565b61231081856122af565b93506123208185602086016122c0565b612329816122ea565b840191505092915050565b6000602082019050818103600083015261234e81846122fb565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061238182612356565b9050919050565b61239181612376565b811461239c57600080fd5b50565b6000813590506123ae81612388565b92915050565b600080604083850312156123cb576123ca6121e7565b5b60006123d98582860161239f565b92505060206123ea85828601612212565b9150509250929050565b60008115159050919050565b612409816123f4565b82525050565b60006020820190506124246000830184612400565b92915050565b61243381612376565b82525050565b600060208201905061244e600083018461242a565b92915050565b60008060006060848603121561246d5761246c6121e7565b5b600061247b8682870161239f565b935050602061248c8682870161239f565b925050604061249d86828701612212565b9150509250925092565b600060ff82169050919050565b6124bd816124a7565b82525050565b60006020820190506124d860008301846124b4565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612503576125026124de565b5b8235905067ffffffffffffffff8111156125205761251f6124e3565b5b60208301915083602082028301111561253c5761253b6124e8565b5b9250929050565b60008060008060008060a087890312156125605761255f6121e7565b5b600061256e89828a01612212565b965050602061257f89828a01612212565b955050604087013567ffffffffffffffff8111156125a05761259f6121ec565b5b6125ac89828a016124ed565b945094505060606125bf89828a0161239f565b92505060806125d089828a01612212565b9150509295509295509295565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612612816121f1565b82525050565b60006126248383612609565b60208301905092915050565b6000602082019050919050565b6000612648826125dd565b61265281856125e8565b935061265d836125f9565b8060005b8381101561268e5781516126758882612618565b975061268083612630565b925050600181019050612661565b5085935050505092915050565b600060208201905081810360008301526126b5818461263d565b905092915050565b6000602082840312156126d3576126d26121e7565b5b60006126e18482850161239f565b91505092915050565b60008060408385031215612701576127006121e7565b5b600061270f8582860161239f565b92505060206127208582860161239f565b9150509250929050565b600080600080600080600060e0888a031215612749576127486121e7565b5b60006127578a828b0161239f565b97505060206127688a828b0161239f565b96505060406127798a828b01612212565b955050606061278a8a828b01612212565b945050608061279b8a828b01612212565b93505060a06127ac8a828b0161239f565b92505060c06127bd8a828b01612212565b91505092959891949750929550565b60006040820190506127e1600083018561227a565b6127ee602083018461227a565b9392505050565b600080600080600080600080610100898b031215612816576128156121e7565b5b60006128248b828c0161239f565b98505060206128358b828c0161239f565b97505060406128468b828c01612212565b96505060606128578b828c01612212565b95505060806128688b828c01612212565b94505060a06128798b828c01612212565b93505060c061288a8b828c0161239f565b92505060e061289b8b828c01612212565b9150509295985092959890939650565b60006060820190506128c0600083018661227a565b6128cd602083018561227a565b6128da604083018461227a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061291c826121f1565b9150612927836121f1565b9250828202612935816121f1565b9150828204841483151761294c5761294b6128e2565b5b5092915050565b600061295e826121f1565b9150612969836121f1565b9250828201905080821115612981576129806128e2565b5b92915050565b7f4e6f206469766973696f6e000000000000000000000000000000000000000000600082015250565b60006129bd600b836122af565b91506129c882612987565b602082019050919050565b600060208201905081810360008301526129ec816129b0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612a2d826121f1565b9150612a38836121f1565b925082612a4857612a476129f3565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612a9a57607f821691505b602082108103612aad57612aac612a53565b5b50919050565b7f446561646c696e65207061737365640000000000000000000000000000000000600082015250565b6000612ae9600f836122af565b9150612af482612ab3565b602082019050919050565b60006020820190508181036000830152612b1881612adc565b9050919050565b7f496e76616c696420706174680000000000000000000000000000000000000000600082015250565b6000612b55600c836122af565b9150612b6082612b1f565b602082019050919050565b60006020820190508181036000830152612b8481612b48565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e76616c696420746f6b656e73000000000000000000000000000000000000600082015250565b6000612bf0600e836122af565b9150612bfb82612bba565b602082019050919050565b60006020820190508181036000830152612c1f81612be3565b9050919050565b7f496e73756666696369656e74206f757470757420616d6f756e74000000000000600082015250565b6000612c5c601a836122af565b9150612c6782612c26565b602082019050919050565b60006020820190508181036000830152612c8b81612c4f565b9050919050565b600081519050612ca1816121fb565b92915050565b600060208284031215612cbd57612cbc6121e7565b5b6000612ccb84828501612c92565b91505092915050565b6000606082019050612ce9600083018661242a565b612cf6602083018561227a565b612d03604083018461227a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f496e73756666696369656e74204120616d6f756e740000000000000000000000600082015250565b6000612d706015836122af565b9150612d7b82612d3a565b602082019050919050565b60006020820190508181036000830152612d9f81612d63565b9050919050565b7f496e73756666696369656e74204220616d6f756e740000000000000000000000600082015250565b6000612ddc6015836122af565b9150612de782612da6565b602082019050919050565b60006020820190508181036000830152612e0b81612dcf565b9050919050565b6000606082019050612e27600083018661242a565b612e34602083018561242a565b612e41604083018461227a565b949350505050565b6000604082019050612e5e600083018561242a565b612e6b602083018461227a565b939250505056fea2646970667358221220d7a9e9089a931eddc180bd3efd03e68c2411182d4f29d1934a46b7e4337a180d64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x33C5 CODESIZE SUB DUP1 PUSH2 0x33C5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C69717569646974790000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C49510000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x43C JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x43C JUMP JUMPDEST POP POP POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x50E JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179 DUP3 PUSH2 0x14E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x189 DUP2 PUSH2 0x16E JUMP JUMPDEST DUP2 EQ PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A6 DUP2 PUSH2 0x180 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C3 JUMPI PUSH2 0x1C2 PUSH2 0x149 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D1 DUP6 DUP3 DUP7 ADD PUSH2 0x197 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E2 DUP6 DUP3 DUP7 ADD PUSH2 0x197 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x26D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x280 JUMPI PUSH2 0x27F PUSH2 0x226 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2E8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2AB JUMP JUMPDEST PUSH2 0x2F2 DUP7 DUP4 PUSH2 0x2AB JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x339 PUSH2 0x334 PUSH2 0x32F DUP5 PUSH2 0x30A JUMP JUMPDEST PUSH2 0x314 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x353 DUP4 PUSH2 0x31E JUMP JUMPDEST PUSH2 0x367 PUSH2 0x35F DUP3 PUSH2 0x340 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2B8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x37C PUSH2 0x36F JUMP JUMPDEST PUSH2 0x387 DUP2 DUP5 DUP5 PUSH2 0x34A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3AB JUMPI PUSH2 0x3A0 PUSH1 0x0 DUP3 PUSH2 0x374 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x38D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3F0 JUMPI PUSH2 0x3C1 DUP2 PUSH2 0x286 JUMP JUMPDEST PUSH2 0x3CA DUP5 PUSH2 0x29B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3D9 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3ED PUSH2 0x3E5 DUP6 PUSH2 0x29B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x38C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x413 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3F5 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42C DUP4 DUP4 PUSH2 0x402 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x445 DUP3 PUSH2 0x1EC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45E JUMPI PUSH2 0x45D PUSH2 0x1F7 JUMP JUMPDEST JUMPDEST PUSH2 0x468 DUP3 SLOAD PUSH2 0x255 JUMP JUMPDEST PUSH2 0x473 DUP3 DUP3 DUP6 PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x494 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x49E DUP6 DUP3 PUSH2 0x420 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x506 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4B4 DUP7 PUSH2 0x286 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4DC JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4B7 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4F9 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4F5 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x402 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2EA8 DUP1 PUSH2 0x51D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xBAA2ABDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBAA2ABDE EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xE8E33700 EQ PUSH2 0x36A JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0x2BB JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x38ED1739 EQ PUSH2 0x20D JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x54D50D4 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST PUSH2 0x39C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x2289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x42A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x2334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x23B4 JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x240F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x2289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x2454 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x240F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH2 0x53E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x24C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x2543 JUMP JUMPDEST PUSH2 0x547 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x269B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x8AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x2289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x275 PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x2334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x23B4 JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x240F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x26EA JUMP JUMPDEST PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x2289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x272A JUMP JUMPDEST PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP3 SWAP2 SWAP1 PUSH2 0x27CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH2 0xD8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x26EA JUMP JUMPDEST PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x2289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x384 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x27F5 JUMP JUMPDEST PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x393 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP6 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x2911 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 DUP7 PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x2953 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x400 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F7 SWAP1 PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x2911 JUMP JUMPDEST PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x2A22 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x439 SWAP1 PUSH2 0x2A82 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x465 SWAP1 PUSH2 0x2A82 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x487 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x495 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4C7 PUSH2 0x117C JUMP JUMPDEST SWAP1 POP PUSH2 0x4D4 DUP2 DUP6 DUP6 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x51A PUSH2 0x117C JUMP JUMPDEST SWAP1 POP PUSH2 0x527 DUP6 DUP3 DUP6 PUSH2 0x1196 JUMP JUMPDEST PUSH2 0x532 DUP6 DUP6 DUP6 PUSH2 0x122B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP TIMESTAMP DUP5 LT ISZERO PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP8 DUP8 SWAP1 POP EQ PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x617 SWAP1 PUSH2 0x2B6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x628 PUSH2 0x213F JUMP JUMPDEST DUP8 DUP8 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x63C JUMPI PUSH2 0x63B PUSH2 0x2B8B JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x26BD JUMP JUMPDEST DUP2 PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP8 DUP8 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x69C JUMPI PUSH2 0x69B PUSH2 0x2B8B JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6B1 SWAP2 SWAP1 PUSH2 0x26BD JUMP JUMPDEST DUP2 PUSH1 0x20 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP10 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x760 JUMPI POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x7D5 JUMPI POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x7D4 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80B SWAP1 PUSH2 0x2C06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x81D DUP2 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x834 DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x80 ADD MLOAD DUP4 PUSH1 0xA0 ADD MLOAD PUSH2 0x39C JUMP JUMPDEST DUP2 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP9 DUP2 PUSH1 0x60 ADD MLOAD LT ISZERO PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87B SWAP1 PUSH2 0x2C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x88E DUP2 DUP8 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x8A0 DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0x149C JUMP JUMPDEST SWAP4 POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x906 SWAP1 PUSH2 0x2A82 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x932 SWAP1 PUSH2 0x2A82 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x97F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x954 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x97F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x962 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x994 PUSH2 0x117C JUMP JUMPDEST SWAP1 POP PUSH2 0x9A1 DUP2 DUP6 DUP6 PUSH2 0x122B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA29 SWAP2 SWAP1 PUSH2 0x2CA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x2CA7 JUMP JUMPDEST SWAP1 POP DUP2 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0xABE SWAP2 SWAP1 PUSH2 0x2911 JUMP JUMPDEST PUSH2 0xAC8 SWAP2 SWAP1 PUSH2 0x2A22 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP TIMESTAMP DUP6 LT ISZERO PUSH2 0xB66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5D SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xBCC JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xC39 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xC38 JUMPI POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST PUSH2 0xC78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6F SWAP1 PUSH2 0x2C06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC80 PUSH2 0x21A1 JUMP JUMPDEST DUP12 DUP2 PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP11 DUP2 PUSH1 0x20 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0xD03 DUP11 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x1532 JUMP JUMPDEST DUP1 SWAP6 POP DUP2 SWAP7 POP POP POP PUSH2 0xD17 DUP6 DUP6 DUP12 DUP12 PUSH2 0x167A JUMP JUMPDEST PUSH2 0xD2E CALLER DUP9 DUP13 DUP9 DUP9 DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x1706 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1DC8BB69DF2B8E91FBDCBFCF93D951B3F0000F085A95FE3F7946D6161439245D DUP7 DUP7 DUP14 PUSH1 0x40 MLOAD PUSH2 0xD78 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP TIMESTAMP DUP7 LT ISZERO PUSH2 0xED1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC8 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xF37 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xFA4 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xFA3 JUMPI POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST PUSH2 0xFE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDA SWAP1 PUSH2 0x2C06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101E SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x103B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x105F SWAP2 SWAP1 PUSH2 0x2CA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109C SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10DD SWAP2 SWAP1 PUSH2 0x2CA7 JUMP JUMPDEST SWAP1 POP PUSH2 0x10ED DUP14 DUP14 DUP14 DUP14 DUP7 DUP7 PUSH2 0x176F JUMP JUMPDEST DUP1 SWAP8 POP DUP2 SWAP9 POP POP POP PUSH2 0x1102 DUP16 DUP16 DUP10 DUP10 DUP14 PUSH2 0x1875 JUMP JUMPDEST PUSH2 0x1116 DUP7 DUP9 PUSH2 0x1111 SWAP2 SWAP1 PUSH2 0x2911 JUMP JUMPDEST PUSH2 0x18F3 JUMP JUMPDEST SWAP5 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x64B83944E79C3CE8D4C297411DE637C3E102D064677AAC0C163976EBDCD6F50E DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1162 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1191 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1A90 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A2 DUP5 DUP5 PUSH2 0xDB5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1225 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1215 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1224 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1A90 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x129D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1294 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1306 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x131A DUP4 DUP4 DUP4 PUSH2 0x1C67 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135C SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1379 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x139D SWAP2 SWAP1 PUSH2 0x2CA7 JUMP JUMPDEST DUP2 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E3 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1400 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1424 SWAP2 SWAP1 PUSH2 0x2CA7 JUMP JUMPDEST DUP2 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x1465 CALLER ADDRESS DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E8C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1498 DUP2 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F0E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14B9 JUMPI PUSH2 0x14B8 PUSH2 0x2D0B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14E7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x14FF JUMPI PUSH2 0x14FE PUSH2 0x2B8B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1520 JUMPI PUSH2 0x151F PUSH2 0x2B8B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1570 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x158D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15B1 SWAP2 SWAP1 PUSH2 0x2CA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15EE SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x160B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x162F SWAP2 SWAP1 PUSH2 0x2CA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x163B PUSH2 0x505 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP10 PUSH2 0x164A SWAP2 SWAP1 PUSH2 0x2911 JUMP JUMPDEST PUSH2 0x1654 SWAP2 SWAP1 PUSH2 0x2A22 JUMP JUMPDEST DUP2 DUP4 DUP11 PUSH2 0x1661 SWAP2 SWAP1 PUSH2 0x2911 JUMP JUMPDEST PUSH2 0x166B SWAP2 SWAP1 PUSH2 0x2A22 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0x16BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B4 SWAP1 PUSH2 0x2D86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 LT ISZERO PUSH2 0x1700 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F7 SWAP1 PUSH2 0x2DF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1710 DUP8 DUP7 PUSH2 0x1F8D JUMP JUMPDEST PUSH2 0x173B DUP7 DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F0E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1766 DUP7 DUP5 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F0E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ DUP1 ISZERO PUSH2 0x1782 JUMPI POP PUSH1 0x0 DUP4 EQ JUMPDEST ISZERO PUSH2 0x1792 JUMPI DUP8 DUP8 SWAP2 POP SWAP2 POP PUSH2 0x186A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP11 PUSH2 0x17A1 SWAP2 SWAP1 PUSH2 0x2911 JUMP JUMPDEST PUSH2 0x17AB SWAP2 SWAP1 PUSH2 0x2A22 JUMP JUMPDEST SWAP1 POP DUP8 DUP2 GT PUSH2 0x1803 JUMPI DUP6 DUP2 LT ISZERO PUSH2 0x17F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17EE SWAP1 PUSH2 0x2DF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 DUP2 SWAP3 POP SWAP3 POP POP PUSH2 0x186A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP11 PUSH2 0x1812 SWAP2 SWAP1 PUSH2 0x2911 JUMP JUMPDEST PUSH2 0x181C SWAP2 SWAP1 PUSH2 0x2A22 JUMP JUMPDEST SWAP1 POP DUP8 DUP2 LT ISZERO PUSH2 0x1861 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1858 SWAP1 PUSH2 0x2D86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP10 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18A2 CALLER ADDRESS DUP6 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E8C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x18CF CALLER ADDRESS DUP5 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E8C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x18EC DUP2 PUSH2 0x18E7 DUP5 DUP7 PUSH2 0x18E2 SWAP2 SWAP1 PUSH2 0x2911 JUMP JUMPDEST PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x200F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 GT PUSH2 0x1905 JUMPI DUP2 SWAP1 POP PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH17 0x100000000000000000000000000000000 DUP3 LT PUSH2 0x1937 JUMPI PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x40 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x1956 JUMPI PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x20 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x1971 JUMPI PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x10 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x198A JUMPI PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x8 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x19A2 JUMPI PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x4 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x19B9 JUMPI PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x2 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x19C9 JUMPI PUSH1 0x1 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 MUL SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x19E5 JUMPI PUSH2 0x19E4 PUSH2 0x29F3 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x19FE JUMPI PUSH2 0x19FD PUSH2 0x29F3 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A17 JUMPI PUSH2 0x1A16 PUSH2 0x29F3 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A30 JUMPI PUSH2 0x1A2F PUSH2 0x29F3 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A49 JUMPI PUSH2 0x1A48 PUSH2 0x29F3 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A62 JUMPI PUSH2 0x1A61 PUSH2 0x29F3 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1A84 DUP2 DUP6 DUP2 PUSH2 0x1A7C JUMPI PUSH2 0x1A7B PUSH2 0x29F3 JUMP JUMPDEST JUMPDEST DIV DUP3 GT PUSH2 0x2091 JUMP JUMPDEST DUP2 SUB SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B02 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF9 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B74 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6B SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1C61 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1C58 SWAP2 SWAP1 PUSH2 0x2289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CB9 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1CAD SWAP2 SWAP1 PUSH2 0x2953 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1D45 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DD5 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E22 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1E7F SWAP2 SWAP1 PUSH2 0x2289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1F08 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1EC1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x209D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1F88 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1F41 SWAP3 SWAP2 SWAP1 PUSH2 0x2E49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x209D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FFF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF6 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x200B DUP3 PUSH1 0x0 DUP4 PUSH2 0x1C67 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2081 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2078 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x208D PUSH1 0x0 DUP4 DUP4 PUSH2 0x1C67 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x20C0 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0x20DB JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x20F7 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2139 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2130 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2204 DUP2 PUSH2 0x21F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x220F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2221 DUP2 PUSH2 0x21FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2240 JUMPI PUSH2 0x223F PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x224E DUP7 DUP3 DUP8 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x225F DUP7 DUP3 DUP8 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2270 DUP7 DUP3 DUP8 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2283 DUP2 PUSH2 0x21F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x229E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x227A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22DE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x22C3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2306 DUP3 PUSH2 0x22A4 JUMP JUMPDEST PUSH2 0x2310 DUP2 DUP6 PUSH2 0x22AF JUMP JUMPDEST SWAP4 POP PUSH2 0x2320 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x22C0 JUMP JUMPDEST PUSH2 0x2329 DUP2 PUSH2 0x22EA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x234E DUP2 DUP5 PUSH2 0x22FB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2381 DUP3 PUSH2 0x2356 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2391 DUP2 PUSH2 0x2376 JUMP JUMPDEST DUP2 EQ PUSH2 0x239C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23AE DUP2 PUSH2 0x2388 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23CB JUMPI PUSH2 0x23CA PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23D9 DUP6 DUP3 DUP7 ADD PUSH2 0x239F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23EA DUP6 DUP3 DUP7 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2409 DUP2 PUSH2 0x23F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2424 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2400 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2433 DUP2 PUSH2 0x2376 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x244E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x242A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x246D JUMPI PUSH2 0x246C PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x247B DUP7 DUP3 DUP8 ADD PUSH2 0x239F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x248C DUP7 DUP3 DUP8 ADD PUSH2 0x239F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x249D DUP7 DUP3 DUP8 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24BD DUP2 PUSH2 0x24A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2503 JUMPI PUSH2 0x2502 PUSH2 0x24DE JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2520 JUMPI PUSH2 0x251F PUSH2 0x24E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x253C JUMPI PUSH2 0x253B PUSH2 0x24E8 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2560 JUMPI PUSH2 0x255F PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x256E DUP10 DUP3 DUP11 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x257F DUP10 DUP3 DUP11 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25A0 JUMPI PUSH2 0x259F PUSH2 0x21EC JUMP JUMPDEST JUMPDEST PUSH2 0x25AC DUP10 DUP3 DUP11 ADD PUSH2 0x24ED JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x60 PUSH2 0x25BF DUP10 DUP3 DUP11 ADD PUSH2 0x239F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x25D0 DUP10 DUP3 DUP11 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2612 DUP2 PUSH2 0x21F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2624 DUP4 DUP4 PUSH2 0x2609 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2648 DUP3 PUSH2 0x25DD JUMP JUMPDEST PUSH2 0x2652 DUP2 DUP6 PUSH2 0x25E8 JUMP JUMPDEST SWAP4 POP PUSH2 0x265D DUP4 PUSH2 0x25F9 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x268E JUMPI DUP2 MLOAD PUSH2 0x2675 DUP9 DUP3 PUSH2 0x2618 JUMP JUMPDEST SWAP8 POP PUSH2 0x2680 DUP4 PUSH2 0x2630 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2661 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26B5 DUP2 DUP5 PUSH2 0x263D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26D3 JUMPI PUSH2 0x26D2 PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26E1 DUP5 DUP3 DUP6 ADD PUSH2 0x239F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2701 JUMPI PUSH2 0x2700 PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x270F DUP6 DUP3 DUP7 ADD PUSH2 0x239F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2720 DUP6 DUP3 DUP7 ADD PUSH2 0x239F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2749 JUMPI PUSH2 0x2748 PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2757 DUP11 DUP3 DUP12 ADD PUSH2 0x239F JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2768 DUP11 DUP3 DUP12 ADD PUSH2 0x239F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2779 DUP11 DUP3 DUP12 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x278A DUP11 DUP3 DUP12 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x279B DUP11 DUP3 DUP12 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x27AC DUP11 DUP3 DUP12 ADD PUSH2 0x239F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x27BD DUP11 DUP3 DUP12 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x27E1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x27EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x227A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2816 JUMPI PUSH2 0x2815 PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2824 DUP12 DUP3 DUP13 ADD PUSH2 0x239F JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x2835 DUP12 DUP3 DUP13 ADD PUSH2 0x239F JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x2846 DUP12 DUP3 DUP13 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x2857 DUP12 DUP3 DUP13 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x2868 DUP12 DUP3 DUP13 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x2879 DUP12 DUP3 DUP13 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x288A DUP12 DUP3 DUP13 ADD PUSH2 0x239F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x289B DUP12 DUP3 DUP13 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x28C0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x28CD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x28DA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x227A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x291C DUP3 PUSH2 0x21F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2927 DUP4 PUSH2 0x21F1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2935 DUP2 PUSH2 0x21F1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x294C JUMPI PUSH2 0x294B PUSH2 0x28E2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295E DUP3 PUSH2 0x21F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2969 DUP4 PUSH2 0x21F1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2981 JUMPI PUSH2 0x2980 PUSH2 0x28E2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F206469766973696F6E000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29BD PUSH1 0xB DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x29C8 DUP3 PUSH2 0x2987 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29EC DUP2 PUSH2 0x29B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2A2D DUP3 PUSH2 0x21F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A38 DUP4 PUSH2 0x21F1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2A48 JUMPI PUSH2 0x2A47 PUSH2 0x29F3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2A9A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2AAD JUMPI PUSH2 0x2AAC PUSH2 0x2A53 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x446561646C696E65207061737365640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AE9 PUSH1 0xF DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2AF4 DUP3 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B18 DUP2 PUSH2 0x2ADC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420706174680000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B55 PUSH1 0xC DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2B60 DUP3 PUSH2 0x2B1F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B84 DUP2 PUSH2 0x2B48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x496E76616C696420746F6B656E73000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF0 PUSH1 0xE DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2BFB DUP3 PUSH2 0x2BBA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C1F DUP2 PUSH2 0x2BE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206F757470757420616D6F756E74000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C5C PUSH1 0x1A DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2C67 DUP3 PUSH2 0x2C26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C8B DUP2 PUSH2 0x2C4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CA1 DUP2 PUSH2 0x21FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CBD JUMPI PUSH2 0x2CBC PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CCB DUP5 DUP3 DUP6 ADD PUSH2 0x2C92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2CE9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x242A JUMP JUMPDEST PUSH2 0x2CF6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x2D03 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x227A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x496E73756666696369656E74204120616D6F756E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D70 PUSH1 0x15 DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2D7B DUP3 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D9F DUP2 PUSH2 0x2D63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74204220616D6F756E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DDC PUSH1 0x15 DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2DE7 DUP3 PUSH2 0x2DA6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E0B DUP2 PUSH2 0x2DCF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2E27 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x242A JUMP JUMPDEST PUSH2 0x2E34 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x242A JUMP JUMPDEST PUSH2 0x2E41 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x227A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E5E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x242A JUMP JUMPDEST PUSH2 0x2E6B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x227A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0xA9 0xE9 ADDMOD SWAP11 SWAP4 0x1E 0xDD 0xC1 DUP1 0xBD RETURNDATACOPY REVERT SUB 0xE6 DUP13 0x24 GT XOR 0x2D 0x4F 0x29 0xD1 SWAP4 BLOBBASEFEE CHAINID 0xB7 0xE4 CALLER PUSH27 0x180D64736F6C634300081C00330000000000000000000000000000 ","sourceMap":"530:19891:14:-:0;;;3689:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1582:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;3780:7:14::1;3771:6;;:16;;;;;;;;;;;;;;;;;;3806:7;3797:6;;:16;;;;;;;;;;;;;;;;;;3689:131:::0;;530:19891;;88:117:17;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;530:19891:14:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_780":{"entryPoint":4484,"id":780,"parameterSlots":3,"returnSlots":0},"@_approve_840":{"entryPoint":6800,"id":840,"parameterSlots":4,"returnSlots":0},"@_burn_762":{"entryPoint":8077,"id":762,"parameterSlots":2,"returnSlots":0},"@_calculateAmounts_5452":{"entryPoint":5426,"id":5452,"parameterSlots":3,"returnSlots":2},"@_calculateOptimalAmounts_5227":{"entryPoint":5999,"id":5227,"parameterSlots":6,"returnSlots":2},"@_calculateReserves_5690":{"entryPoint":4895,"id":5690,"parameterSlots":1,"returnSlots":0},"@_callOptionalReturn_1415":{"entryPoint":8349,"id":1415,"parameterSlots":2,"returnSlots":0},"@_executeDeposit_5278":{"entryPoint":6261,"id":5278,"parameterSlots":5,"returnSlots":0},"@_executeRemoveLiquidity_5519":{"entryPoint":5894,"id":5519,"parameterSlots":7,"returnSlots":0},"@_executeSwap_5725":{"entryPoint":5168,"id":5725,"parameterSlots":2,"returnSlots":0},"@_mint_729":{"entryPoint":8207,"id":729,"parameterSlots":2,"returnSlots":0},"@_msgSender_1469":{"entryPoint":4476,"id":1469,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_888":{"entryPoint":4502,"id":888,"parameterSlots":3,"returnSlots":0},"@_transfer_619":{"entryPoint":4651,"id":619,"parameterSlots":3,"returnSlots":0},"@_update_696":{"entryPoint":7271,"id":696,"parameterSlots":3,"returnSlots":0},"@_validateAmounts_5479":{"entryPoint":5754,"id":5479,"parameterSlots":4,"returnSlots":0},"@addLiquidity_5148":{"entryPoint":3644,"id":5148,"parameterSlots":8,"returnSlots":3},"@allowance_516":{"entryPoint":3509,"id":516,"parameterSlots":2,"returnSlots":1},"@approve_540":{"entryPoint":1212,"id":540,"parameterSlots":2,"returnSlots":1},"@balanceOf_475":{"entryPoint":2223,"id":475,"parameterSlots":1,"returnSlots":1},"@createAmountsArray_5759":{"entryPoint":5276,"id":5759,"parameterSlots":2,"returnSlots":1},"@decimals_453":{"entryPoint":1342,"id":453,"parameterSlots":0,"returnSlots":1},"@getAmountOut_5844":{"entryPoint":924,"id":5844,"parameterSlots":3,"returnSlots":1},"@getPrice_5803":{"entryPoint":2476,"id":5803,"parameterSlots":2,"returnSlots":1},"@name_435":{"entryPoint":1066,"id":435,"parameterSlots":0,"returnSlots":1},"@removeLiquidity_5394":{"entryPoint":2770,"id":5394,"parameterSlots":7,"returnSlots":2},"@safeTransferFrom_1065":{"entryPoint":7820,"id":1065,"parameterSlots":4,"returnSlots":0},"@safeTransfer_1038":{"entryPoint":7950,"id":1038,"parameterSlots":3,"returnSlots":0},"@sqrt_2716":{"entryPoint":6387,"id":2716,"parameterSlots":1,"returnSlots":1},"@swapExactTokensForTokens_5652":{"entryPoint":1351,"id":5652,"parameterSlots":6,"returnSlots":1},"@symbol_444":{"entryPoint":2295,"id":444,"parameterSlots":0,"returnSlots":1},"@toUint_4936":{"entryPoint":8337,"id":4936,"parameterSlots":1,"returnSlots":1},"@token0_4956":{"entryPoint":1247,"id":4956,"parameterSlots":0,"returnSlots":0},"@token1_4959":{"entryPoint":3471,"id":4959,"parameterSlots":0,"returnSlots":0},"@totalSupply_462":{"entryPoint":1285,"id":462,"parameterSlots":0,"returnSlots":1},"@transferFrom_572":{"entryPoint":1295,"id":572,"parameterSlots":3,"returnSlots":1},"@transfer_499":{"entryPoint":2441,"id":499,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":9119,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":9453,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":8722,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":11410,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9917,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9962,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":9300,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256":{"entryPoint":10026,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256":{"entryPoint":10229,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":9140,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":11431,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256":{"entryPoint":9539,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint256t_uint256t_uint256":{"entryPoint":8743,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":9752,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9258,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":9789,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":9216,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":8955,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3_to_t_string_memory_ptr_fromStack":{"entryPoint":11235,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5d6e3e7a778f04de2588734c091c00112253879305eae6cf8201e2362b43fd0d_to_t_string_memory_ptr_fromStack":{"entryPoint":11619,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack":{"entryPoint":11343,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6eaf91a30795816d7b5ab342a2ebdd69fbc6fb670d48889a575f3f685dfb42c8_to_t_string_memory_ptr_fromStack":{"entryPoint":11080,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7956b12eed2c2f66e7d911209e39ae880dbb4cb35c0044f27817de99463b5f8a_to_t_string_memory_ptr_fromStack":{"entryPoint":11727,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f_to_t_string_memory_ptr_fromStack":{"entryPoint":10972,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ef454a3ea0c22f8d07b6c481320b7d1deed66223e2a6ddc7d2fc84c6da989b8d_to_t_string_memory_ptr_fromStack":{"entryPoint":10672,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":9737,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8826,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":9396,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9273,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":11794,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":11849,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11476,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9883,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":9231,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9012,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11270,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d6e3e7a778f04de2588734c091c00112253879305eae6cf8201e2362b43fd0d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11654,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11378,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6eaf91a30795816d7b5ab342a2ebdd69fbc6fb670d48889a575f3f685dfb42c8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11115,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7956b12eed2c2f66e7d911209e39ae880dbb4cb35c0044f27817de99463b5f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11762,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11007,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ef454a3ea0c22f8d07b6c481320b7d1deed66223e2a6ddc7d2fc84c6da989b8d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10707,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8841,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":10188,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":10411,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":9411,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9721,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9693,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":8868,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9776,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":9704,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":8879,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10579,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":10786,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":10513,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":9078,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":9204,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":9046,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8689,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":9383,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":8896,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":10882,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":10466,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":10739,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":10835,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":11147,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":11531,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":9443,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":9438,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":9448,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8684,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8679,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8938,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3":{"entryPoint":11194,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5d6e3e7a778f04de2588734c091c00112253879305eae6cf8201e2362b43fd0d":{"entryPoint":11578,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90":{"entryPoint":11302,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6eaf91a30795816d7b5ab342a2ebdd69fbc6fb670d48889a575f3f685dfb42c8":{"entryPoint":11039,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7956b12eed2c2f66e7d911209e39ae880dbb4cb35c0044f27817de99463b5f8a":{"entryPoint":11686,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f":{"entryPoint":10931,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ef454a3ea0c22f8d07b6c481320b7d1deed66223e2a6ddc7d2fc84c6da989b8d":{"entryPoint":10631,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":9096,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8699,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:24705:17","nodeType":"YulBlock","src":"0:24705:17","statements":[{"body":{"nativeSrc":"47:35:17","nodeType":"YulBlock","src":"47:35:17","statements":[{"nativeSrc":"57:19:17","nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:17","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:17","nodeType":"YulIdentifier","src":"67:5:17"},"nativeSrc":"67:9:17","nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:17","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:17","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:17","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nativeSrc":"177:28:17","nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:17","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:17","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:17","nodeType":"YulIdentifier","src":"187:6:17"},"nativeSrc":"187:12:17","nodeType":"YulFunctionCall","src":"187:12:17"},"nativeSrc":"187:12:17","nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:17","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nativeSrc":"300:28:17","nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:17","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:17","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:17","nodeType":"YulIdentifier","src":"310:6:17"},"nativeSrc":"310:12:17","nodeType":"YulFunctionCall","src":"310:12:17"},"nativeSrc":"310:12:17","nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:17","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nativeSrc":"379:32:17","nodeType":"YulBlock","src":"379:32:17","statements":[{"nativeSrc":"389:16:17","nodeType":"YulAssignment","src":"389:16:17","value":{"name":"value","nativeSrc":"400:5:17","nodeType":"YulIdentifier","src":"400:5:17"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:17","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_uint256","nativeSrc":"334:77:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:17","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:17","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:77:17"},{"body":{"nativeSrc":"460:79:17","nodeType":"YulBlock","src":"460:79:17","statements":[{"body":{"nativeSrc":"517:16:17","nodeType":"YulBlock","src":"517:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"526:1:17","nodeType":"YulLiteral","src":"526:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"529:1:17","nodeType":"YulLiteral","src":"529:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"519:6:17","nodeType":"YulIdentifier","src":"519:6:17"},"nativeSrc":"519:12:17","nodeType":"YulFunctionCall","src":"519:12:17"},"nativeSrc":"519:12:17","nodeType":"YulExpressionStatement","src":"519:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"483:5:17","nodeType":"YulIdentifier","src":"483:5:17"},{"arguments":[{"name":"value","nativeSrc":"508:5:17","nodeType":"YulIdentifier","src":"508:5:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"490:17:17","nodeType":"YulIdentifier","src":"490:17:17"},"nativeSrc":"490:24:17","nodeType":"YulFunctionCall","src":"490:24:17"}],"functionName":{"name":"eq","nativeSrc":"480:2:17","nodeType":"YulIdentifier","src":"480:2:17"},"nativeSrc":"480:35:17","nodeType":"YulFunctionCall","src":"480:35:17"}],"functionName":{"name":"iszero","nativeSrc":"473:6:17","nodeType":"YulIdentifier","src":"473:6:17"},"nativeSrc":"473:43:17","nodeType":"YulFunctionCall","src":"473:43:17"},"nativeSrc":"470:63:17","nodeType":"YulIf","src":"470:63:17"}]},"name":"validator_revert_t_uint256","nativeSrc":"417:122:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"453:5:17","nodeType":"YulTypedName","src":"453:5:17","type":""}],"src":"417:122:17"},{"body":{"nativeSrc":"597:87:17","nodeType":"YulBlock","src":"597:87:17","statements":[{"nativeSrc":"607:29:17","nodeType":"YulAssignment","src":"607:29:17","value":{"arguments":[{"name":"offset","nativeSrc":"629:6:17","nodeType":"YulIdentifier","src":"629:6:17"}],"functionName":{"name":"calldataload","nativeSrc":"616:12:17","nodeType":"YulIdentifier","src":"616:12:17"},"nativeSrc":"616:20:17","nodeType":"YulFunctionCall","src":"616:20:17"},"variableNames":[{"name":"value","nativeSrc":"607:5:17","nodeType":"YulIdentifier","src":"607:5:17"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"672:5:17","nodeType":"YulIdentifier","src":"672:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"645:26:17","nodeType":"YulIdentifier","src":"645:26:17"},"nativeSrc":"645:33:17","nodeType":"YulFunctionCall","src":"645:33:17"},"nativeSrc":"645:33:17","nodeType":"YulExpressionStatement","src":"645:33:17"}]},"name":"abi_decode_t_uint256","nativeSrc":"545:139:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"575:6:17","nodeType":"YulTypedName","src":"575:6:17","type":""},{"name":"end","nativeSrc":"583:3:17","nodeType":"YulTypedName","src":"583:3:17","type":""}],"returnVariables":[{"name":"value","nativeSrc":"591:5:17","nodeType":"YulTypedName","src":"591:5:17","type":""}],"src":"545:139:17"},{"body":{"nativeSrc":"790:519:17","nodeType":"YulBlock","src":"790:519:17","statements":[{"body":{"nativeSrc":"836:83:17","nodeType":"YulBlock","src":"836:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"838:77:17","nodeType":"YulIdentifier","src":"838:77:17"},"nativeSrc":"838:79:17","nodeType":"YulFunctionCall","src":"838:79:17"},"nativeSrc":"838:79:17","nodeType":"YulExpressionStatement","src":"838:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"811:7:17","nodeType":"YulIdentifier","src":"811:7:17"},{"name":"headStart","nativeSrc":"820:9:17","nodeType":"YulIdentifier","src":"820:9:17"}],"functionName":{"name":"sub","nativeSrc":"807:3:17","nodeType":"YulIdentifier","src":"807:3:17"},"nativeSrc":"807:23:17","nodeType":"YulFunctionCall","src":"807:23:17"},{"kind":"number","nativeSrc":"832:2:17","nodeType":"YulLiteral","src":"832:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"803:3:17","nodeType":"YulIdentifier","src":"803:3:17"},"nativeSrc":"803:32:17","nodeType":"YulFunctionCall","src":"803:32:17"},"nativeSrc":"800:119:17","nodeType":"YulIf","src":"800:119:17"},{"nativeSrc":"929:117:17","nodeType":"YulBlock","src":"929:117:17","statements":[{"nativeSrc":"944:15:17","nodeType":"YulVariableDeclaration","src":"944:15:17","value":{"kind":"number","nativeSrc":"958:1:17","nodeType":"YulLiteral","src":"958:1:17","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"948:6:17","nodeType":"YulTypedName","src":"948:6:17","type":""}]},{"nativeSrc":"973:63:17","nodeType":"YulAssignment","src":"973:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1008:9:17","nodeType":"YulIdentifier","src":"1008:9:17"},{"name":"offset","nativeSrc":"1019:6:17","nodeType":"YulIdentifier","src":"1019:6:17"}],"functionName":{"name":"add","nativeSrc":"1004:3:17","nodeType":"YulIdentifier","src":"1004:3:17"},"nativeSrc":"1004:22:17","nodeType":"YulFunctionCall","src":"1004:22:17"},{"name":"dataEnd","nativeSrc":"1028:7:17","nodeType":"YulIdentifier","src":"1028:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"983:20:17","nodeType":"YulIdentifier","src":"983:20:17"},"nativeSrc":"983:53:17","nodeType":"YulFunctionCall","src":"983:53:17"},"variableNames":[{"name":"value0","nativeSrc":"973:6:17","nodeType":"YulIdentifier","src":"973:6:17"}]}]},{"nativeSrc":"1056:118:17","nodeType":"YulBlock","src":"1056:118:17","statements":[{"nativeSrc":"1071:16:17","nodeType":"YulVariableDeclaration","src":"1071:16:17","value":{"kind":"number","nativeSrc":"1085:2:17","nodeType":"YulLiteral","src":"1085:2:17","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1075:6:17","nodeType":"YulTypedName","src":"1075:6:17","type":""}]},{"nativeSrc":"1101:63:17","nodeType":"YulAssignment","src":"1101:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1136:9:17","nodeType":"YulIdentifier","src":"1136:9:17"},{"name":"offset","nativeSrc":"1147:6:17","nodeType":"YulIdentifier","src":"1147:6:17"}],"functionName":{"name":"add","nativeSrc":"1132:3:17","nodeType":"YulIdentifier","src":"1132:3:17"},"nativeSrc":"1132:22:17","nodeType":"YulFunctionCall","src":"1132:22:17"},{"name":"dataEnd","nativeSrc":"1156:7:17","nodeType":"YulIdentifier","src":"1156:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1111:20:17","nodeType":"YulIdentifier","src":"1111:20:17"},"nativeSrc":"1111:53:17","nodeType":"YulFunctionCall","src":"1111:53:17"},"variableNames":[{"name":"value1","nativeSrc":"1101:6:17","nodeType":"YulIdentifier","src":"1101:6:17"}]}]},{"nativeSrc":"1184:118:17","nodeType":"YulBlock","src":"1184:118:17","statements":[{"nativeSrc":"1199:16:17","nodeType":"YulVariableDeclaration","src":"1199:16:17","value":{"kind":"number","nativeSrc":"1213:2:17","nodeType":"YulLiteral","src":"1213:2:17","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"1203:6:17","nodeType":"YulTypedName","src":"1203:6:17","type":""}]},{"nativeSrc":"1229:63:17","nodeType":"YulAssignment","src":"1229:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1264:9:17","nodeType":"YulIdentifier","src":"1264:9:17"},{"name":"offset","nativeSrc":"1275:6:17","nodeType":"YulIdentifier","src":"1275:6:17"}],"functionName":{"name":"add","nativeSrc":"1260:3:17","nodeType":"YulIdentifier","src":"1260:3:17"},"nativeSrc":"1260:22:17","nodeType":"YulFunctionCall","src":"1260:22:17"},{"name":"dataEnd","nativeSrc":"1284:7:17","nodeType":"YulIdentifier","src":"1284:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1239:20:17","nodeType":"YulIdentifier","src":"1239:20:17"},"nativeSrc":"1239:53:17","nodeType":"YulFunctionCall","src":"1239:53:17"},"variableNames":[{"name":"value2","nativeSrc":"1229:6:17","nodeType":"YulIdentifier","src":"1229:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256","nativeSrc":"690:619:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"744:9:17","nodeType":"YulTypedName","src":"744:9:17","type":""},{"name":"dataEnd","nativeSrc":"755:7:17","nodeType":"YulTypedName","src":"755:7:17","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"767:6:17","nodeType":"YulTypedName","src":"767:6:17","type":""},{"name":"value1","nativeSrc":"775:6:17","nodeType":"YulTypedName","src":"775:6:17","type":""},{"name":"value2","nativeSrc":"783:6:17","nodeType":"YulTypedName","src":"783:6:17","type":""}],"src":"690:619:17"},{"body":{"nativeSrc":"1380:53:17","nodeType":"YulBlock","src":"1380:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1397:3:17","nodeType":"YulIdentifier","src":"1397:3:17"},{"arguments":[{"name":"value","nativeSrc":"1420:5:17","nodeType":"YulIdentifier","src":"1420:5:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1402:17:17","nodeType":"YulIdentifier","src":"1402:17:17"},"nativeSrc":"1402:24:17","nodeType":"YulFunctionCall","src":"1402:24:17"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:17","nodeType":"YulIdentifier","src":"1390:6:17"},"nativeSrc":"1390:37:17","nodeType":"YulFunctionCall","src":"1390:37:17"},"nativeSrc":"1390:37:17","nodeType":"YulExpressionStatement","src":"1390:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1315:118:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1368:5:17","nodeType":"YulTypedName","src":"1368:5:17","type":""},{"name":"pos","nativeSrc":"1375:3:17","nodeType":"YulTypedName","src":"1375:3:17","type":""}],"src":"1315:118:17"},{"body":{"nativeSrc":"1537:124:17","nodeType":"YulBlock","src":"1537:124:17","statements":[{"nativeSrc":"1547:26:17","nodeType":"YulAssignment","src":"1547:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"1559:9:17","nodeType":"YulIdentifier","src":"1559:9:17"},{"kind":"number","nativeSrc":"1570:2:17","nodeType":"YulLiteral","src":"1570:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1555:3:17","nodeType":"YulIdentifier","src":"1555:3:17"},"nativeSrc":"1555:18:17","nodeType":"YulFunctionCall","src":"1555:18:17"},"variableNames":[{"name":"tail","nativeSrc":"1547:4:17","nodeType":"YulIdentifier","src":"1547:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1627:6:17","nodeType":"YulIdentifier","src":"1627:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"1640:9:17","nodeType":"YulIdentifier","src":"1640:9:17"},{"kind":"number","nativeSrc":"1651:1:17","nodeType":"YulLiteral","src":"1651:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1636:3:17","nodeType":"YulIdentifier","src":"1636:3:17"},"nativeSrc":"1636:17:17","nodeType":"YulFunctionCall","src":"1636:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1583:43:17","nodeType":"YulIdentifier","src":"1583:43:17"},"nativeSrc":"1583:71:17","nodeType":"YulFunctionCall","src":"1583:71:17"},"nativeSrc":"1583:71:17","nodeType":"YulExpressionStatement","src":"1583:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1439:222:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1509:9:17","nodeType":"YulTypedName","src":"1509:9:17","type":""},{"name":"value0","nativeSrc":"1521:6:17","nodeType":"YulTypedName","src":"1521:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1532:4:17","nodeType":"YulTypedName","src":"1532:4:17","type":""}],"src":"1439:222:17"},{"body":{"nativeSrc":"1726:40:17","nodeType":"YulBlock","src":"1726:40:17","statements":[{"nativeSrc":"1737:22:17","nodeType":"YulAssignment","src":"1737:22:17","value":{"arguments":[{"name":"value","nativeSrc":"1753:5:17","nodeType":"YulIdentifier","src":"1753:5:17"}],"functionName":{"name":"mload","nativeSrc":"1747:5:17","nodeType":"YulIdentifier","src":"1747:5:17"},"nativeSrc":"1747:12:17","nodeType":"YulFunctionCall","src":"1747:12:17"},"variableNames":[{"name":"length","nativeSrc":"1737:6:17","nodeType":"YulIdentifier","src":"1737:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1667:99:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1709:5:17","nodeType":"YulTypedName","src":"1709:5:17","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1719:6:17","nodeType":"YulTypedName","src":"1719:6:17","type":""}],"src":"1667:99:17"},{"body":{"nativeSrc":"1868:73:17","nodeType":"YulBlock","src":"1868:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1885:3:17","nodeType":"YulIdentifier","src":"1885:3:17"},{"name":"length","nativeSrc":"1890:6:17","nodeType":"YulIdentifier","src":"1890:6:17"}],"functionName":{"name":"mstore","nativeSrc":"1878:6:17","nodeType":"YulIdentifier","src":"1878:6:17"},"nativeSrc":"1878:19:17","nodeType":"YulFunctionCall","src":"1878:19:17"},"nativeSrc":"1878:19:17","nodeType":"YulExpressionStatement","src":"1878:19:17"},{"nativeSrc":"1906:29:17","nodeType":"YulAssignment","src":"1906:29:17","value":{"arguments":[{"name":"pos","nativeSrc":"1925:3:17","nodeType":"YulIdentifier","src":"1925:3:17"},{"kind":"number","nativeSrc":"1930:4:17","nodeType":"YulLiteral","src":"1930:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1921:3:17","nodeType":"YulIdentifier","src":"1921:3:17"},"nativeSrc":"1921:14:17","nodeType":"YulFunctionCall","src":"1921:14:17"},"variableNames":[{"name":"updated_pos","nativeSrc":"1906:11:17","nodeType":"YulIdentifier","src":"1906:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1772:169:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1840:3:17","nodeType":"YulTypedName","src":"1840:3:17","type":""},{"name":"length","nativeSrc":"1845:6:17","nodeType":"YulTypedName","src":"1845:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1856:11:17","nodeType":"YulTypedName","src":"1856:11:17","type":""}],"src":"1772:169:17"},{"body":{"nativeSrc":"2009:186:17","nodeType":"YulBlock","src":"2009:186:17","statements":[{"nativeSrc":"2020:10:17","nodeType":"YulVariableDeclaration","src":"2020:10:17","value":{"kind":"number","nativeSrc":"2029:1:17","nodeType":"YulLiteral","src":"2029:1:17","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2024:1:17","nodeType":"YulTypedName","src":"2024:1:17","type":""}]},{"body":{"nativeSrc":"2089:63:17","nodeType":"YulBlock","src":"2089:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2114:3:17","nodeType":"YulIdentifier","src":"2114:3:17"},{"name":"i","nativeSrc":"2119:1:17","nodeType":"YulIdentifier","src":"2119:1:17"}],"functionName":{"name":"add","nativeSrc":"2110:3:17","nodeType":"YulIdentifier","src":"2110:3:17"},"nativeSrc":"2110:11:17","nodeType":"YulFunctionCall","src":"2110:11:17"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2133:3:17","nodeType":"YulIdentifier","src":"2133:3:17"},{"name":"i","nativeSrc":"2138:1:17","nodeType":"YulIdentifier","src":"2138:1:17"}],"functionName":{"name":"add","nativeSrc":"2129:3:17","nodeType":"YulIdentifier","src":"2129:3:17"},"nativeSrc":"2129:11:17","nodeType":"YulFunctionCall","src":"2129:11:17"}],"functionName":{"name":"mload","nativeSrc":"2123:5:17","nodeType":"YulIdentifier","src":"2123:5:17"},"nativeSrc":"2123:18:17","nodeType":"YulFunctionCall","src":"2123:18:17"}],"functionName":{"name":"mstore","nativeSrc":"2103:6:17","nodeType":"YulIdentifier","src":"2103:6:17"},"nativeSrc":"2103:39:17","nodeType":"YulFunctionCall","src":"2103:39:17"},"nativeSrc":"2103:39:17","nodeType":"YulExpressionStatement","src":"2103:39:17"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2050:1:17","nodeType":"YulIdentifier","src":"2050:1:17"},{"name":"length","nativeSrc":"2053:6:17","nodeType":"YulIdentifier","src":"2053:6:17"}],"functionName":{"name":"lt","nativeSrc":"2047:2:17","nodeType":"YulIdentifier","src":"2047:2:17"},"nativeSrc":"2047:13:17","nodeType":"YulFunctionCall","src":"2047:13:17"},"nativeSrc":"2039:113:17","nodeType":"YulForLoop","post":{"nativeSrc":"2061:19:17","nodeType":"YulBlock","src":"2061:19:17","statements":[{"nativeSrc":"2063:15:17","nodeType":"YulAssignment","src":"2063:15:17","value":{"arguments":[{"name":"i","nativeSrc":"2072:1:17","nodeType":"YulIdentifier","src":"2072:1:17"},{"kind":"number","nativeSrc":"2075:2:17","nodeType":"YulLiteral","src":"2075:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2068:3:17","nodeType":"YulIdentifier","src":"2068:3:17"},"nativeSrc":"2068:10:17","nodeType":"YulFunctionCall","src":"2068:10:17"},"variableNames":[{"name":"i","nativeSrc":"2063:1:17","nodeType":"YulIdentifier","src":"2063:1:17"}]}]},"pre":{"nativeSrc":"2043:3:17","nodeType":"YulBlock","src":"2043:3:17","statements":[]},"src":"2039:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2172:3:17","nodeType":"YulIdentifier","src":"2172:3:17"},{"name":"length","nativeSrc":"2177:6:17","nodeType":"YulIdentifier","src":"2177:6:17"}],"functionName":{"name":"add","nativeSrc":"2168:3:17","nodeType":"YulIdentifier","src":"2168:3:17"},"nativeSrc":"2168:16:17","nodeType":"YulFunctionCall","src":"2168:16:17"},{"kind":"number","nativeSrc":"2186:1:17","nodeType":"YulLiteral","src":"2186:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2161:6:17","nodeType":"YulIdentifier","src":"2161:6:17"},"nativeSrc":"2161:27:17","nodeType":"YulFunctionCall","src":"2161:27:17"},"nativeSrc":"2161:27:17","nodeType":"YulExpressionStatement","src":"2161:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1947:248:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1991:3:17","nodeType":"YulTypedName","src":"1991:3:17","type":""},{"name":"dst","nativeSrc":"1996:3:17","nodeType":"YulTypedName","src":"1996:3:17","type":""},{"name":"length","nativeSrc":"2001:6:17","nodeType":"YulTypedName","src":"2001:6:17","type":""}],"src":"1947:248:17"},{"body":{"nativeSrc":"2249:54:17","nodeType":"YulBlock","src":"2249:54:17","statements":[{"nativeSrc":"2259:38:17","nodeType":"YulAssignment","src":"2259:38:17","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2277:5:17","nodeType":"YulIdentifier","src":"2277:5:17"},{"kind":"number","nativeSrc":"2284:2:17","nodeType":"YulLiteral","src":"2284:2:17","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2273:3:17","nodeType":"YulIdentifier","src":"2273:3:17"},"nativeSrc":"2273:14:17","nodeType":"YulFunctionCall","src":"2273:14:17"},{"arguments":[{"kind":"number","nativeSrc":"2293:2:17","nodeType":"YulLiteral","src":"2293:2:17","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2289:3:17","nodeType":"YulIdentifier","src":"2289:3:17"},"nativeSrc":"2289:7:17","nodeType":"YulFunctionCall","src":"2289:7:17"}],"functionName":{"name":"and","nativeSrc":"2269:3:17","nodeType":"YulIdentifier","src":"2269:3:17"},"nativeSrc":"2269:28:17","nodeType":"YulFunctionCall","src":"2269:28:17"},"variableNames":[{"name":"result","nativeSrc":"2259:6:17","nodeType":"YulIdentifier","src":"2259:6:17"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2201:102:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2232:5:17","nodeType":"YulTypedName","src":"2232:5:17","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2242:6:17","nodeType":"YulTypedName","src":"2242:6:17","type":""}],"src":"2201:102:17"},{"body":{"nativeSrc":"2401:285:17","nodeType":"YulBlock","src":"2401:285:17","statements":[{"nativeSrc":"2411:53:17","nodeType":"YulVariableDeclaration","src":"2411:53:17","value":{"arguments":[{"name":"value","nativeSrc":"2458:5:17","nodeType":"YulIdentifier","src":"2458:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2425:32:17","nodeType":"YulIdentifier","src":"2425:32:17"},"nativeSrc":"2425:39:17","nodeType":"YulFunctionCall","src":"2425:39:17"},"variables":[{"name":"length","nativeSrc":"2415:6:17","nodeType":"YulTypedName","src":"2415:6:17","type":""}]},{"nativeSrc":"2473:78:17","nodeType":"YulAssignment","src":"2473:78:17","value":{"arguments":[{"name":"pos","nativeSrc":"2539:3:17","nodeType":"YulIdentifier","src":"2539:3:17"},{"name":"length","nativeSrc":"2544:6:17","nodeType":"YulIdentifier","src":"2544:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2480:58:17","nodeType":"YulIdentifier","src":"2480:58:17"},"nativeSrc":"2480:71:17","nodeType":"YulFunctionCall","src":"2480:71:17"},"variableNames":[{"name":"pos","nativeSrc":"2473:3:17","nodeType":"YulIdentifier","src":"2473:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2599:5:17","nodeType":"YulIdentifier","src":"2599:5:17"},{"kind":"number","nativeSrc":"2606:4:17","nodeType":"YulLiteral","src":"2606:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2595:3:17","nodeType":"YulIdentifier","src":"2595:3:17"},"nativeSrc":"2595:16:17","nodeType":"YulFunctionCall","src":"2595:16:17"},{"name":"pos","nativeSrc":"2613:3:17","nodeType":"YulIdentifier","src":"2613:3:17"},{"name":"length","nativeSrc":"2618:6:17","nodeType":"YulIdentifier","src":"2618:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2560:34:17","nodeType":"YulIdentifier","src":"2560:34:17"},"nativeSrc":"2560:65:17","nodeType":"YulFunctionCall","src":"2560:65:17"},"nativeSrc":"2560:65:17","nodeType":"YulExpressionStatement","src":"2560:65:17"},{"nativeSrc":"2634:46:17","nodeType":"YulAssignment","src":"2634:46:17","value":{"arguments":[{"name":"pos","nativeSrc":"2645:3:17","nodeType":"YulIdentifier","src":"2645:3:17"},{"arguments":[{"name":"length","nativeSrc":"2672:6:17","nodeType":"YulIdentifier","src":"2672:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2650:21:17","nodeType":"YulIdentifier","src":"2650:21:17"},"nativeSrc":"2650:29:17","nodeType":"YulFunctionCall","src":"2650:29:17"}],"functionName":{"name":"add","nativeSrc":"2641:3:17","nodeType":"YulIdentifier","src":"2641:3:17"},"nativeSrc":"2641:39:17","nodeType":"YulFunctionCall","src":"2641:39:17"},"variableNames":[{"name":"end","nativeSrc":"2634:3:17","nodeType":"YulIdentifier","src":"2634:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2309:377:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2382:5:17","nodeType":"YulTypedName","src":"2382:5:17","type":""},{"name":"pos","nativeSrc":"2389:3:17","nodeType":"YulTypedName","src":"2389:3:17","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2397:3:17","nodeType":"YulTypedName","src":"2397:3:17","type":""}],"src":"2309:377:17"},{"body":{"nativeSrc":"2810:195:17","nodeType":"YulBlock","src":"2810:195:17","statements":[{"nativeSrc":"2820:26:17","nodeType":"YulAssignment","src":"2820:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"2832:9:17","nodeType":"YulIdentifier","src":"2832:9:17"},{"kind":"number","nativeSrc":"2843:2:17","nodeType":"YulLiteral","src":"2843:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2828:3:17","nodeType":"YulIdentifier","src":"2828:3:17"},"nativeSrc":"2828:18:17","nodeType":"YulFunctionCall","src":"2828:18:17"},"variableNames":[{"name":"tail","nativeSrc":"2820:4:17","nodeType":"YulIdentifier","src":"2820:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2867:9:17","nodeType":"YulIdentifier","src":"2867:9:17"},{"kind":"number","nativeSrc":"2878:1:17","nodeType":"YulLiteral","src":"2878:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2863:3:17","nodeType":"YulIdentifier","src":"2863:3:17"},"nativeSrc":"2863:17:17","nodeType":"YulFunctionCall","src":"2863:17:17"},{"arguments":[{"name":"tail","nativeSrc":"2886:4:17","nodeType":"YulIdentifier","src":"2886:4:17"},{"name":"headStart","nativeSrc":"2892:9:17","nodeType":"YulIdentifier","src":"2892:9:17"}],"functionName":{"name":"sub","nativeSrc":"2882:3:17","nodeType":"YulIdentifier","src":"2882:3:17"},"nativeSrc":"2882:20:17","nodeType":"YulFunctionCall","src":"2882:20:17"}],"functionName":{"name":"mstore","nativeSrc":"2856:6:17","nodeType":"YulIdentifier","src":"2856:6:17"},"nativeSrc":"2856:47:17","nodeType":"YulFunctionCall","src":"2856:47:17"},"nativeSrc":"2856:47:17","nodeType":"YulExpressionStatement","src":"2856:47:17"},{"nativeSrc":"2912:86:17","nodeType":"YulAssignment","src":"2912:86:17","value":{"arguments":[{"name":"value0","nativeSrc":"2984:6:17","nodeType":"YulIdentifier","src":"2984:6:17"},{"name":"tail","nativeSrc":"2993:4:17","nodeType":"YulIdentifier","src":"2993:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2920:63:17","nodeType":"YulIdentifier","src":"2920:63:17"},"nativeSrc":"2920:78:17","nodeType":"YulFunctionCall","src":"2920:78:17"},"variableNames":[{"name":"tail","nativeSrc":"2912:4:17","nodeType":"YulIdentifier","src":"2912:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2692:313:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2782:9:17","nodeType":"YulTypedName","src":"2782:9:17","type":""},{"name":"value0","nativeSrc":"2794:6:17","nodeType":"YulTypedName","src":"2794:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2805:4:17","nodeType":"YulTypedName","src":"2805:4:17","type":""}],"src":"2692:313:17"},{"body":{"nativeSrc":"3056:81:17","nodeType":"YulBlock","src":"3056:81:17","statements":[{"nativeSrc":"3066:65:17","nodeType":"YulAssignment","src":"3066:65:17","value":{"arguments":[{"name":"value","nativeSrc":"3081:5:17","nodeType":"YulIdentifier","src":"3081:5:17"},{"kind":"number","nativeSrc":"3088:42:17","nodeType":"YulLiteral","src":"3088:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3077:3:17","nodeType":"YulIdentifier","src":"3077:3:17"},"nativeSrc":"3077:54:17","nodeType":"YulFunctionCall","src":"3077:54:17"},"variableNames":[{"name":"cleaned","nativeSrc":"3066:7:17","nodeType":"YulIdentifier","src":"3066:7:17"}]}]},"name":"cleanup_t_uint160","nativeSrc":"3011:126:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3038:5:17","nodeType":"YulTypedName","src":"3038:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3048:7:17","nodeType":"YulTypedName","src":"3048:7:17","type":""}],"src":"3011:126:17"},{"body":{"nativeSrc":"3188:51:17","nodeType":"YulBlock","src":"3188:51:17","statements":[{"nativeSrc":"3198:35:17","nodeType":"YulAssignment","src":"3198:35:17","value":{"arguments":[{"name":"value","nativeSrc":"3227:5:17","nodeType":"YulIdentifier","src":"3227:5:17"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3209:17:17","nodeType":"YulIdentifier","src":"3209:17:17"},"nativeSrc":"3209:24:17","nodeType":"YulFunctionCall","src":"3209:24:17"},"variableNames":[{"name":"cleaned","nativeSrc":"3198:7:17","nodeType":"YulIdentifier","src":"3198:7:17"}]}]},"name":"cleanup_t_address","nativeSrc":"3143:96:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3170:5:17","nodeType":"YulTypedName","src":"3170:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3180:7:17","nodeType":"YulTypedName","src":"3180:7:17","type":""}],"src":"3143:96:17"},{"body":{"nativeSrc":"3288:79:17","nodeType":"YulBlock","src":"3288:79:17","statements":[{"body":{"nativeSrc":"3345:16:17","nodeType":"YulBlock","src":"3345:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3354:1:17","nodeType":"YulLiteral","src":"3354:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"3357:1:17","nodeType":"YulLiteral","src":"3357:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3347:6:17","nodeType":"YulIdentifier","src":"3347:6:17"},"nativeSrc":"3347:12:17","nodeType":"YulFunctionCall","src":"3347:12:17"},"nativeSrc":"3347:12:17","nodeType":"YulExpressionStatement","src":"3347:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3311:5:17","nodeType":"YulIdentifier","src":"3311:5:17"},{"arguments":[{"name":"value","nativeSrc":"3336:5:17","nodeType":"YulIdentifier","src":"3336:5:17"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3318:17:17","nodeType":"YulIdentifier","src":"3318:17:17"},"nativeSrc":"3318:24:17","nodeType":"YulFunctionCall","src":"3318:24:17"}],"functionName":{"name":"eq","nativeSrc":"3308:2:17","nodeType":"YulIdentifier","src":"3308:2:17"},"nativeSrc":"3308:35:17","nodeType":"YulFunctionCall","src":"3308:35:17"}],"functionName":{"name":"iszero","nativeSrc":"3301:6:17","nodeType":"YulIdentifier","src":"3301:6:17"},"nativeSrc":"3301:43:17","nodeType":"YulFunctionCall","src":"3301:43:17"},"nativeSrc":"3298:63:17","nodeType":"YulIf","src":"3298:63:17"}]},"name":"validator_revert_t_address","nativeSrc":"3245:122:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3281:5:17","nodeType":"YulTypedName","src":"3281:5:17","type":""}],"src":"3245:122:17"},{"body":{"nativeSrc":"3425:87:17","nodeType":"YulBlock","src":"3425:87:17","statements":[{"nativeSrc":"3435:29:17","nodeType":"YulAssignment","src":"3435:29:17","value":{"arguments":[{"name":"offset","nativeSrc":"3457:6:17","nodeType":"YulIdentifier","src":"3457:6:17"}],"functionName":{"name":"calldataload","nativeSrc":"3444:12:17","nodeType":"YulIdentifier","src":"3444:12:17"},"nativeSrc":"3444:20:17","nodeType":"YulFunctionCall","src":"3444:20:17"},"variableNames":[{"name":"value","nativeSrc":"3435:5:17","nodeType":"YulIdentifier","src":"3435:5:17"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3500:5:17","nodeType":"YulIdentifier","src":"3500:5:17"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"3473:26:17","nodeType":"YulIdentifier","src":"3473:26:17"},"nativeSrc":"3473:33:17","nodeType":"YulFunctionCall","src":"3473:33:17"},"nativeSrc":"3473:33:17","nodeType":"YulExpressionStatement","src":"3473:33:17"}]},"name":"abi_decode_t_address","nativeSrc":"3373:139:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3403:6:17","nodeType":"YulTypedName","src":"3403:6:17","type":""},{"name":"end","nativeSrc":"3411:3:17","nodeType":"YulTypedName","src":"3411:3:17","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3419:5:17","nodeType":"YulTypedName","src":"3419:5:17","type":""}],"src":"3373:139:17"},{"body":{"nativeSrc":"3601:391:17","nodeType":"YulBlock","src":"3601:391:17","statements":[{"body":{"nativeSrc":"3647:83:17","nodeType":"YulBlock","src":"3647:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3649:77:17","nodeType":"YulIdentifier","src":"3649:77:17"},"nativeSrc":"3649:79:17","nodeType":"YulFunctionCall","src":"3649:79:17"},"nativeSrc":"3649:79:17","nodeType":"YulExpressionStatement","src":"3649:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3622:7:17","nodeType":"YulIdentifier","src":"3622:7:17"},{"name":"headStart","nativeSrc":"3631:9:17","nodeType":"YulIdentifier","src":"3631:9:17"}],"functionName":{"name":"sub","nativeSrc":"3618:3:17","nodeType":"YulIdentifier","src":"3618:3:17"},"nativeSrc":"3618:23:17","nodeType":"YulFunctionCall","src":"3618:23:17"},{"kind":"number","nativeSrc":"3643:2:17","nodeType":"YulLiteral","src":"3643:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3614:3:17","nodeType":"YulIdentifier","src":"3614:3:17"},"nativeSrc":"3614:32:17","nodeType":"YulFunctionCall","src":"3614:32:17"},"nativeSrc":"3611:119:17","nodeType":"YulIf","src":"3611:119:17"},{"nativeSrc":"3740:117:17","nodeType":"YulBlock","src":"3740:117:17","statements":[{"nativeSrc":"3755:15:17","nodeType":"YulVariableDeclaration","src":"3755:15:17","value":{"kind":"number","nativeSrc":"3769:1:17","nodeType":"YulLiteral","src":"3769:1:17","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3759:6:17","nodeType":"YulTypedName","src":"3759:6:17","type":""}]},{"nativeSrc":"3784:63:17","nodeType":"YulAssignment","src":"3784:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3819:9:17","nodeType":"YulIdentifier","src":"3819:9:17"},{"name":"offset","nativeSrc":"3830:6:17","nodeType":"YulIdentifier","src":"3830:6:17"}],"functionName":{"name":"add","nativeSrc":"3815:3:17","nodeType":"YulIdentifier","src":"3815:3:17"},"nativeSrc":"3815:22:17","nodeType":"YulFunctionCall","src":"3815:22:17"},{"name":"dataEnd","nativeSrc":"3839:7:17","nodeType":"YulIdentifier","src":"3839:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3794:20:17","nodeType":"YulIdentifier","src":"3794:20:17"},"nativeSrc":"3794:53:17","nodeType":"YulFunctionCall","src":"3794:53:17"},"variableNames":[{"name":"value0","nativeSrc":"3784:6:17","nodeType":"YulIdentifier","src":"3784:6:17"}]}]},{"nativeSrc":"3867:118:17","nodeType":"YulBlock","src":"3867:118:17","statements":[{"nativeSrc":"3882:16:17","nodeType":"YulVariableDeclaration","src":"3882:16:17","value":{"kind":"number","nativeSrc":"3896:2:17","nodeType":"YulLiteral","src":"3896:2:17","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"3886:6:17","nodeType":"YulTypedName","src":"3886:6:17","type":""}]},{"nativeSrc":"3912:63:17","nodeType":"YulAssignment","src":"3912:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3947:9:17","nodeType":"YulIdentifier","src":"3947:9:17"},{"name":"offset","nativeSrc":"3958:6:17","nodeType":"YulIdentifier","src":"3958:6:17"}],"functionName":{"name":"add","nativeSrc":"3943:3:17","nodeType":"YulIdentifier","src":"3943:3:17"},"nativeSrc":"3943:22:17","nodeType":"YulFunctionCall","src":"3943:22:17"},{"name":"dataEnd","nativeSrc":"3967:7:17","nodeType":"YulIdentifier","src":"3967:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3922:20:17","nodeType":"YulIdentifier","src":"3922:20:17"},"nativeSrc":"3922:53:17","nodeType":"YulFunctionCall","src":"3922:53:17"},"variableNames":[{"name":"value1","nativeSrc":"3912:6:17","nodeType":"YulIdentifier","src":"3912:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"3518:474:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3563:9:17","nodeType":"YulTypedName","src":"3563:9:17","type":""},{"name":"dataEnd","nativeSrc":"3574:7:17","nodeType":"YulTypedName","src":"3574:7:17","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3586:6:17","nodeType":"YulTypedName","src":"3586:6:17","type":""},{"name":"value1","nativeSrc":"3594:6:17","nodeType":"YulTypedName","src":"3594:6:17","type":""}],"src":"3518:474:17"},{"body":{"nativeSrc":"4040:48:17","nodeType":"YulBlock","src":"4040:48:17","statements":[{"nativeSrc":"4050:32:17","nodeType":"YulAssignment","src":"4050:32:17","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4075:5:17","nodeType":"YulIdentifier","src":"4075:5:17"}],"functionName":{"name":"iszero","nativeSrc":"4068:6:17","nodeType":"YulIdentifier","src":"4068:6:17"},"nativeSrc":"4068:13:17","nodeType":"YulFunctionCall","src":"4068:13:17"}],"functionName":{"name":"iszero","nativeSrc":"4061:6:17","nodeType":"YulIdentifier","src":"4061:6:17"},"nativeSrc":"4061:21:17","nodeType":"YulFunctionCall","src":"4061:21:17"},"variableNames":[{"name":"cleaned","nativeSrc":"4050:7:17","nodeType":"YulIdentifier","src":"4050:7:17"}]}]},"name":"cleanup_t_bool","nativeSrc":"3998:90:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4022:5:17","nodeType":"YulTypedName","src":"4022:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4032:7:17","nodeType":"YulTypedName","src":"4032:7:17","type":""}],"src":"3998:90:17"},{"body":{"nativeSrc":"4153:50:17","nodeType":"YulBlock","src":"4153:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4170:3:17","nodeType":"YulIdentifier","src":"4170:3:17"},{"arguments":[{"name":"value","nativeSrc":"4190:5:17","nodeType":"YulIdentifier","src":"4190:5:17"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"4175:14:17","nodeType":"YulIdentifier","src":"4175:14:17"},"nativeSrc":"4175:21:17","nodeType":"YulFunctionCall","src":"4175:21:17"}],"functionName":{"name":"mstore","nativeSrc":"4163:6:17","nodeType":"YulIdentifier","src":"4163:6:17"},"nativeSrc":"4163:34:17","nodeType":"YulFunctionCall","src":"4163:34:17"},"nativeSrc":"4163:34:17","nodeType":"YulExpressionStatement","src":"4163:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"4094:109:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4141:5:17","nodeType":"YulTypedName","src":"4141:5:17","type":""},{"name":"pos","nativeSrc":"4148:3:17","nodeType":"YulTypedName","src":"4148:3:17","type":""}],"src":"4094:109:17"},{"body":{"nativeSrc":"4301:118:17","nodeType":"YulBlock","src":"4301:118:17","statements":[{"nativeSrc":"4311:26:17","nodeType":"YulAssignment","src":"4311:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"4323:9:17","nodeType":"YulIdentifier","src":"4323:9:17"},{"kind":"number","nativeSrc":"4334:2:17","nodeType":"YulLiteral","src":"4334:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4319:3:17","nodeType":"YulIdentifier","src":"4319:3:17"},"nativeSrc":"4319:18:17","nodeType":"YulFunctionCall","src":"4319:18:17"},"variableNames":[{"name":"tail","nativeSrc":"4311:4:17","nodeType":"YulIdentifier","src":"4311:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4385:6:17","nodeType":"YulIdentifier","src":"4385:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"4398:9:17","nodeType":"YulIdentifier","src":"4398:9:17"},{"kind":"number","nativeSrc":"4409:1:17","nodeType":"YulLiteral","src":"4409:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4394:3:17","nodeType":"YulIdentifier","src":"4394:3:17"},"nativeSrc":"4394:17:17","nodeType":"YulFunctionCall","src":"4394:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"4347:37:17","nodeType":"YulIdentifier","src":"4347:37:17"},"nativeSrc":"4347:65:17","nodeType":"YulFunctionCall","src":"4347:65:17"},"nativeSrc":"4347:65:17","nodeType":"YulExpressionStatement","src":"4347:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"4209:210:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4273:9:17","nodeType":"YulTypedName","src":"4273:9:17","type":""},{"name":"value0","nativeSrc":"4285:6:17","nodeType":"YulTypedName","src":"4285:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4296:4:17","nodeType":"YulTypedName","src":"4296:4:17","type":""}],"src":"4209:210:17"},{"body":{"nativeSrc":"4490:53:17","nodeType":"YulBlock","src":"4490:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4507:3:17","nodeType":"YulIdentifier","src":"4507:3:17"},{"arguments":[{"name":"value","nativeSrc":"4530:5:17","nodeType":"YulIdentifier","src":"4530:5:17"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4512:17:17","nodeType":"YulIdentifier","src":"4512:17:17"},"nativeSrc":"4512:24:17","nodeType":"YulFunctionCall","src":"4512:24:17"}],"functionName":{"name":"mstore","nativeSrc":"4500:6:17","nodeType":"YulIdentifier","src":"4500:6:17"},"nativeSrc":"4500:37:17","nodeType":"YulFunctionCall","src":"4500:37:17"},"nativeSrc":"4500:37:17","nodeType":"YulExpressionStatement","src":"4500:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4425:118:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4478:5:17","nodeType":"YulTypedName","src":"4478:5:17","type":""},{"name":"pos","nativeSrc":"4485:3:17","nodeType":"YulTypedName","src":"4485:3:17","type":""}],"src":"4425:118:17"},{"body":{"nativeSrc":"4647:124:17","nodeType":"YulBlock","src":"4647:124:17","statements":[{"nativeSrc":"4657:26:17","nodeType":"YulAssignment","src":"4657:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"4669:9:17","nodeType":"YulIdentifier","src":"4669:9:17"},{"kind":"number","nativeSrc":"4680:2:17","nodeType":"YulLiteral","src":"4680:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4665:3:17","nodeType":"YulIdentifier","src":"4665:3:17"},"nativeSrc":"4665:18:17","nodeType":"YulFunctionCall","src":"4665:18:17"},"variableNames":[{"name":"tail","nativeSrc":"4657:4:17","nodeType":"YulIdentifier","src":"4657:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4737:6:17","nodeType":"YulIdentifier","src":"4737:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"4750:9:17","nodeType":"YulIdentifier","src":"4750:9:17"},{"kind":"number","nativeSrc":"4761:1:17","nodeType":"YulLiteral","src":"4761:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4746:3:17","nodeType":"YulIdentifier","src":"4746:3:17"},"nativeSrc":"4746:17:17","nodeType":"YulFunctionCall","src":"4746:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4693:43:17","nodeType":"YulIdentifier","src":"4693:43:17"},"nativeSrc":"4693:71:17","nodeType":"YulFunctionCall","src":"4693:71:17"},"nativeSrc":"4693:71:17","nodeType":"YulExpressionStatement","src":"4693:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"4549:222:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4619:9:17","nodeType":"YulTypedName","src":"4619:9:17","type":""},{"name":"value0","nativeSrc":"4631:6:17","nodeType":"YulTypedName","src":"4631:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4642:4:17","nodeType":"YulTypedName","src":"4642:4:17","type":""}],"src":"4549:222:17"},{"body":{"nativeSrc":"4877:519:17","nodeType":"YulBlock","src":"4877:519:17","statements":[{"body":{"nativeSrc":"4923:83:17","nodeType":"YulBlock","src":"4923:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4925:77:17","nodeType":"YulIdentifier","src":"4925:77:17"},"nativeSrc":"4925:79:17","nodeType":"YulFunctionCall","src":"4925:79:17"},"nativeSrc":"4925:79:17","nodeType":"YulExpressionStatement","src":"4925:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4898:7:17","nodeType":"YulIdentifier","src":"4898:7:17"},{"name":"headStart","nativeSrc":"4907:9:17","nodeType":"YulIdentifier","src":"4907:9:17"}],"functionName":{"name":"sub","nativeSrc":"4894:3:17","nodeType":"YulIdentifier","src":"4894:3:17"},"nativeSrc":"4894:23:17","nodeType":"YulFunctionCall","src":"4894:23:17"},{"kind":"number","nativeSrc":"4919:2:17","nodeType":"YulLiteral","src":"4919:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"4890:3:17","nodeType":"YulIdentifier","src":"4890:3:17"},"nativeSrc":"4890:32:17","nodeType":"YulFunctionCall","src":"4890:32:17"},"nativeSrc":"4887:119:17","nodeType":"YulIf","src":"4887:119:17"},{"nativeSrc":"5016:117:17","nodeType":"YulBlock","src":"5016:117:17","statements":[{"nativeSrc":"5031:15:17","nodeType":"YulVariableDeclaration","src":"5031:15:17","value":{"kind":"number","nativeSrc":"5045:1:17","nodeType":"YulLiteral","src":"5045:1:17","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5035:6:17","nodeType":"YulTypedName","src":"5035:6:17","type":""}]},{"nativeSrc":"5060:63:17","nodeType":"YulAssignment","src":"5060:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5095:9:17","nodeType":"YulIdentifier","src":"5095:9:17"},{"name":"offset","nativeSrc":"5106:6:17","nodeType":"YulIdentifier","src":"5106:6:17"}],"functionName":{"name":"add","nativeSrc":"5091:3:17","nodeType":"YulIdentifier","src":"5091:3:17"},"nativeSrc":"5091:22:17","nodeType":"YulFunctionCall","src":"5091:22:17"},{"name":"dataEnd","nativeSrc":"5115:7:17","nodeType":"YulIdentifier","src":"5115:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5070:20:17","nodeType":"YulIdentifier","src":"5070:20:17"},"nativeSrc":"5070:53:17","nodeType":"YulFunctionCall","src":"5070:53:17"},"variableNames":[{"name":"value0","nativeSrc":"5060:6:17","nodeType":"YulIdentifier","src":"5060:6:17"}]}]},{"nativeSrc":"5143:118:17","nodeType":"YulBlock","src":"5143:118:17","statements":[{"nativeSrc":"5158:16:17","nodeType":"YulVariableDeclaration","src":"5158:16:17","value":{"kind":"number","nativeSrc":"5172:2:17","nodeType":"YulLiteral","src":"5172:2:17","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5162:6:17","nodeType":"YulTypedName","src":"5162:6:17","type":""}]},{"nativeSrc":"5188:63:17","nodeType":"YulAssignment","src":"5188:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5223:9:17","nodeType":"YulIdentifier","src":"5223:9:17"},{"name":"offset","nativeSrc":"5234:6:17","nodeType":"YulIdentifier","src":"5234:6:17"}],"functionName":{"name":"add","nativeSrc":"5219:3:17","nodeType":"YulIdentifier","src":"5219:3:17"},"nativeSrc":"5219:22:17","nodeType":"YulFunctionCall","src":"5219:22:17"},{"name":"dataEnd","nativeSrc":"5243:7:17","nodeType":"YulIdentifier","src":"5243:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5198:20:17","nodeType":"YulIdentifier","src":"5198:20:17"},"nativeSrc":"5198:53:17","nodeType":"YulFunctionCall","src":"5198:53:17"},"variableNames":[{"name":"value1","nativeSrc":"5188:6:17","nodeType":"YulIdentifier","src":"5188:6:17"}]}]},{"nativeSrc":"5271:118:17","nodeType":"YulBlock","src":"5271:118:17","statements":[{"nativeSrc":"5286:16:17","nodeType":"YulVariableDeclaration","src":"5286:16:17","value":{"kind":"number","nativeSrc":"5300:2:17","nodeType":"YulLiteral","src":"5300:2:17","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"5290:6:17","nodeType":"YulTypedName","src":"5290:6:17","type":""}]},{"nativeSrc":"5316:63:17","nodeType":"YulAssignment","src":"5316:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5351:9:17","nodeType":"YulIdentifier","src":"5351:9:17"},{"name":"offset","nativeSrc":"5362:6:17","nodeType":"YulIdentifier","src":"5362:6:17"}],"functionName":{"name":"add","nativeSrc":"5347:3:17","nodeType":"YulIdentifier","src":"5347:3:17"},"nativeSrc":"5347:22:17","nodeType":"YulFunctionCall","src":"5347:22:17"},{"name":"dataEnd","nativeSrc":"5371:7:17","nodeType":"YulIdentifier","src":"5371:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5326:20:17","nodeType":"YulIdentifier","src":"5326:20:17"},"nativeSrc":"5326:53:17","nodeType":"YulFunctionCall","src":"5326:53:17"},"variableNames":[{"name":"value2","nativeSrc":"5316:6:17","nodeType":"YulIdentifier","src":"5316:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"4777:619:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4831:9:17","nodeType":"YulTypedName","src":"4831:9:17","type":""},{"name":"dataEnd","nativeSrc":"4842:7:17","nodeType":"YulTypedName","src":"4842:7:17","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4854:6:17","nodeType":"YulTypedName","src":"4854:6:17","type":""},{"name":"value1","nativeSrc":"4862:6:17","nodeType":"YulTypedName","src":"4862:6:17","type":""},{"name":"value2","nativeSrc":"4870:6:17","nodeType":"YulTypedName","src":"4870:6:17","type":""}],"src":"4777:619:17"},{"body":{"nativeSrc":"5445:43:17","nodeType":"YulBlock","src":"5445:43:17","statements":[{"nativeSrc":"5455:27:17","nodeType":"YulAssignment","src":"5455:27:17","value":{"arguments":[{"name":"value","nativeSrc":"5470:5:17","nodeType":"YulIdentifier","src":"5470:5:17"},{"kind":"number","nativeSrc":"5477:4:17","nodeType":"YulLiteral","src":"5477:4:17","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"5466:3:17","nodeType":"YulIdentifier","src":"5466:3:17"},"nativeSrc":"5466:16:17","nodeType":"YulFunctionCall","src":"5466:16:17"},"variableNames":[{"name":"cleaned","nativeSrc":"5455:7:17","nodeType":"YulIdentifier","src":"5455:7:17"}]}]},"name":"cleanup_t_uint8","nativeSrc":"5402:86:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5427:5:17","nodeType":"YulTypedName","src":"5427:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5437:7:17","nodeType":"YulTypedName","src":"5437:7:17","type":""}],"src":"5402:86:17"},{"body":{"nativeSrc":"5555:51:17","nodeType":"YulBlock","src":"5555:51:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5572:3:17","nodeType":"YulIdentifier","src":"5572:3:17"},{"arguments":[{"name":"value","nativeSrc":"5593:5:17","nodeType":"YulIdentifier","src":"5593:5:17"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"5577:15:17","nodeType":"YulIdentifier","src":"5577:15:17"},"nativeSrc":"5577:22:17","nodeType":"YulFunctionCall","src":"5577:22:17"}],"functionName":{"name":"mstore","nativeSrc":"5565:6:17","nodeType":"YulIdentifier","src":"5565:6:17"},"nativeSrc":"5565:35:17","nodeType":"YulFunctionCall","src":"5565:35:17"},"nativeSrc":"5565:35:17","nodeType":"YulExpressionStatement","src":"5565:35:17"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"5494:112:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5543:5:17","nodeType":"YulTypedName","src":"5543:5:17","type":""},{"name":"pos","nativeSrc":"5550:3:17","nodeType":"YulTypedName","src":"5550:3:17","type":""}],"src":"5494:112:17"},{"body":{"nativeSrc":"5706:120:17","nodeType":"YulBlock","src":"5706:120:17","statements":[{"nativeSrc":"5716:26:17","nodeType":"YulAssignment","src":"5716:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"5728:9:17","nodeType":"YulIdentifier","src":"5728:9:17"},{"kind":"number","nativeSrc":"5739:2:17","nodeType":"YulLiteral","src":"5739:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5724:3:17","nodeType":"YulIdentifier","src":"5724:3:17"},"nativeSrc":"5724:18:17","nodeType":"YulFunctionCall","src":"5724:18:17"},"variableNames":[{"name":"tail","nativeSrc":"5716:4:17","nodeType":"YulIdentifier","src":"5716:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5792:6:17","nodeType":"YulIdentifier","src":"5792:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"5805:9:17","nodeType":"YulIdentifier","src":"5805:9:17"},{"kind":"number","nativeSrc":"5816:1:17","nodeType":"YulLiteral","src":"5816:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5801:3:17","nodeType":"YulIdentifier","src":"5801:3:17"},"nativeSrc":"5801:17:17","nodeType":"YulFunctionCall","src":"5801:17:17"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"5752:39:17","nodeType":"YulIdentifier","src":"5752:39:17"},"nativeSrc":"5752:67:17","nodeType":"YulFunctionCall","src":"5752:67:17"},"nativeSrc":"5752:67:17","nodeType":"YulExpressionStatement","src":"5752:67:17"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"5612:214:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5678:9:17","nodeType":"YulTypedName","src":"5678:9:17","type":""},{"name":"value0","nativeSrc":"5690:6:17","nodeType":"YulTypedName","src":"5690:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5701:4:17","nodeType":"YulTypedName","src":"5701:4:17","type":""}],"src":"5612:214:17"},{"body":{"nativeSrc":"5921:28:17","nodeType":"YulBlock","src":"5921:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5938:1:17","nodeType":"YulLiteral","src":"5938:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"5941:1:17","nodeType":"YulLiteral","src":"5941:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5931:6:17","nodeType":"YulIdentifier","src":"5931:6:17"},"nativeSrc":"5931:12:17","nodeType":"YulFunctionCall","src":"5931:12:17"},"nativeSrc":"5931:12:17","nodeType":"YulExpressionStatement","src":"5931:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"5832:117:17","nodeType":"YulFunctionDefinition","src":"5832:117:17"},{"body":{"nativeSrc":"6044:28:17","nodeType":"YulBlock","src":"6044:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6061:1:17","nodeType":"YulLiteral","src":"6061:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"6064:1:17","nodeType":"YulLiteral","src":"6064:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6054:6:17","nodeType":"YulIdentifier","src":"6054:6:17"},"nativeSrc":"6054:12:17","nodeType":"YulFunctionCall","src":"6054:12:17"},"nativeSrc":"6054:12:17","nodeType":"YulExpressionStatement","src":"6054:12:17"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"5955:117:17","nodeType":"YulFunctionDefinition","src":"5955:117:17"},{"body":{"nativeSrc":"6167:28:17","nodeType":"YulBlock","src":"6167:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6184:1:17","nodeType":"YulLiteral","src":"6184:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"6187:1:17","nodeType":"YulLiteral","src":"6187:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6177:6:17","nodeType":"YulIdentifier","src":"6177:6:17"},"nativeSrc":"6177:12:17","nodeType":"YulFunctionCall","src":"6177:12:17"},"nativeSrc":"6177:12:17","nodeType":"YulExpressionStatement","src":"6177:12:17"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"6078:117:17","nodeType":"YulFunctionDefinition","src":"6078:117:17"},{"body":{"nativeSrc":"6308:478:17","nodeType":"YulBlock","src":"6308:478:17","statements":[{"body":{"nativeSrc":"6357:83:17","nodeType":"YulBlock","src":"6357:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"6359:77:17","nodeType":"YulIdentifier","src":"6359:77:17"},"nativeSrc":"6359:79:17","nodeType":"YulFunctionCall","src":"6359:79:17"},"nativeSrc":"6359:79:17","nodeType":"YulExpressionStatement","src":"6359:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"6336:6:17","nodeType":"YulIdentifier","src":"6336:6:17"},{"kind":"number","nativeSrc":"6344:4:17","nodeType":"YulLiteral","src":"6344:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"6332:3:17","nodeType":"YulIdentifier","src":"6332:3:17"},"nativeSrc":"6332:17:17","nodeType":"YulFunctionCall","src":"6332:17:17"},{"name":"end","nativeSrc":"6351:3:17","nodeType":"YulIdentifier","src":"6351:3:17"}],"functionName":{"name":"slt","nativeSrc":"6328:3:17","nodeType":"YulIdentifier","src":"6328:3:17"},"nativeSrc":"6328:27:17","nodeType":"YulFunctionCall","src":"6328:27:17"}],"functionName":{"name":"iszero","nativeSrc":"6321:6:17","nodeType":"YulIdentifier","src":"6321:6:17"},"nativeSrc":"6321:35:17","nodeType":"YulFunctionCall","src":"6321:35:17"},"nativeSrc":"6318:122:17","nodeType":"YulIf","src":"6318:122:17"},{"nativeSrc":"6449:30:17","nodeType":"YulAssignment","src":"6449:30:17","value":{"arguments":[{"name":"offset","nativeSrc":"6472:6:17","nodeType":"YulIdentifier","src":"6472:6:17"}],"functionName":{"name":"calldataload","nativeSrc":"6459:12:17","nodeType":"YulIdentifier","src":"6459:12:17"},"nativeSrc":"6459:20:17","nodeType":"YulFunctionCall","src":"6459:20:17"},"variableNames":[{"name":"length","nativeSrc":"6449:6:17","nodeType":"YulIdentifier","src":"6449:6:17"}]},{"body":{"nativeSrc":"6522:83:17","nodeType":"YulBlock","src":"6522:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"6524:77:17","nodeType":"YulIdentifier","src":"6524:77:17"},"nativeSrc":"6524:79:17","nodeType":"YulFunctionCall","src":"6524:79:17"},"nativeSrc":"6524:79:17","nodeType":"YulExpressionStatement","src":"6524:79:17"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"6494:6:17","nodeType":"YulIdentifier","src":"6494:6:17"},{"kind":"number","nativeSrc":"6502:18:17","nodeType":"YulLiteral","src":"6502:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6491:2:17","nodeType":"YulIdentifier","src":"6491:2:17"},"nativeSrc":"6491:30:17","nodeType":"YulFunctionCall","src":"6491:30:17"},"nativeSrc":"6488:117:17","nodeType":"YulIf","src":"6488:117:17"},{"nativeSrc":"6614:29:17","nodeType":"YulAssignment","src":"6614:29:17","value":{"arguments":[{"name":"offset","nativeSrc":"6630:6:17","nodeType":"YulIdentifier","src":"6630:6:17"},{"kind":"number","nativeSrc":"6638:4:17","nodeType":"YulLiteral","src":"6638:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6626:3:17","nodeType":"YulIdentifier","src":"6626:3:17"},"nativeSrc":"6626:17:17","nodeType":"YulFunctionCall","src":"6626:17:17"},"variableNames":[{"name":"arrayPos","nativeSrc":"6614:8:17","nodeType":"YulIdentifier","src":"6614:8:17"}]},{"body":{"nativeSrc":"6697:83:17","nodeType":"YulBlock","src":"6697:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"6699:77:17","nodeType":"YulIdentifier","src":"6699:77:17"},"nativeSrc":"6699:79:17","nodeType":"YulFunctionCall","src":"6699:79:17"},"nativeSrc":"6699:79:17","nodeType":"YulExpressionStatement","src":"6699:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"6662:8:17","nodeType":"YulIdentifier","src":"6662:8:17"},{"arguments":[{"name":"length","nativeSrc":"6676:6:17","nodeType":"YulIdentifier","src":"6676:6:17"},{"kind":"number","nativeSrc":"6684:4:17","nodeType":"YulLiteral","src":"6684:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"6672:3:17","nodeType":"YulIdentifier","src":"6672:3:17"},"nativeSrc":"6672:17:17","nodeType":"YulFunctionCall","src":"6672:17:17"}],"functionName":{"name":"add","nativeSrc":"6658:3:17","nodeType":"YulIdentifier","src":"6658:3:17"},"nativeSrc":"6658:32:17","nodeType":"YulFunctionCall","src":"6658:32:17"},{"name":"end","nativeSrc":"6692:3:17","nodeType":"YulIdentifier","src":"6692:3:17"}],"functionName":{"name":"gt","nativeSrc":"6655:2:17","nodeType":"YulIdentifier","src":"6655:2:17"},"nativeSrc":"6655:41:17","nodeType":"YulFunctionCall","src":"6655:41:17"},"nativeSrc":"6652:128:17","nodeType":"YulIf","src":"6652:128:17"}]},"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"6218:568:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6275:6:17","nodeType":"YulTypedName","src":"6275:6:17","type":""},{"name":"end","nativeSrc":"6283:3:17","nodeType":"YulTypedName","src":"6283:3:17","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"6291:8:17","nodeType":"YulTypedName","src":"6291:8:17","type":""},{"name":"length","nativeSrc":"6301:6:17","nodeType":"YulTypedName","src":"6301:6:17","type":""}],"src":"6218:568:17"},{"body":{"nativeSrc":"6961:972:17","nodeType":"YulBlock","src":"6961:972:17","statements":[{"body":{"nativeSrc":"7008:83:17","nodeType":"YulBlock","src":"7008:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7010:77:17","nodeType":"YulIdentifier","src":"7010:77:17"},"nativeSrc":"7010:79:17","nodeType":"YulFunctionCall","src":"7010:79:17"},"nativeSrc":"7010:79:17","nodeType":"YulExpressionStatement","src":"7010:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6982:7:17","nodeType":"YulIdentifier","src":"6982:7:17"},{"name":"headStart","nativeSrc":"6991:9:17","nodeType":"YulIdentifier","src":"6991:9:17"}],"functionName":{"name":"sub","nativeSrc":"6978:3:17","nodeType":"YulIdentifier","src":"6978:3:17"},"nativeSrc":"6978:23:17","nodeType":"YulFunctionCall","src":"6978:23:17"},{"kind":"number","nativeSrc":"7003:3:17","nodeType":"YulLiteral","src":"7003:3:17","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"6974:3:17","nodeType":"YulIdentifier","src":"6974:3:17"},"nativeSrc":"6974:33:17","nodeType":"YulFunctionCall","src":"6974:33:17"},"nativeSrc":"6971:120:17","nodeType":"YulIf","src":"6971:120:17"},{"nativeSrc":"7101:117:17","nodeType":"YulBlock","src":"7101:117:17","statements":[{"nativeSrc":"7116:15:17","nodeType":"YulVariableDeclaration","src":"7116:15:17","value":{"kind":"number","nativeSrc":"7130:1:17","nodeType":"YulLiteral","src":"7130:1:17","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7120:6:17","nodeType":"YulTypedName","src":"7120:6:17","type":""}]},{"nativeSrc":"7145:63:17","nodeType":"YulAssignment","src":"7145:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7180:9:17","nodeType":"YulIdentifier","src":"7180:9:17"},{"name":"offset","nativeSrc":"7191:6:17","nodeType":"YulIdentifier","src":"7191:6:17"}],"functionName":{"name":"add","nativeSrc":"7176:3:17","nodeType":"YulIdentifier","src":"7176:3:17"},"nativeSrc":"7176:22:17","nodeType":"YulFunctionCall","src":"7176:22:17"},{"name":"dataEnd","nativeSrc":"7200:7:17","nodeType":"YulIdentifier","src":"7200:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"7155:20:17","nodeType":"YulIdentifier","src":"7155:20:17"},"nativeSrc":"7155:53:17","nodeType":"YulFunctionCall","src":"7155:53:17"},"variableNames":[{"name":"value0","nativeSrc":"7145:6:17","nodeType":"YulIdentifier","src":"7145:6:17"}]}]},{"nativeSrc":"7228:118:17","nodeType":"YulBlock","src":"7228:118:17","statements":[{"nativeSrc":"7243:16:17","nodeType":"YulVariableDeclaration","src":"7243:16:17","value":{"kind":"number","nativeSrc":"7257:2:17","nodeType":"YulLiteral","src":"7257:2:17","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"7247:6:17","nodeType":"YulTypedName","src":"7247:6:17","type":""}]},{"nativeSrc":"7273:63:17","nodeType":"YulAssignment","src":"7273:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7308:9:17","nodeType":"YulIdentifier","src":"7308:9:17"},{"name":"offset","nativeSrc":"7319:6:17","nodeType":"YulIdentifier","src":"7319:6:17"}],"functionName":{"name":"add","nativeSrc":"7304:3:17","nodeType":"YulIdentifier","src":"7304:3:17"},"nativeSrc":"7304:22:17","nodeType":"YulFunctionCall","src":"7304:22:17"},{"name":"dataEnd","nativeSrc":"7328:7:17","nodeType":"YulIdentifier","src":"7328:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"7283:20:17","nodeType":"YulIdentifier","src":"7283:20:17"},"nativeSrc":"7283:53:17","nodeType":"YulFunctionCall","src":"7283:53:17"},"variableNames":[{"name":"value1","nativeSrc":"7273:6:17","nodeType":"YulIdentifier","src":"7273:6:17"}]}]},{"nativeSrc":"7356:313:17","nodeType":"YulBlock","src":"7356:313:17","statements":[{"nativeSrc":"7371:46:17","nodeType":"YulVariableDeclaration","src":"7371:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7402:9:17","nodeType":"YulIdentifier","src":"7402:9:17"},{"kind":"number","nativeSrc":"7413:2:17","nodeType":"YulLiteral","src":"7413:2:17","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7398:3:17","nodeType":"YulIdentifier","src":"7398:3:17"},"nativeSrc":"7398:18:17","nodeType":"YulFunctionCall","src":"7398:18:17"}],"functionName":{"name":"calldataload","nativeSrc":"7385:12:17","nodeType":"YulIdentifier","src":"7385:12:17"},"nativeSrc":"7385:32:17","nodeType":"YulFunctionCall","src":"7385:32:17"},"variables":[{"name":"offset","nativeSrc":"7375:6:17","nodeType":"YulTypedName","src":"7375:6:17","type":""}]},{"body":{"nativeSrc":"7464:83:17","nodeType":"YulBlock","src":"7464:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"7466:77:17","nodeType":"YulIdentifier","src":"7466:77:17"},"nativeSrc":"7466:79:17","nodeType":"YulFunctionCall","src":"7466:79:17"},"nativeSrc":"7466:79:17","nodeType":"YulExpressionStatement","src":"7466:79:17"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7436:6:17","nodeType":"YulIdentifier","src":"7436:6:17"},{"kind":"number","nativeSrc":"7444:18:17","nodeType":"YulLiteral","src":"7444:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7433:2:17","nodeType":"YulIdentifier","src":"7433:2:17"},"nativeSrc":"7433:30:17","nodeType":"YulFunctionCall","src":"7433:30:17"},"nativeSrc":"7430:117:17","nodeType":"YulIf","src":"7430:117:17"},{"nativeSrc":"7561:98:17","nodeType":"YulAssignment","src":"7561:98:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7631:9:17","nodeType":"YulIdentifier","src":"7631:9:17"},{"name":"offset","nativeSrc":"7642:6:17","nodeType":"YulIdentifier","src":"7642:6:17"}],"functionName":{"name":"add","nativeSrc":"7627:3:17","nodeType":"YulIdentifier","src":"7627:3:17"},"nativeSrc":"7627:22:17","nodeType":"YulFunctionCall","src":"7627:22:17"},{"name":"dataEnd","nativeSrc":"7651:7:17","nodeType":"YulIdentifier","src":"7651:7:17"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"7579:47:17","nodeType":"YulIdentifier","src":"7579:47:17"},"nativeSrc":"7579:80:17","nodeType":"YulFunctionCall","src":"7579:80:17"},"variableNames":[{"name":"value2","nativeSrc":"7561:6:17","nodeType":"YulIdentifier","src":"7561:6:17"},{"name":"value3","nativeSrc":"7569:6:17","nodeType":"YulIdentifier","src":"7569:6:17"}]}]},{"nativeSrc":"7679:118:17","nodeType":"YulBlock","src":"7679:118:17","statements":[{"nativeSrc":"7694:16:17","nodeType":"YulVariableDeclaration","src":"7694:16:17","value":{"kind":"number","nativeSrc":"7708:2:17","nodeType":"YulLiteral","src":"7708:2:17","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"7698:6:17","nodeType":"YulTypedName","src":"7698:6:17","type":""}]},{"nativeSrc":"7724:63:17","nodeType":"YulAssignment","src":"7724:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7759:9:17","nodeType":"YulIdentifier","src":"7759:9:17"},{"name":"offset","nativeSrc":"7770:6:17","nodeType":"YulIdentifier","src":"7770:6:17"}],"functionName":{"name":"add","nativeSrc":"7755:3:17","nodeType":"YulIdentifier","src":"7755:3:17"},"nativeSrc":"7755:22:17","nodeType":"YulFunctionCall","src":"7755:22:17"},{"name":"dataEnd","nativeSrc":"7779:7:17","nodeType":"YulIdentifier","src":"7779:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7734:20:17","nodeType":"YulIdentifier","src":"7734:20:17"},"nativeSrc":"7734:53:17","nodeType":"YulFunctionCall","src":"7734:53:17"},"variableNames":[{"name":"value4","nativeSrc":"7724:6:17","nodeType":"YulIdentifier","src":"7724:6:17"}]}]},{"nativeSrc":"7807:119:17","nodeType":"YulBlock","src":"7807:119:17","statements":[{"nativeSrc":"7822:17:17","nodeType":"YulVariableDeclaration","src":"7822:17:17","value":{"kind":"number","nativeSrc":"7836:3:17","nodeType":"YulLiteral","src":"7836:3:17","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"7826:6:17","nodeType":"YulTypedName","src":"7826:6:17","type":""}]},{"nativeSrc":"7853:63:17","nodeType":"YulAssignment","src":"7853:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7888:9:17","nodeType":"YulIdentifier","src":"7888:9:17"},{"name":"offset","nativeSrc":"7899:6:17","nodeType":"YulIdentifier","src":"7899:6:17"}],"functionName":{"name":"add","nativeSrc":"7884:3:17","nodeType":"YulIdentifier","src":"7884:3:17"},"nativeSrc":"7884:22:17","nodeType":"YulFunctionCall","src":"7884:22:17"},{"name":"dataEnd","nativeSrc":"7908:7:17","nodeType":"YulIdentifier","src":"7908:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"7863:20:17","nodeType":"YulIdentifier","src":"7863:20:17"},"nativeSrc":"7863:53:17","nodeType":"YulFunctionCall","src":"7863:53:17"},"variableNames":[{"name":"value5","nativeSrc":"7853:6:17","nodeType":"YulIdentifier","src":"7853:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256","nativeSrc":"6792:1141:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6891:9:17","nodeType":"YulTypedName","src":"6891:9:17","type":""},{"name":"dataEnd","nativeSrc":"6902:7:17","nodeType":"YulTypedName","src":"6902:7:17","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6914:6:17","nodeType":"YulTypedName","src":"6914:6:17","type":""},{"name":"value1","nativeSrc":"6922:6:17","nodeType":"YulTypedName","src":"6922:6:17","type":""},{"name":"value2","nativeSrc":"6930:6:17","nodeType":"YulTypedName","src":"6930:6:17","type":""},{"name":"value3","nativeSrc":"6938:6:17","nodeType":"YulTypedName","src":"6938:6:17","type":""},{"name":"value4","nativeSrc":"6946:6:17","nodeType":"YulTypedName","src":"6946:6:17","type":""},{"name":"value5","nativeSrc":"6954:6:17","nodeType":"YulTypedName","src":"6954:6:17","type":""}],"src":"6792:1141:17"},{"body":{"nativeSrc":"8013:40:17","nodeType":"YulBlock","src":"8013:40:17","statements":[{"nativeSrc":"8024:22:17","nodeType":"YulAssignment","src":"8024:22:17","value":{"arguments":[{"name":"value","nativeSrc":"8040:5:17","nodeType":"YulIdentifier","src":"8040:5:17"}],"functionName":{"name":"mload","nativeSrc":"8034:5:17","nodeType":"YulIdentifier","src":"8034:5:17"},"nativeSrc":"8034:12:17","nodeType":"YulFunctionCall","src":"8034:12:17"},"variableNames":[{"name":"length","nativeSrc":"8024:6:17","nodeType":"YulIdentifier","src":"8024:6:17"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7939:114:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7996:5:17","nodeType":"YulTypedName","src":"7996:5:17","type":""}],"returnVariables":[{"name":"length","nativeSrc":"8006:6:17","nodeType":"YulTypedName","src":"8006:6:17","type":""}],"src":"7939:114:17"},{"body":{"nativeSrc":"8170:73:17","nodeType":"YulBlock","src":"8170:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8187:3:17","nodeType":"YulIdentifier","src":"8187:3:17"},{"name":"length","nativeSrc":"8192:6:17","nodeType":"YulIdentifier","src":"8192:6:17"}],"functionName":{"name":"mstore","nativeSrc":"8180:6:17","nodeType":"YulIdentifier","src":"8180:6:17"},"nativeSrc":"8180:19:17","nodeType":"YulFunctionCall","src":"8180:19:17"},"nativeSrc":"8180:19:17","nodeType":"YulExpressionStatement","src":"8180:19:17"},{"nativeSrc":"8208:29:17","nodeType":"YulAssignment","src":"8208:29:17","value":{"arguments":[{"name":"pos","nativeSrc":"8227:3:17","nodeType":"YulIdentifier","src":"8227:3:17"},{"kind":"number","nativeSrc":"8232:4:17","nodeType":"YulLiteral","src":"8232:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8223:3:17","nodeType":"YulIdentifier","src":"8223:3:17"},"nativeSrc":"8223:14:17","nodeType":"YulFunctionCall","src":"8223:14:17"},"variableNames":[{"name":"updated_pos","nativeSrc":"8208:11:17","nodeType":"YulIdentifier","src":"8208:11:17"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"8059:184:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8142:3:17","nodeType":"YulTypedName","src":"8142:3:17","type":""},{"name":"length","nativeSrc":"8147:6:17","nodeType":"YulTypedName","src":"8147:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"8158:11:17","nodeType":"YulTypedName","src":"8158:11:17","type":""}],"src":"8059:184:17"},{"body":{"nativeSrc":"8321:60:17","nodeType":"YulBlock","src":"8321:60:17","statements":[{"nativeSrc":"8331:11:17","nodeType":"YulAssignment","src":"8331:11:17","value":{"name":"ptr","nativeSrc":"8339:3:17","nodeType":"YulIdentifier","src":"8339:3:17"},"variableNames":[{"name":"data","nativeSrc":"8331:4:17","nodeType":"YulIdentifier","src":"8331:4:17"}]},{"nativeSrc":"8352:22:17","nodeType":"YulAssignment","src":"8352:22:17","value":{"arguments":[{"name":"ptr","nativeSrc":"8364:3:17","nodeType":"YulIdentifier","src":"8364:3:17"},{"kind":"number","nativeSrc":"8369:4:17","nodeType":"YulLiteral","src":"8369:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8360:3:17","nodeType":"YulIdentifier","src":"8360:3:17"},"nativeSrc":"8360:14:17","nodeType":"YulFunctionCall","src":"8360:14:17"},"variableNames":[{"name":"data","nativeSrc":"8352:4:17","nodeType":"YulIdentifier","src":"8352:4:17"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8249:132:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"8308:3:17","nodeType":"YulTypedName","src":"8308:3:17","type":""}],"returnVariables":[{"name":"data","nativeSrc":"8316:4:17","nodeType":"YulTypedName","src":"8316:4:17","type":""}],"src":"8249:132:17"},{"body":{"nativeSrc":"8442:53:17","nodeType":"YulBlock","src":"8442:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8459:3:17","nodeType":"YulIdentifier","src":"8459:3:17"},{"arguments":[{"name":"value","nativeSrc":"8482:5:17","nodeType":"YulIdentifier","src":"8482:5:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8464:17:17","nodeType":"YulIdentifier","src":"8464:17:17"},"nativeSrc":"8464:24:17","nodeType":"YulFunctionCall","src":"8464:24:17"}],"functionName":{"name":"mstore","nativeSrc":"8452:6:17","nodeType":"YulIdentifier","src":"8452:6:17"},"nativeSrc":"8452:37:17","nodeType":"YulFunctionCall","src":"8452:37:17"},"nativeSrc":"8452:37:17","nodeType":"YulExpressionStatement","src":"8452:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"8387:108:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8430:5:17","nodeType":"YulTypedName","src":"8430:5:17","type":""},{"name":"pos","nativeSrc":"8437:3:17","nodeType":"YulTypedName","src":"8437:3:17","type":""}],"src":"8387:108:17"},{"body":{"nativeSrc":"8581:99:17","nodeType":"YulBlock","src":"8581:99:17","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"8625:6:17","nodeType":"YulIdentifier","src":"8625:6:17"},{"name":"pos","nativeSrc":"8633:3:17","nodeType":"YulIdentifier","src":"8633:3:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"8591:33:17","nodeType":"YulIdentifier","src":"8591:33:17"},"nativeSrc":"8591:46:17","nodeType":"YulFunctionCall","src":"8591:46:17"},"nativeSrc":"8591:46:17","nodeType":"YulExpressionStatement","src":"8591:46:17"},{"nativeSrc":"8646:28:17","nodeType":"YulAssignment","src":"8646:28:17","value":{"arguments":[{"name":"pos","nativeSrc":"8664:3:17","nodeType":"YulIdentifier","src":"8664:3:17"},{"kind":"number","nativeSrc":"8669:4:17","nodeType":"YulLiteral","src":"8669:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8660:3:17","nodeType":"YulIdentifier","src":"8660:3:17"},"nativeSrc":"8660:14:17","nodeType":"YulFunctionCall","src":"8660:14:17"},"variableNames":[{"name":"updatedPos","nativeSrc":"8646:10:17","nodeType":"YulIdentifier","src":"8646:10:17"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"8501:179:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"8554:6:17","nodeType":"YulTypedName","src":"8554:6:17","type":""},{"name":"pos","nativeSrc":"8562:3:17","nodeType":"YulTypedName","src":"8562:3:17","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"8570:10:17","nodeType":"YulTypedName","src":"8570:10:17","type":""}],"src":"8501:179:17"},{"body":{"nativeSrc":"8761:38:17","nodeType":"YulBlock","src":"8761:38:17","statements":[{"nativeSrc":"8771:22:17","nodeType":"YulAssignment","src":"8771:22:17","value":{"arguments":[{"name":"ptr","nativeSrc":"8783:3:17","nodeType":"YulIdentifier","src":"8783:3:17"},{"kind":"number","nativeSrc":"8788:4:17","nodeType":"YulLiteral","src":"8788:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8779:3:17","nodeType":"YulIdentifier","src":"8779:3:17"},"nativeSrc":"8779:14:17","nodeType":"YulFunctionCall","src":"8779:14:17"},"variableNames":[{"name":"next","nativeSrc":"8771:4:17","nodeType":"YulIdentifier","src":"8771:4:17"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8686:113:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"8748:3:17","nodeType":"YulTypedName","src":"8748:3:17","type":""}],"returnVariables":[{"name":"next","nativeSrc":"8756:4:17","nodeType":"YulTypedName","src":"8756:4:17","type":""}],"src":"8686:113:17"},{"body":{"nativeSrc":"8959:608:17","nodeType":"YulBlock","src":"8959:608:17","statements":[{"nativeSrc":"8969:68:17","nodeType":"YulVariableDeclaration","src":"8969:68:17","value":{"arguments":[{"name":"value","nativeSrc":"9031:5:17","nodeType":"YulIdentifier","src":"9031:5:17"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8983:47:17","nodeType":"YulIdentifier","src":"8983:47:17"},"nativeSrc":"8983:54:17","nodeType":"YulFunctionCall","src":"8983:54:17"},"variables":[{"name":"length","nativeSrc":"8973:6:17","nodeType":"YulTypedName","src":"8973:6:17","type":""}]},{"nativeSrc":"9046:93:17","nodeType":"YulAssignment","src":"9046:93:17","value":{"arguments":[{"name":"pos","nativeSrc":"9127:3:17","nodeType":"YulIdentifier","src":"9127:3:17"},{"name":"length","nativeSrc":"9132:6:17","nodeType":"YulIdentifier","src":"9132:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"9053:73:17","nodeType":"YulIdentifier","src":"9053:73:17"},"nativeSrc":"9053:86:17","nodeType":"YulFunctionCall","src":"9053:86:17"},"variableNames":[{"name":"pos","nativeSrc":"9046:3:17","nodeType":"YulIdentifier","src":"9046:3:17"}]},{"nativeSrc":"9148:71:17","nodeType":"YulVariableDeclaration","src":"9148:71:17","value":{"arguments":[{"name":"value","nativeSrc":"9213:5:17","nodeType":"YulIdentifier","src":"9213:5:17"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"9163:49:17","nodeType":"YulIdentifier","src":"9163:49:17"},"nativeSrc":"9163:56:17","nodeType":"YulFunctionCall","src":"9163:56:17"},"variables":[{"name":"baseRef","nativeSrc":"9152:7:17","nodeType":"YulTypedName","src":"9152:7:17","type":""}]},{"nativeSrc":"9228:21:17","nodeType":"YulVariableDeclaration","src":"9228:21:17","value":{"name":"baseRef","nativeSrc":"9242:7:17","nodeType":"YulIdentifier","src":"9242:7:17"},"variables":[{"name":"srcPtr","nativeSrc":"9232:6:17","nodeType":"YulTypedName","src":"9232:6:17","type":""}]},{"body":{"nativeSrc":"9318:224:17","nodeType":"YulBlock","src":"9318:224:17","statements":[{"nativeSrc":"9332:34:17","nodeType":"YulVariableDeclaration","src":"9332:34:17","value":{"arguments":[{"name":"srcPtr","nativeSrc":"9359:6:17","nodeType":"YulIdentifier","src":"9359:6:17"}],"functionName":{"name":"mload","nativeSrc":"9353:5:17","nodeType":"YulIdentifier","src":"9353:5:17"},"nativeSrc":"9353:13:17","nodeType":"YulFunctionCall","src":"9353:13:17"},"variables":[{"name":"elementValue0","nativeSrc":"9336:13:17","nodeType":"YulTypedName","src":"9336:13:17","type":""}]},{"nativeSrc":"9379:70:17","nodeType":"YulAssignment","src":"9379:70:17","value":{"arguments":[{"name":"elementValue0","nativeSrc":"9430:13:17","nodeType":"YulIdentifier","src":"9430:13:17"},{"name":"pos","nativeSrc":"9445:3:17","nodeType":"YulIdentifier","src":"9445:3:17"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"9386:43:17","nodeType":"YulIdentifier","src":"9386:43:17"},"nativeSrc":"9386:63:17","nodeType":"YulFunctionCall","src":"9386:63:17"},"variableNames":[{"name":"pos","nativeSrc":"9379:3:17","nodeType":"YulIdentifier","src":"9379:3:17"}]},{"nativeSrc":"9462:70:17","nodeType":"YulAssignment","src":"9462:70:17","value":{"arguments":[{"name":"srcPtr","nativeSrc":"9525:6:17","nodeType":"YulIdentifier","src":"9525:6:17"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"9472:52:17","nodeType":"YulIdentifier","src":"9472:52:17"},"nativeSrc":"9472:60:17","nodeType":"YulFunctionCall","src":"9472:60:17"},"variableNames":[{"name":"srcPtr","nativeSrc":"9462:6:17","nodeType":"YulIdentifier","src":"9462:6:17"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"9280:1:17","nodeType":"YulIdentifier","src":"9280:1:17"},{"name":"length","nativeSrc":"9283:6:17","nodeType":"YulIdentifier","src":"9283:6:17"}],"functionName":{"name":"lt","nativeSrc":"9277:2:17","nodeType":"YulIdentifier","src":"9277:2:17"},"nativeSrc":"9277:13:17","nodeType":"YulFunctionCall","src":"9277:13:17"},"nativeSrc":"9258:284:17","nodeType":"YulForLoop","post":{"nativeSrc":"9291:18:17","nodeType":"YulBlock","src":"9291:18:17","statements":[{"nativeSrc":"9293:14:17","nodeType":"YulAssignment","src":"9293:14:17","value":{"arguments":[{"name":"i","nativeSrc":"9302:1:17","nodeType":"YulIdentifier","src":"9302:1:17"},{"kind":"number","nativeSrc":"9305:1:17","nodeType":"YulLiteral","src":"9305:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9298:3:17","nodeType":"YulIdentifier","src":"9298:3:17"},"nativeSrc":"9298:9:17","nodeType":"YulFunctionCall","src":"9298:9:17"},"variableNames":[{"name":"i","nativeSrc":"9293:1:17","nodeType":"YulIdentifier","src":"9293:1:17"}]}]},"pre":{"nativeSrc":"9262:14:17","nodeType":"YulBlock","src":"9262:14:17","statements":[{"nativeSrc":"9264:10:17","nodeType":"YulVariableDeclaration","src":"9264:10:17","value":{"kind":"number","nativeSrc":"9273:1:17","nodeType":"YulLiteral","src":"9273:1:17","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"9268:1:17","nodeType":"YulTypedName","src":"9268:1:17","type":""}]}]},"src":"9258:284:17"},{"nativeSrc":"9551:10:17","nodeType":"YulAssignment","src":"9551:10:17","value":{"name":"pos","nativeSrc":"9558:3:17","nodeType":"YulIdentifier","src":"9558:3:17"},"variableNames":[{"name":"end","nativeSrc":"9551:3:17","nodeType":"YulIdentifier","src":"9551:3:17"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"8835:732:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8938:5:17","nodeType":"YulTypedName","src":"8938:5:17","type":""},{"name":"pos","nativeSrc":"8945:3:17","nodeType":"YulTypedName","src":"8945:3:17","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8954:3:17","nodeType":"YulTypedName","src":"8954:3:17","type":""}],"src":"8835:732:17"},{"body":{"nativeSrc":"9721:225:17","nodeType":"YulBlock","src":"9721:225:17","statements":[{"nativeSrc":"9731:26:17","nodeType":"YulAssignment","src":"9731:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"9743:9:17","nodeType":"YulIdentifier","src":"9743:9:17"},{"kind":"number","nativeSrc":"9754:2:17","nodeType":"YulLiteral","src":"9754:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9739:3:17","nodeType":"YulIdentifier","src":"9739:3:17"},"nativeSrc":"9739:18:17","nodeType":"YulFunctionCall","src":"9739:18:17"},"variableNames":[{"name":"tail","nativeSrc":"9731:4:17","nodeType":"YulIdentifier","src":"9731:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9778:9:17","nodeType":"YulIdentifier","src":"9778:9:17"},{"kind":"number","nativeSrc":"9789:1:17","nodeType":"YulLiteral","src":"9789:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9774:3:17","nodeType":"YulIdentifier","src":"9774:3:17"},"nativeSrc":"9774:17:17","nodeType":"YulFunctionCall","src":"9774:17:17"},{"arguments":[{"name":"tail","nativeSrc":"9797:4:17","nodeType":"YulIdentifier","src":"9797:4:17"},{"name":"headStart","nativeSrc":"9803:9:17","nodeType":"YulIdentifier","src":"9803:9:17"}],"functionName":{"name":"sub","nativeSrc":"9793:3:17","nodeType":"YulIdentifier","src":"9793:3:17"},"nativeSrc":"9793:20:17","nodeType":"YulFunctionCall","src":"9793:20:17"}],"functionName":{"name":"mstore","nativeSrc":"9767:6:17","nodeType":"YulIdentifier","src":"9767:6:17"},"nativeSrc":"9767:47:17","nodeType":"YulFunctionCall","src":"9767:47:17"},"nativeSrc":"9767:47:17","nodeType":"YulExpressionStatement","src":"9767:47:17"},{"nativeSrc":"9823:116:17","nodeType":"YulAssignment","src":"9823:116:17","value":{"arguments":[{"name":"value0","nativeSrc":"9925:6:17","nodeType":"YulIdentifier","src":"9925:6:17"},{"name":"tail","nativeSrc":"9934:4:17","nodeType":"YulIdentifier","src":"9934:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"9831:93:17","nodeType":"YulIdentifier","src":"9831:93:17"},"nativeSrc":"9831:108:17","nodeType":"YulFunctionCall","src":"9831:108:17"},"variableNames":[{"name":"tail","nativeSrc":"9823:4:17","nodeType":"YulIdentifier","src":"9823:4:17"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"9573:373:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9693:9:17","nodeType":"YulTypedName","src":"9693:9:17","type":""},{"name":"value0","nativeSrc":"9705:6:17","nodeType":"YulTypedName","src":"9705:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9716:4:17","nodeType":"YulTypedName","src":"9716:4:17","type":""}],"src":"9573:373:17"},{"body":{"nativeSrc":"10018:263:17","nodeType":"YulBlock","src":"10018:263:17","statements":[{"body":{"nativeSrc":"10064:83:17","nodeType":"YulBlock","src":"10064:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10066:77:17","nodeType":"YulIdentifier","src":"10066:77:17"},"nativeSrc":"10066:79:17","nodeType":"YulFunctionCall","src":"10066:79:17"},"nativeSrc":"10066:79:17","nodeType":"YulExpressionStatement","src":"10066:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10039:7:17","nodeType":"YulIdentifier","src":"10039:7:17"},{"name":"headStart","nativeSrc":"10048:9:17","nodeType":"YulIdentifier","src":"10048:9:17"}],"functionName":{"name":"sub","nativeSrc":"10035:3:17","nodeType":"YulIdentifier","src":"10035:3:17"},"nativeSrc":"10035:23:17","nodeType":"YulFunctionCall","src":"10035:23:17"},{"kind":"number","nativeSrc":"10060:2:17","nodeType":"YulLiteral","src":"10060:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"10031:3:17","nodeType":"YulIdentifier","src":"10031:3:17"},"nativeSrc":"10031:32:17","nodeType":"YulFunctionCall","src":"10031:32:17"},"nativeSrc":"10028:119:17","nodeType":"YulIf","src":"10028:119:17"},{"nativeSrc":"10157:117:17","nodeType":"YulBlock","src":"10157:117:17","statements":[{"nativeSrc":"10172:15:17","nodeType":"YulVariableDeclaration","src":"10172:15:17","value":{"kind":"number","nativeSrc":"10186:1:17","nodeType":"YulLiteral","src":"10186:1:17","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10176:6:17","nodeType":"YulTypedName","src":"10176:6:17","type":""}]},{"nativeSrc":"10201:63:17","nodeType":"YulAssignment","src":"10201:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10236:9:17","nodeType":"YulIdentifier","src":"10236:9:17"},{"name":"offset","nativeSrc":"10247:6:17","nodeType":"YulIdentifier","src":"10247:6:17"}],"functionName":{"name":"add","nativeSrc":"10232:3:17","nodeType":"YulIdentifier","src":"10232:3:17"},"nativeSrc":"10232:22:17","nodeType":"YulFunctionCall","src":"10232:22:17"},{"name":"dataEnd","nativeSrc":"10256:7:17","nodeType":"YulIdentifier","src":"10256:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10211:20:17","nodeType":"YulIdentifier","src":"10211:20:17"},"nativeSrc":"10211:53:17","nodeType":"YulFunctionCall","src":"10211:53:17"},"variableNames":[{"name":"value0","nativeSrc":"10201:6:17","nodeType":"YulIdentifier","src":"10201:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"9952:329:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9988:9:17","nodeType":"YulTypedName","src":"9988:9:17","type":""},{"name":"dataEnd","nativeSrc":"9999:7:17","nodeType":"YulTypedName","src":"9999:7:17","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10011:6:17","nodeType":"YulTypedName","src":"10011:6:17","type":""}],"src":"9952:329:17"},{"body":{"nativeSrc":"10370:391:17","nodeType":"YulBlock","src":"10370:391:17","statements":[{"body":{"nativeSrc":"10416:83:17","nodeType":"YulBlock","src":"10416:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10418:77:17","nodeType":"YulIdentifier","src":"10418:77:17"},"nativeSrc":"10418:79:17","nodeType":"YulFunctionCall","src":"10418:79:17"},"nativeSrc":"10418:79:17","nodeType":"YulExpressionStatement","src":"10418:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10391:7:17","nodeType":"YulIdentifier","src":"10391:7:17"},{"name":"headStart","nativeSrc":"10400:9:17","nodeType":"YulIdentifier","src":"10400:9:17"}],"functionName":{"name":"sub","nativeSrc":"10387:3:17","nodeType":"YulIdentifier","src":"10387:3:17"},"nativeSrc":"10387:23:17","nodeType":"YulFunctionCall","src":"10387:23:17"},{"kind":"number","nativeSrc":"10412:2:17","nodeType":"YulLiteral","src":"10412:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10383:3:17","nodeType":"YulIdentifier","src":"10383:3:17"},"nativeSrc":"10383:32:17","nodeType":"YulFunctionCall","src":"10383:32:17"},"nativeSrc":"10380:119:17","nodeType":"YulIf","src":"10380:119:17"},{"nativeSrc":"10509:117:17","nodeType":"YulBlock","src":"10509:117:17","statements":[{"nativeSrc":"10524:15:17","nodeType":"YulVariableDeclaration","src":"10524:15:17","value":{"kind":"number","nativeSrc":"10538:1:17","nodeType":"YulLiteral","src":"10538:1:17","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10528:6:17","nodeType":"YulTypedName","src":"10528:6:17","type":""}]},{"nativeSrc":"10553:63:17","nodeType":"YulAssignment","src":"10553:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10588:9:17","nodeType":"YulIdentifier","src":"10588:9:17"},{"name":"offset","nativeSrc":"10599:6:17","nodeType":"YulIdentifier","src":"10599:6:17"}],"functionName":{"name":"add","nativeSrc":"10584:3:17","nodeType":"YulIdentifier","src":"10584:3:17"},"nativeSrc":"10584:22:17","nodeType":"YulFunctionCall","src":"10584:22:17"},{"name":"dataEnd","nativeSrc":"10608:7:17","nodeType":"YulIdentifier","src":"10608:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10563:20:17","nodeType":"YulIdentifier","src":"10563:20:17"},"nativeSrc":"10563:53:17","nodeType":"YulFunctionCall","src":"10563:53:17"},"variableNames":[{"name":"value0","nativeSrc":"10553:6:17","nodeType":"YulIdentifier","src":"10553:6:17"}]}]},{"nativeSrc":"10636:118:17","nodeType":"YulBlock","src":"10636:118:17","statements":[{"nativeSrc":"10651:16:17","nodeType":"YulVariableDeclaration","src":"10651:16:17","value":{"kind":"number","nativeSrc":"10665:2:17","nodeType":"YulLiteral","src":"10665:2:17","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"10655:6:17","nodeType":"YulTypedName","src":"10655:6:17","type":""}]},{"nativeSrc":"10681:63:17","nodeType":"YulAssignment","src":"10681:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10716:9:17","nodeType":"YulIdentifier","src":"10716:9:17"},{"name":"offset","nativeSrc":"10727:6:17","nodeType":"YulIdentifier","src":"10727:6:17"}],"functionName":{"name":"add","nativeSrc":"10712:3:17","nodeType":"YulIdentifier","src":"10712:3:17"},"nativeSrc":"10712:22:17","nodeType":"YulFunctionCall","src":"10712:22:17"},{"name":"dataEnd","nativeSrc":"10736:7:17","nodeType":"YulIdentifier","src":"10736:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10691:20:17","nodeType":"YulIdentifier","src":"10691:20:17"},"nativeSrc":"10691:53:17","nodeType":"YulFunctionCall","src":"10691:53:17"},"variableNames":[{"name":"value1","nativeSrc":"10681:6:17","nodeType":"YulIdentifier","src":"10681:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"10287:474:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10332:9:17","nodeType":"YulTypedName","src":"10332:9:17","type":""},{"name":"dataEnd","nativeSrc":"10343:7:17","nodeType":"YulTypedName","src":"10343:7:17","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10355:6:17","nodeType":"YulTypedName","src":"10355:6:17","type":""},{"name":"value1","nativeSrc":"10363:6:17","nodeType":"YulTypedName","src":"10363:6:17","type":""}],"src":"10287:474:17"},{"body":{"nativeSrc":"10935:1035:17","nodeType":"YulBlock","src":"10935:1035:17","statements":[{"body":{"nativeSrc":"10982:83:17","nodeType":"YulBlock","src":"10982:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10984:77:17","nodeType":"YulIdentifier","src":"10984:77:17"},"nativeSrc":"10984:79:17","nodeType":"YulFunctionCall","src":"10984:79:17"},"nativeSrc":"10984:79:17","nodeType":"YulExpressionStatement","src":"10984:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10956:7:17","nodeType":"YulIdentifier","src":"10956:7:17"},{"name":"headStart","nativeSrc":"10965:9:17","nodeType":"YulIdentifier","src":"10965:9:17"}],"functionName":{"name":"sub","nativeSrc":"10952:3:17","nodeType":"YulIdentifier","src":"10952:3:17"},"nativeSrc":"10952:23:17","nodeType":"YulFunctionCall","src":"10952:23:17"},{"kind":"number","nativeSrc":"10977:3:17","nodeType":"YulLiteral","src":"10977:3:17","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"10948:3:17","nodeType":"YulIdentifier","src":"10948:3:17"},"nativeSrc":"10948:33:17","nodeType":"YulFunctionCall","src":"10948:33:17"},"nativeSrc":"10945:120:17","nodeType":"YulIf","src":"10945:120:17"},{"nativeSrc":"11075:117:17","nodeType":"YulBlock","src":"11075:117:17","statements":[{"nativeSrc":"11090:15:17","nodeType":"YulVariableDeclaration","src":"11090:15:17","value":{"kind":"number","nativeSrc":"11104:1:17","nodeType":"YulLiteral","src":"11104:1:17","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11094:6:17","nodeType":"YulTypedName","src":"11094:6:17","type":""}]},{"nativeSrc":"11119:63:17","nodeType":"YulAssignment","src":"11119:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11154:9:17","nodeType":"YulIdentifier","src":"11154:9:17"},{"name":"offset","nativeSrc":"11165:6:17","nodeType":"YulIdentifier","src":"11165:6:17"}],"functionName":{"name":"add","nativeSrc":"11150:3:17","nodeType":"YulIdentifier","src":"11150:3:17"},"nativeSrc":"11150:22:17","nodeType":"YulFunctionCall","src":"11150:22:17"},{"name":"dataEnd","nativeSrc":"11174:7:17","nodeType":"YulIdentifier","src":"11174:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11129:20:17","nodeType":"YulIdentifier","src":"11129:20:17"},"nativeSrc":"11129:53:17","nodeType":"YulFunctionCall","src":"11129:53:17"},"variableNames":[{"name":"value0","nativeSrc":"11119:6:17","nodeType":"YulIdentifier","src":"11119:6:17"}]}]},{"nativeSrc":"11202:118:17","nodeType":"YulBlock","src":"11202:118:17","statements":[{"nativeSrc":"11217:16:17","nodeType":"YulVariableDeclaration","src":"11217:16:17","value":{"kind":"number","nativeSrc":"11231:2:17","nodeType":"YulLiteral","src":"11231:2:17","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"11221:6:17","nodeType":"YulTypedName","src":"11221:6:17","type":""}]},{"nativeSrc":"11247:63:17","nodeType":"YulAssignment","src":"11247:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11282:9:17","nodeType":"YulIdentifier","src":"11282:9:17"},{"name":"offset","nativeSrc":"11293:6:17","nodeType":"YulIdentifier","src":"11293:6:17"}],"functionName":{"name":"add","nativeSrc":"11278:3:17","nodeType":"YulIdentifier","src":"11278:3:17"},"nativeSrc":"11278:22:17","nodeType":"YulFunctionCall","src":"11278:22:17"},{"name":"dataEnd","nativeSrc":"11302:7:17","nodeType":"YulIdentifier","src":"11302:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11257:20:17","nodeType":"YulIdentifier","src":"11257:20:17"},"nativeSrc":"11257:53:17","nodeType":"YulFunctionCall","src":"11257:53:17"},"variableNames":[{"name":"value1","nativeSrc":"11247:6:17","nodeType":"YulIdentifier","src":"11247:6:17"}]}]},{"nativeSrc":"11330:118:17","nodeType":"YulBlock","src":"11330:118:17","statements":[{"nativeSrc":"11345:16:17","nodeType":"YulVariableDeclaration","src":"11345:16:17","value":{"kind":"number","nativeSrc":"11359:2:17","nodeType":"YulLiteral","src":"11359:2:17","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"11349:6:17","nodeType":"YulTypedName","src":"11349:6:17","type":""}]},{"nativeSrc":"11375:63:17","nodeType":"YulAssignment","src":"11375:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11410:9:17","nodeType":"YulIdentifier","src":"11410:9:17"},{"name":"offset","nativeSrc":"11421:6:17","nodeType":"YulIdentifier","src":"11421:6:17"}],"functionName":{"name":"add","nativeSrc":"11406:3:17","nodeType":"YulIdentifier","src":"11406:3:17"},"nativeSrc":"11406:22:17","nodeType":"YulFunctionCall","src":"11406:22:17"},{"name":"dataEnd","nativeSrc":"11430:7:17","nodeType":"YulIdentifier","src":"11430:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"11385:20:17","nodeType":"YulIdentifier","src":"11385:20:17"},"nativeSrc":"11385:53:17","nodeType":"YulFunctionCall","src":"11385:53:17"},"variableNames":[{"name":"value2","nativeSrc":"11375:6:17","nodeType":"YulIdentifier","src":"11375:6:17"}]}]},{"nativeSrc":"11458:118:17","nodeType":"YulBlock","src":"11458:118:17","statements":[{"nativeSrc":"11473:16:17","nodeType":"YulVariableDeclaration","src":"11473:16:17","value":{"kind":"number","nativeSrc":"11487:2:17","nodeType":"YulLiteral","src":"11487:2:17","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"11477:6:17","nodeType":"YulTypedName","src":"11477:6:17","type":""}]},{"nativeSrc":"11503:63:17","nodeType":"YulAssignment","src":"11503:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11538:9:17","nodeType":"YulIdentifier","src":"11538:9:17"},{"name":"offset","nativeSrc":"11549:6:17","nodeType":"YulIdentifier","src":"11549:6:17"}],"functionName":{"name":"add","nativeSrc":"11534:3:17","nodeType":"YulIdentifier","src":"11534:3:17"},"nativeSrc":"11534:22:17","nodeType":"YulFunctionCall","src":"11534:22:17"},{"name":"dataEnd","nativeSrc":"11558:7:17","nodeType":"YulIdentifier","src":"11558:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"11513:20:17","nodeType":"YulIdentifier","src":"11513:20:17"},"nativeSrc":"11513:53:17","nodeType":"YulFunctionCall","src":"11513:53:17"},"variableNames":[{"name":"value3","nativeSrc":"11503:6:17","nodeType":"YulIdentifier","src":"11503:6:17"}]}]},{"nativeSrc":"11586:119:17","nodeType":"YulBlock","src":"11586:119:17","statements":[{"nativeSrc":"11601:17:17","nodeType":"YulVariableDeclaration","src":"11601:17:17","value":{"kind":"number","nativeSrc":"11615:3:17","nodeType":"YulLiteral","src":"11615:3:17","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"11605:6:17","nodeType":"YulTypedName","src":"11605:6:17","type":""}]},{"nativeSrc":"11632:63:17","nodeType":"YulAssignment","src":"11632:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11667:9:17","nodeType":"YulIdentifier","src":"11667:9:17"},{"name":"offset","nativeSrc":"11678:6:17","nodeType":"YulIdentifier","src":"11678:6:17"}],"functionName":{"name":"add","nativeSrc":"11663:3:17","nodeType":"YulIdentifier","src":"11663:3:17"},"nativeSrc":"11663:22:17","nodeType":"YulFunctionCall","src":"11663:22:17"},{"name":"dataEnd","nativeSrc":"11687:7:17","nodeType":"YulIdentifier","src":"11687:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"11642:20:17","nodeType":"YulIdentifier","src":"11642:20:17"},"nativeSrc":"11642:53:17","nodeType":"YulFunctionCall","src":"11642:53:17"},"variableNames":[{"name":"value4","nativeSrc":"11632:6:17","nodeType":"YulIdentifier","src":"11632:6:17"}]}]},{"nativeSrc":"11715:119:17","nodeType":"YulBlock","src":"11715:119:17","statements":[{"nativeSrc":"11730:17:17","nodeType":"YulVariableDeclaration","src":"11730:17:17","value":{"kind":"number","nativeSrc":"11744:3:17","nodeType":"YulLiteral","src":"11744:3:17","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"11734:6:17","nodeType":"YulTypedName","src":"11734:6:17","type":""}]},{"nativeSrc":"11761:63:17","nodeType":"YulAssignment","src":"11761:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11796:9:17","nodeType":"YulIdentifier","src":"11796:9:17"},{"name":"offset","nativeSrc":"11807:6:17","nodeType":"YulIdentifier","src":"11807:6:17"}],"functionName":{"name":"add","nativeSrc":"11792:3:17","nodeType":"YulIdentifier","src":"11792:3:17"},"nativeSrc":"11792:22:17","nodeType":"YulFunctionCall","src":"11792:22:17"},{"name":"dataEnd","nativeSrc":"11816:7:17","nodeType":"YulIdentifier","src":"11816:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11771:20:17","nodeType":"YulIdentifier","src":"11771:20:17"},"nativeSrc":"11771:53:17","nodeType":"YulFunctionCall","src":"11771:53:17"},"variableNames":[{"name":"value5","nativeSrc":"11761:6:17","nodeType":"YulIdentifier","src":"11761:6:17"}]}]},{"nativeSrc":"11844:119:17","nodeType":"YulBlock","src":"11844:119:17","statements":[{"nativeSrc":"11859:17:17","nodeType":"YulVariableDeclaration","src":"11859:17:17","value":{"kind":"number","nativeSrc":"11873:3:17","nodeType":"YulLiteral","src":"11873:3:17","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"11863:6:17","nodeType":"YulTypedName","src":"11863:6:17","type":""}]},{"nativeSrc":"11890:63:17","nodeType":"YulAssignment","src":"11890:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11925:9:17","nodeType":"YulIdentifier","src":"11925:9:17"},{"name":"offset","nativeSrc":"11936:6:17","nodeType":"YulIdentifier","src":"11936:6:17"}],"functionName":{"name":"add","nativeSrc":"11921:3:17","nodeType":"YulIdentifier","src":"11921:3:17"},"nativeSrc":"11921:22:17","nodeType":"YulFunctionCall","src":"11921:22:17"},{"name":"dataEnd","nativeSrc":"11945:7:17","nodeType":"YulIdentifier","src":"11945:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"11900:20:17","nodeType":"YulIdentifier","src":"11900:20:17"},"nativeSrc":"11900:53:17","nodeType":"YulFunctionCall","src":"11900:53:17"},"variableNames":[{"name":"value6","nativeSrc":"11890:6:17","nodeType":"YulIdentifier","src":"11890:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256","nativeSrc":"10767:1203:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10857:9:17","nodeType":"YulTypedName","src":"10857:9:17","type":""},{"name":"dataEnd","nativeSrc":"10868:7:17","nodeType":"YulTypedName","src":"10868:7:17","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10880:6:17","nodeType":"YulTypedName","src":"10880:6:17","type":""},{"name":"value1","nativeSrc":"10888:6:17","nodeType":"YulTypedName","src":"10888:6:17","type":""},{"name":"value2","nativeSrc":"10896:6:17","nodeType":"YulTypedName","src":"10896:6:17","type":""},{"name":"value3","nativeSrc":"10904:6:17","nodeType":"YulTypedName","src":"10904:6:17","type":""},{"name":"value4","nativeSrc":"10912:6:17","nodeType":"YulTypedName","src":"10912:6:17","type":""},{"name":"value5","nativeSrc":"10920:6:17","nodeType":"YulTypedName","src":"10920:6:17","type":""},{"name":"value6","nativeSrc":"10928:6:17","nodeType":"YulTypedName","src":"10928:6:17","type":""}],"src":"10767:1203:17"},{"body":{"nativeSrc":"12102:206:17","nodeType":"YulBlock","src":"12102:206:17","statements":[{"nativeSrc":"12112:26:17","nodeType":"YulAssignment","src":"12112:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"12124:9:17","nodeType":"YulIdentifier","src":"12124:9:17"},{"kind":"number","nativeSrc":"12135:2:17","nodeType":"YulLiteral","src":"12135:2:17","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12120:3:17","nodeType":"YulIdentifier","src":"12120:3:17"},"nativeSrc":"12120:18:17","nodeType":"YulFunctionCall","src":"12120:18:17"},"variableNames":[{"name":"tail","nativeSrc":"12112:4:17","nodeType":"YulIdentifier","src":"12112:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12192:6:17","nodeType":"YulIdentifier","src":"12192:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"12205:9:17","nodeType":"YulIdentifier","src":"12205:9:17"},{"kind":"number","nativeSrc":"12216:1:17","nodeType":"YulLiteral","src":"12216:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12201:3:17","nodeType":"YulIdentifier","src":"12201:3:17"},"nativeSrc":"12201:17:17","nodeType":"YulFunctionCall","src":"12201:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12148:43:17","nodeType":"YulIdentifier","src":"12148:43:17"},"nativeSrc":"12148:71:17","nodeType":"YulFunctionCall","src":"12148:71:17"},"nativeSrc":"12148:71:17","nodeType":"YulExpressionStatement","src":"12148:71:17"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12273:6:17","nodeType":"YulIdentifier","src":"12273:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"12286:9:17","nodeType":"YulIdentifier","src":"12286:9:17"},{"kind":"number","nativeSrc":"12297:2:17","nodeType":"YulLiteral","src":"12297:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12282:3:17","nodeType":"YulIdentifier","src":"12282:3:17"},"nativeSrc":"12282:18:17","nodeType":"YulFunctionCall","src":"12282:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12229:43:17","nodeType":"YulIdentifier","src":"12229:43:17"},"nativeSrc":"12229:72:17","nodeType":"YulFunctionCall","src":"12229:72:17"},"nativeSrc":"12229:72:17","nodeType":"YulExpressionStatement","src":"12229:72:17"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"11976:332:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12066:9:17","nodeType":"YulTypedName","src":"12066:9:17","type":""},{"name":"value1","nativeSrc":"12078:6:17","nodeType":"YulTypedName","src":"12078:6:17","type":""},{"name":"value0","nativeSrc":"12086:6:17","nodeType":"YulTypedName","src":"12086:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12097:4:17","nodeType":"YulTypedName","src":"12097:4:17","type":""}],"src":"11976:332:17"},{"body":{"nativeSrc":"12499:1164:17","nodeType":"YulBlock","src":"12499:1164:17","statements":[{"body":{"nativeSrc":"12546:83:17","nodeType":"YulBlock","src":"12546:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12548:77:17","nodeType":"YulIdentifier","src":"12548:77:17"},"nativeSrc":"12548:79:17","nodeType":"YulFunctionCall","src":"12548:79:17"},"nativeSrc":"12548:79:17","nodeType":"YulExpressionStatement","src":"12548:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12520:7:17","nodeType":"YulIdentifier","src":"12520:7:17"},{"name":"headStart","nativeSrc":"12529:9:17","nodeType":"YulIdentifier","src":"12529:9:17"}],"functionName":{"name":"sub","nativeSrc":"12516:3:17","nodeType":"YulIdentifier","src":"12516:3:17"},"nativeSrc":"12516:23:17","nodeType":"YulFunctionCall","src":"12516:23:17"},{"kind":"number","nativeSrc":"12541:3:17","nodeType":"YulLiteral","src":"12541:3:17","type":"","value":"256"}],"functionName":{"name":"slt","nativeSrc":"12512:3:17","nodeType":"YulIdentifier","src":"12512:3:17"},"nativeSrc":"12512:33:17","nodeType":"YulFunctionCall","src":"12512:33:17"},"nativeSrc":"12509:120:17","nodeType":"YulIf","src":"12509:120:17"},{"nativeSrc":"12639:117:17","nodeType":"YulBlock","src":"12639:117:17","statements":[{"nativeSrc":"12654:15:17","nodeType":"YulVariableDeclaration","src":"12654:15:17","value":{"kind":"number","nativeSrc":"12668:1:17","nodeType":"YulLiteral","src":"12668:1:17","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12658:6:17","nodeType":"YulTypedName","src":"12658:6:17","type":""}]},{"nativeSrc":"12683:63:17","nodeType":"YulAssignment","src":"12683:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12718:9:17","nodeType":"YulIdentifier","src":"12718:9:17"},{"name":"offset","nativeSrc":"12729:6:17","nodeType":"YulIdentifier","src":"12729:6:17"}],"functionName":{"name":"add","nativeSrc":"12714:3:17","nodeType":"YulIdentifier","src":"12714:3:17"},"nativeSrc":"12714:22:17","nodeType":"YulFunctionCall","src":"12714:22:17"},{"name":"dataEnd","nativeSrc":"12738:7:17","nodeType":"YulIdentifier","src":"12738:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"12693:20:17","nodeType":"YulIdentifier","src":"12693:20:17"},"nativeSrc":"12693:53:17","nodeType":"YulFunctionCall","src":"12693:53:17"},"variableNames":[{"name":"value0","nativeSrc":"12683:6:17","nodeType":"YulIdentifier","src":"12683:6:17"}]}]},{"nativeSrc":"12766:118:17","nodeType":"YulBlock","src":"12766:118:17","statements":[{"nativeSrc":"12781:16:17","nodeType":"YulVariableDeclaration","src":"12781:16:17","value":{"kind":"number","nativeSrc":"12795:2:17","nodeType":"YulLiteral","src":"12795:2:17","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"12785:6:17","nodeType":"YulTypedName","src":"12785:6:17","type":""}]},{"nativeSrc":"12811:63:17","nodeType":"YulAssignment","src":"12811:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12846:9:17","nodeType":"YulIdentifier","src":"12846:9:17"},{"name":"offset","nativeSrc":"12857:6:17","nodeType":"YulIdentifier","src":"12857:6:17"}],"functionName":{"name":"add","nativeSrc":"12842:3:17","nodeType":"YulIdentifier","src":"12842:3:17"},"nativeSrc":"12842:22:17","nodeType":"YulFunctionCall","src":"12842:22:17"},{"name":"dataEnd","nativeSrc":"12866:7:17","nodeType":"YulIdentifier","src":"12866:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"12821:20:17","nodeType":"YulIdentifier","src":"12821:20:17"},"nativeSrc":"12821:53:17","nodeType":"YulFunctionCall","src":"12821:53:17"},"variableNames":[{"name":"value1","nativeSrc":"12811:6:17","nodeType":"YulIdentifier","src":"12811:6:17"}]}]},{"nativeSrc":"12894:118:17","nodeType":"YulBlock","src":"12894:118:17","statements":[{"nativeSrc":"12909:16:17","nodeType":"YulVariableDeclaration","src":"12909:16:17","value":{"kind":"number","nativeSrc":"12923:2:17","nodeType":"YulLiteral","src":"12923:2:17","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"12913:6:17","nodeType":"YulTypedName","src":"12913:6:17","type":""}]},{"nativeSrc":"12939:63:17","nodeType":"YulAssignment","src":"12939:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12974:9:17","nodeType":"YulIdentifier","src":"12974:9:17"},{"name":"offset","nativeSrc":"12985:6:17","nodeType":"YulIdentifier","src":"12985:6:17"}],"functionName":{"name":"add","nativeSrc":"12970:3:17","nodeType":"YulIdentifier","src":"12970:3:17"},"nativeSrc":"12970:22:17","nodeType":"YulFunctionCall","src":"12970:22:17"},{"name":"dataEnd","nativeSrc":"12994:7:17","nodeType":"YulIdentifier","src":"12994:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"12949:20:17","nodeType":"YulIdentifier","src":"12949:20:17"},"nativeSrc":"12949:53:17","nodeType":"YulFunctionCall","src":"12949:53:17"},"variableNames":[{"name":"value2","nativeSrc":"12939:6:17","nodeType":"YulIdentifier","src":"12939:6:17"}]}]},{"nativeSrc":"13022:118:17","nodeType":"YulBlock","src":"13022:118:17","statements":[{"nativeSrc":"13037:16:17","nodeType":"YulVariableDeclaration","src":"13037:16:17","value":{"kind":"number","nativeSrc":"13051:2:17","nodeType":"YulLiteral","src":"13051:2:17","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"13041:6:17","nodeType":"YulTypedName","src":"13041:6:17","type":""}]},{"nativeSrc":"13067:63:17","nodeType":"YulAssignment","src":"13067:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13102:9:17","nodeType":"YulIdentifier","src":"13102:9:17"},{"name":"offset","nativeSrc":"13113:6:17","nodeType":"YulIdentifier","src":"13113:6:17"}],"functionName":{"name":"add","nativeSrc":"13098:3:17","nodeType":"YulIdentifier","src":"13098:3:17"},"nativeSrc":"13098:22:17","nodeType":"YulFunctionCall","src":"13098:22:17"},{"name":"dataEnd","nativeSrc":"13122:7:17","nodeType":"YulIdentifier","src":"13122:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"13077:20:17","nodeType":"YulIdentifier","src":"13077:20:17"},"nativeSrc":"13077:53:17","nodeType":"YulFunctionCall","src":"13077:53:17"},"variableNames":[{"name":"value3","nativeSrc":"13067:6:17","nodeType":"YulIdentifier","src":"13067:6:17"}]}]},{"nativeSrc":"13150:119:17","nodeType":"YulBlock","src":"13150:119:17","statements":[{"nativeSrc":"13165:17:17","nodeType":"YulVariableDeclaration","src":"13165:17:17","value":{"kind":"number","nativeSrc":"13179:3:17","nodeType":"YulLiteral","src":"13179:3:17","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"13169:6:17","nodeType":"YulTypedName","src":"13169:6:17","type":""}]},{"nativeSrc":"13196:63:17","nodeType":"YulAssignment","src":"13196:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13231:9:17","nodeType":"YulIdentifier","src":"13231:9:17"},{"name":"offset","nativeSrc":"13242:6:17","nodeType":"YulIdentifier","src":"13242:6:17"}],"functionName":{"name":"add","nativeSrc":"13227:3:17","nodeType":"YulIdentifier","src":"13227:3:17"},"nativeSrc":"13227:22:17","nodeType":"YulFunctionCall","src":"13227:22:17"},{"name":"dataEnd","nativeSrc":"13251:7:17","nodeType":"YulIdentifier","src":"13251:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"13206:20:17","nodeType":"YulIdentifier","src":"13206:20:17"},"nativeSrc":"13206:53:17","nodeType":"YulFunctionCall","src":"13206:53:17"},"variableNames":[{"name":"value4","nativeSrc":"13196:6:17","nodeType":"YulIdentifier","src":"13196:6:17"}]}]},{"nativeSrc":"13279:119:17","nodeType":"YulBlock","src":"13279:119:17","statements":[{"nativeSrc":"13294:17:17","nodeType":"YulVariableDeclaration","src":"13294:17:17","value":{"kind":"number","nativeSrc":"13308:3:17","nodeType":"YulLiteral","src":"13308:3:17","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"13298:6:17","nodeType":"YulTypedName","src":"13298:6:17","type":""}]},{"nativeSrc":"13325:63:17","nodeType":"YulAssignment","src":"13325:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13360:9:17","nodeType":"YulIdentifier","src":"13360:9:17"},{"name":"offset","nativeSrc":"13371:6:17","nodeType":"YulIdentifier","src":"13371:6:17"}],"functionName":{"name":"add","nativeSrc":"13356:3:17","nodeType":"YulIdentifier","src":"13356:3:17"},"nativeSrc":"13356:22:17","nodeType":"YulFunctionCall","src":"13356:22:17"},{"name":"dataEnd","nativeSrc":"13380:7:17","nodeType":"YulIdentifier","src":"13380:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"13335:20:17","nodeType":"YulIdentifier","src":"13335:20:17"},"nativeSrc":"13335:53:17","nodeType":"YulFunctionCall","src":"13335:53:17"},"variableNames":[{"name":"value5","nativeSrc":"13325:6:17","nodeType":"YulIdentifier","src":"13325:6:17"}]}]},{"nativeSrc":"13408:119:17","nodeType":"YulBlock","src":"13408:119:17","statements":[{"nativeSrc":"13423:17:17","nodeType":"YulVariableDeclaration","src":"13423:17:17","value":{"kind":"number","nativeSrc":"13437:3:17","nodeType":"YulLiteral","src":"13437:3:17","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"13427:6:17","nodeType":"YulTypedName","src":"13427:6:17","type":""}]},{"nativeSrc":"13454:63:17","nodeType":"YulAssignment","src":"13454:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13489:9:17","nodeType":"YulIdentifier","src":"13489:9:17"},{"name":"offset","nativeSrc":"13500:6:17","nodeType":"YulIdentifier","src":"13500:6:17"}],"functionName":{"name":"add","nativeSrc":"13485:3:17","nodeType":"YulIdentifier","src":"13485:3:17"},"nativeSrc":"13485:22:17","nodeType":"YulFunctionCall","src":"13485:22:17"},{"name":"dataEnd","nativeSrc":"13509:7:17","nodeType":"YulIdentifier","src":"13509:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"13464:20:17","nodeType":"YulIdentifier","src":"13464:20:17"},"nativeSrc":"13464:53:17","nodeType":"YulFunctionCall","src":"13464:53:17"},"variableNames":[{"name":"value6","nativeSrc":"13454:6:17","nodeType":"YulIdentifier","src":"13454:6:17"}]}]},{"nativeSrc":"13537:119:17","nodeType":"YulBlock","src":"13537:119:17","statements":[{"nativeSrc":"13552:17:17","nodeType":"YulVariableDeclaration","src":"13552:17:17","value":{"kind":"number","nativeSrc":"13566:3:17","nodeType":"YulLiteral","src":"13566:3:17","type":"","value":"224"},"variables":[{"name":"offset","nativeSrc":"13556:6:17","nodeType":"YulTypedName","src":"13556:6:17","type":""}]},{"nativeSrc":"13583:63:17","nodeType":"YulAssignment","src":"13583:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13618:9:17","nodeType":"YulIdentifier","src":"13618:9:17"},{"name":"offset","nativeSrc":"13629:6:17","nodeType":"YulIdentifier","src":"13629:6:17"}],"functionName":{"name":"add","nativeSrc":"13614:3:17","nodeType":"YulIdentifier","src":"13614:3:17"},"nativeSrc":"13614:22:17","nodeType":"YulFunctionCall","src":"13614:22:17"},{"name":"dataEnd","nativeSrc":"13638:7:17","nodeType":"YulIdentifier","src":"13638:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"13593:20:17","nodeType":"YulIdentifier","src":"13593:20:17"},"nativeSrc":"13593:53:17","nodeType":"YulFunctionCall","src":"13593:53:17"},"variableNames":[{"name":"value7","nativeSrc":"13583:6:17","nodeType":"YulIdentifier","src":"13583:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256","nativeSrc":"12314:1349:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12413:9:17","nodeType":"YulTypedName","src":"12413:9:17","type":""},{"name":"dataEnd","nativeSrc":"12424:7:17","nodeType":"YulTypedName","src":"12424:7:17","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12436:6:17","nodeType":"YulTypedName","src":"12436:6:17","type":""},{"name":"value1","nativeSrc":"12444:6:17","nodeType":"YulTypedName","src":"12444:6:17","type":""},{"name":"value2","nativeSrc":"12452:6:17","nodeType":"YulTypedName","src":"12452:6:17","type":""},{"name":"value3","nativeSrc":"12460:6:17","nodeType":"YulTypedName","src":"12460:6:17","type":""},{"name":"value4","nativeSrc":"12468:6:17","nodeType":"YulTypedName","src":"12468:6:17","type":""},{"name":"value5","nativeSrc":"12476:6:17","nodeType":"YulTypedName","src":"12476:6:17","type":""},{"name":"value6","nativeSrc":"12484:6:17","nodeType":"YulTypedName","src":"12484:6:17","type":""},{"name":"value7","nativeSrc":"12492:6:17","nodeType":"YulTypedName","src":"12492:6:17","type":""}],"src":"12314:1349:17"},{"body":{"nativeSrc":"13823:288:17","nodeType":"YulBlock","src":"13823:288:17","statements":[{"nativeSrc":"13833:26:17","nodeType":"YulAssignment","src":"13833:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"13845:9:17","nodeType":"YulIdentifier","src":"13845:9:17"},{"kind":"number","nativeSrc":"13856:2:17","nodeType":"YulLiteral","src":"13856:2:17","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13841:3:17","nodeType":"YulIdentifier","src":"13841:3:17"},"nativeSrc":"13841:18:17","nodeType":"YulFunctionCall","src":"13841:18:17"},"variableNames":[{"name":"tail","nativeSrc":"13833:4:17","nodeType":"YulIdentifier","src":"13833:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13913:6:17","nodeType":"YulIdentifier","src":"13913:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"13926:9:17","nodeType":"YulIdentifier","src":"13926:9:17"},{"kind":"number","nativeSrc":"13937:1:17","nodeType":"YulLiteral","src":"13937:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13922:3:17","nodeType":"YulIdentifier","src":"13922:3:17"},"nativeSrc":"13922:17:17","nodeType":"YulFunctionCall","src":"13922:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13869:43:17","nodeType":"YulIdentifier","src":"13869:43:17"},"nativeSrc":"13869:71:17","nodeType":"YulFunctionCall","src":"13869:71:17"},"nativeSrc":"13869:71:17","nodeType":"YulExpressionStatement","src":"13869:71:17"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13994:6:17","nodeType":"YulIdentifier","src":"13994:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"14007:9:17","nodeType":"YulIdentifier","src":"14007:9:17"},{"kind":"number","nativeSrc":"14018:2:17","nodeType":"YulLiteral","src":"14018:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14003:3:17","nodeType":"YulIdentifier","src":"14003:3:17"},"nativeSrc":"14003:18:17","nodeType":"YulFunctionCall","src":"14003:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13950:43:17","nodeType":"YulIdentifier","src":"13950:43:17"},"nativeSrc":"13950:72:17","nodeType":"YulFunctionCall","src":"13950:72:17"},"nativeSrc":"13950:72:17","nodeType":"YulExpressionStatement","src":"13950:72:17"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"14076:6:17","nodeType":"YulIdentifier","src":"14076:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"14089:9:17","nodeType":"YulIdentifier","src":"14089:9:17"},{"kind":"number","nativeSrc":"14100:2:17","nodeType":"YulLiteral","src":"14100:2:17","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14085:3:17","nodeType":"YulIdentifier","src":"14085:3:17"},"nativeSrc":"14085:18:17","nodeType":"YulFunctionCall","src":"14085:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14032:43:17","nodeType":"YulIdentifier","src":"14032:43:17"},"nativeSrc":"14032:72:17","nodeType":"YulFunctionCall","src":"14032:72:17"},"nativeSrc":"14032:72:17","nodeType":"YulExpressionStatement","src":"14032:72:17"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"13669:442:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13779:9:17","nodeType":"YulTypedName","src":"13779:9:17","type":""},{"name":"value2","nativeSrc":"13791:6:17","nodeType":"YulTypedName","src":"13791:6:17","type":""},{"name":"value1","nativeSrc":"13799:6:17","nodeType":"YulTypedName","src":"13799:6:17","type":""},{"name":"value0","nativeSrc":"13807:6:17","nodeType":"YulTypedName","src":"13807:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13818:4:17","nodeType":"YulTypedName","src":"13818:4:17","type":""}],"src":"13669:442:17"},{"body":{"nativeSrc":"14145:152:17","nodeType":"YulBlock","src":"14145:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14162:1:17","nodeType":"YulLiteral","src":"14162:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"14165:77:17","nodeType":"YulLiteral","src":"14165:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"14155:6:17","nodeType":"YulIdentifier","src":"14155:6:17"},"nativeSrc":"14155:88:17","nodeType":"YulFunctionCall","src":"14155:88:17"},"nativeSrc":"14155:88:17","nodeType":"YulExpressionStatement","src":"14155:88:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14259:1:17","nodeType":"YulLiteral","src":"14259:1:17","type":"","value":"4"},{"kind":"number","nativeSrc":"14262:4:17","nodeType":"YulLiteral","src":"14262:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"14252:6:17","nodeType":"YulIdentifier","src":"14252:6:17"},"nativeSrc":"14252:15:17","nodeType":"YulFunctionCall","src":"14252:15:17"},"nativeSrc":"14252:15:17","nodeType":"YulExpressionStatement","src":"14252:15:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14283:1:17","nodeType":"YulLiteral","src":"14283:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"14286:4:17","nodeType":"YulLiteral","src":"14286:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"14276:6:17","nodeType":"YulIdentifier","src":"14276:6:17"},"nativeSrc":"14276:15:17","nodeType":"YulFunctionCall","src":"14276:15:17"},"nativeSrc":"14276:15:17","nodeType":"YulExpressionStatement","src":"14276:15:17"}]},"name":"panic_error_0x11","nativeSrc":"14117:180:17","nodeType":"YulFunctionDefinition","src":"14117:180:17"},{"body":{"nativeSrc":"14351:362:17","nodeType":"YulBlock","src":"14351:362:17","statements":[{"nativeSrc":"14361:25:17","nodeType":"YulAssignment","src":"14361:25:17","value":{"arguments":[{"name":"x","nativeSrc":"14384:1:17","nodeType":"YulIdentifier","src":"14384:1:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14366:17:17","nodeType":"YulIdentifier","src":"14366:17:17"},"nativeSrc":"14366:20:17","nodeType":"YulFunctionCall","src":"14366:20:17"},"variableNames":[{"name":"x","nativeSrc":"14361:1:17","nodeType":"YulIdentifier","src":"14361:1:17"}]},{"nativeSrc":"14395:25:17","nodeType":"YulAssignment","src":"14395:25:17","value":{"arguments":[{"name":"y","nativeSrc":"14418:1:17","nodeType":"YulIdentifier","src":"14418:1:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14400:17:17","nodeType":"YulIdentifier","src":"14400:17:17"},"nativeSrc":"14400:20:17","nodeType":"YulFunctionCall","src":"14400:20:17"},"variableNames":[{"name":"y","nativeSrc":"14395:1:17","nodeType":"YulIdentifier","src":"14395:1:17"}]},{"nativeSrc":"14429:28:17","nodeType":"YulVariableDeclaration","src":"14429:28:17","value":{"arguments":[{"name":"x","nativeSrc":"14452:1:17","nodeType":"YulIdentifier","src":"14452:1:17"},{"name":"y","nativeSrc":"14455:1:17","nodeType":"YulIdentifier","src":"14455:1:17"}],"functionName":{"name":"mul","nativeSrc":"14448:3:17","nodeType":"YulIdentifier","src":"14448:3:17"},"nativeSrc":"14448:9:17","nodeType":"YulFunctionCall","src":"14448:9:17"},"variables":[{"name":"product_raw","nativeSrc":"14433:11:17","nodeType":"YulTypedName","src":"14433:11:17","type":""}]},{"nativeSrc":"14466:41:17","nodeType":"YulAssignment","src":"14466:41:17","value":{"arguments":[{"name":"product_raw","nativeSrc":"14495:11:17","nodeType":"YulIdentifier","src":"14495:11:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14477:17:17","nodeType":"YulIdentifier","src":"14477:17:17"},"nativeSrc":"14477:30:17","nodeType":"YulFunctionCall","src":"14477:30:17"},"variableNames":[{"name":"product","nativeSrc":"14466:7:17","nodeType":"YulIdentifier","src":"14466:7:17"}]},{"body":{"nativeSrc":"14684:22:17","nodeType":"YulBlock","src":"14684:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"14686:16:17","nodeType":"YulIdentifier","src":"14686:16:17"},"nativeSrc":"14686:18:17","nodeType":"YulFunctionCall","src":"14686:18:17"},"nativeSrc":"14686:18:17","nodeType":"YulExpressionStatement","src":"14686:18:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"14617:1:17","nodeType":"YulIdentifier","src":"14617:1:17"}],"functionName":{"name":"iszero","nativeSrc":"14610:6:17","nodeType":"YulIdentifier","src":"14610:6:17"},"nativeSrc":"14610:9:17","nodeType":"YulFunctionCall","src":"14610:9:17"},{"arguments":[{"name":"y","nativeSrc":"14640:1:17","nodeType":"YulIdentifier","src":"14640:1:17"},{"arguments":[{"name":"product","nativeSrc":"14647:7:17","nodeType":"YulIdentifier","src":"14647:7:17"},{"name":"x","nativeSrc":"14656:1:17","nodeType":"YulIdentifier","src":"14656:1:17"}],"functionName":{"name":"div","nativeSrc":"14643:3:17","nodeType":"YulIdentifier","src":"14643:3:17"},"nativeSrc":"14643:15:17","nodeType":"YulFunctionCall","src":"14643:15:17"}],"functionName":{"name":"eq","nativeSrc":"14637:2:17","nodeType":"YulIdentifier","src":"14637:2:17"},"nativeSrc":"14637:22:17","nodeType":"YulFunctionCall","src":"14637:22:17"}],"functionName":{"name":"or","nativeSrc":"14590:2:17","nodeType":"YulIdentifier","src":"14590:2:17"},"nativeSrc":"14590:83:17","nodeType":"YulFunctionCall","src":"14590:83:17"}],"functionName":{"name":"iszero","nativeSrc":"14570:6:17","nodeType":"YulIdentifier","src":"14570:6:17"},"nativeSrc":"14570:113:17","nodeType":"YulFunctionCall","src":"14570:113:17"},"nativeSrc":"14567:139:17","nodeType":"YulIf","src":"14567:139:17"}]},"name":"checked_mul_t_uint256","nativeSrc":"14303:410:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"14334:1:17","nodeType":"YulTypedName","src":"14334:1:17","type":""},{"name":"y","nativeSrc":"14337:1:17","nodeType":"YulTypedName","src":"14337:1:17","type":""}],"returnVariables":[{"name":"product","nativeSrc":"14343:7:17","nodeType":"YulTypedName","src":"14343:7:17","type":""}],"src":"14303:410:17"},{"body":{"nativeSrc":"14763:147:17","nodeType":"YulBlock","src":"14763:147:17","statements":[{"nativeSrc":"14773:25:17","nodeType":"YulAssignment","src":"14773:25:17","value":{"arguments":[{"name":"x","nativeSrc":"14796:1:17","nodeType":"YulIdentifier","src":"14796:1:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14778:17:17","nodeType":"YulIdentifier","src":"14778:17:17"},"nativeSrc":"14778:20:17","nodeType":"YulFunctionCall","src":"14778:20:17"},"variableNames":[{"name":"x","nativeSrc":"14773:1:17","nodeType":"YulIdentifier","src":"14773:1:17"}]},{"nativeSrc":"14807:25:17","nodeType":"YulAssignment","src":"14807:25:17","value":{"arguments":[{"name":"y","nativeSrc":"14830:1:17","nodeType":"YulIdentifier","src":"14830:1:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14812:17:17","nodeType":"YulIdentifier","src":"14812:17:17"},"nativeSrc":"14812:20:17","nodeType":"YulFunctionCall","src":"14812:20:17"},"variableNames":[{"name":"y","nativeSrc":"14807:1:17","nodeType":"YulIdentifier","src":"14807:1:17"}]},{"nativeSrc":"14841:16:17","nodeType":"YulAssignment","src":"14841:16:17","value":{"arguments":[{"name":"x","nativeSrc":"14852:1:17","nodeType":"YulIdentifier","src":"14852:1:17"},{"name":"y","nativeSrc":"14855:1:17","nodeType":"YulIdentifier","src":"14855:1:17"}],"functionName":{"name":"add","nativeSrc":"14848:3:17","nodeType":"YulIdentifier","src":"14848:3:17"},"nativeSrc":"14848:9:17","nodeType":"YulFunctionCall","src":"14848:9:17"},"variableNames":[{"name":"sum","nativeSrc":"14841:3:17","nodeType":"YulIdentifier","src":"14841:3:17"}]},{"body":{"nativeSrc":"14881:22:17","nodeType":"YulBlock","src":"14881:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"14883:16:17","nodeType":"YulIdentifier","src":"14883:16:17"},"nativeSrc":"14883:18:17","nodeType":"YulFunctionCall","src":"14883:18:17"},"nativeSrc":"14883:18:17","nodeType":"YulExpressionStatement","src":"14883:18:17"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"14873:1:17","nodeType":"YulIdentifier","src":"14873:1:17"},{"name":"sum","nativeSrc":"14876:3:17","nodeType":"YulIdentifier","src":"14876:3:17"}],"functionName":{"name":"gt","nativeSrc":"14870:2:17","nodeType":"YulIdentifier","src":"14870:2:17"},"nativeSrc":"14870:10:17","nodeType":"YulFunctionCall","src":"14870:10:17"},"nativeSrc":"14867:36:17","nodeType":"YulIf","src":"14867:36:17"}]},"name":"checked_add_t_uint256","nativeSrc":"14719:191:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"14750:1:17","nodeType":"YulTypedName","src":"14750:1:17","type":""},{"name":"y","nativeSrc":"14753:1:17","nodeType":"YulTypedName","src":"14753:1:17","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"14759:3:17","nodeType":"YulTypedName","src":"14759:3:17","type":""}],"src":"14719:191:17"},{"body":{"nativeSrc":"15022:55:17","nodeType":"YulBlock","src":"15022:55:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15044:6:17","nodeType":"YulIdentifier","src":"15044:6:17"},{"kind":"number","nativeSrc":"15052:1:17","nodeType":"YulLiteral","src":"15052:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15040:3:17","nodeType":"YulIdentifier","src":"15040:3:17"},"nativeSrc":"15040:14:17","nodeType":"YulFunctionCall","src":"15040:14:17"},{"hexValue":"4e6f206469766973696f6e","kind":"string","nativeSrc":"15056:13:17","nodeType":"YulLiteral","src":"15056:13:17","type":"","value":"No division"}],"functionName":{"name":"mstore","nativeSrc":"15033:6:17","nodeType":"YulIdentifier","src":"15033:6:17"},"nativeSrc":"15033:37:17","nodeType":"YulFunctionCall","src":"15033:37:17"},"nativeSrc":"15033:37:17","nodeType":"YulExpressionStatement","src":"15033:37:17"}]},"name":"store_literal_in_memory_ef454a3ea0c22f8d07b6c481320b7d1deed66223e2a6ddc7d2fc84c6da989b8d","nativeSrc":"14916:161:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"15014:6:17","nodeType":"YulTypedName","src":"15014:6:17","type":""}],"src":"14916:161:17"},{"body":{"nativeSrc":"15229:220:17","nodeType":"YulBlock","src":"15229:220:17","statements":[{"nativeSrc":"15239:74:17","nodeType":"YulAssignment","src":"15239:74:17","value":{"arguments":[{"name":"pos","nativeSrc":"15305:3:17","nodeType":"YulIdentifier","src":"15305:3:17"},{"kind":"number","nativeSrc":"15310:2:17","nodeType":"YulLiteral","src":"15310:2:17","type":"","value":"11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"15246:58:17","nodeType":"YulIdentifier","src":"15246:58:17"},"nativeSrc":"15246:67:17","nodeType":"YulFunctionCall","src":"15246:67:17"},"variableNames":[{"name":"pos","nativeSrc":"15239:3:17","nodeType":"YulIdentifier","src":"15239:3:17"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"15411:3:17","nodeType":"YulIdentifier","src":"15411:3:17"}],"functionName":{"name":"store_literal_in_memory_ef454a3ea0c22f8d07b6c481320b7d1deed66223e2a6ddc7d2fc84c6da989b8d","nativeSrc":"15322:88:17","nodeType":"YulIdentifier","src":"15322:88:17"},"nativeSrc":"15322:93:17","nodeType":"YulFunctionCall","src":"15322:93:17"},"nativeSrc":"15322:93:17","nodeType":"YulExpressionStatement","src":"15322:93:17"},{"nativeSrc":"15424:19:17","nodeType":"YulAssignment","src":"15424:19:17","value":{"arguments":[{"name":"pos","nativeSrc":"15435:3:17","nodeType":"YulIdentifier","src":"15435:3:17"},{"kind":"number","nativeSrc":"15440:2:17","nodeType":"YulLiteral","src":"15440:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15431:3:17","nodeType":"YulIdentifier","src":"15431:3:17"},"nativeSrc":"15431:12:17","nodeType":"YulFunctionCall","src":"15431:12:17"},"variableNames":[{"name":"end","nativeSrc":"15424:3:17","nodeType":"YulIdentifier","src":"15424:3:17"}]}]},"name":"abi_encode_t_stringliteral_ef454a3ea0c22f8d07b6c481320b7d1deed66223e2a6ddc7d2fc84c6da989b8d_to_t_string_memory_ptr_fromStack","nativeSrc":"15083:366:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15217:3:17","nodeType":"YulTypedName","src":"15217:3:17","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15225:3:17","nodeType":"YulTypedName","src":"15225:3:17","type":""}],"src":"15083:366:17"},{"body":{"nativeSrc":"15626:248:17","nodeType":"YulBlock","src":"15626:248:17","statements":[{"nativeSrc":"15636:26:17","nodeType":"YulAssignment","src":"15636:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"15648:9:17","nodeType":"YulIdentifier","src":"15648:9:17"},{"kind":"number","nativeSrc":"15659:2:17","nodeType":"YulLiteral","src":"15659:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15644:3:17","nodeType":"YulIdentifier","src":"15644:3:17"},"nativeSrc":"15644:18:17","nodeType":"YulFunctionCall","src":"15644:18:17"},"variableNames":[{"name":"tail","nativeSrc":"15636:4:17","nodeType":"YulIdentifier","src":"15636:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15683:9:17","nodeType":"YulIdentifier","src":"15683:9:17"},{"kind":"number","nativeSrc":"15694:1:17","nodeType":"YulLiteral","src":"15694:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15679:3:17","nodeType":"YulIdentifier","src":"15679:3:17"},"nativeSrc":"15679:17:17","nodeType":"YulFunctionCall","src":"15679:17:17"},{"arguments":[{"name":"tail","nativeSrc":"15702:4:17","nodeType":"YulIdentifier","src":"15702:4:17"},{"name":"headStart","nativeSrc":"15708:9:17","nodeType":"YulIdentifier","src":"15708:9:17"}],"functionName":{"name":"sub","nativeSrc":"15698:3:17","nodeType":"YulIdentifier","src":"15698:3:17"},"nativeSrc":"15698:20:17","nodeType":"YulFunctionCall","src":"15698:20:17"}],"functionName":{"name":"mstore","nativeSrc":"15672:6:17","nodeType":"YulIdentifier","src":"15672:6:17"},"nativeSrc":"15672:47:17","nodeType":"YulFunctionCall","src":"15672:47:17"},"nativeSrc":"15672:47:17","nodeType":"YulExpressionStatement","src":"15672:47:17"},{"nativeSrc":"15728:139:17","nodeType":"YulAssignment","src":"15728:139:17","value":{"arguments":[{"name":"tail","nativeSrc":"15862:4:17","nodeType":"YulIdentifier","src":"15862:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_ef454a3ea0c22f8d07b6c481320b7d1deed66223e2a6ddc7d2fc84c6da989b8d_to_t_string_memory_ptr_fromStack","nativeSrc":"15736:124:17","nodeType":"YulIdentifier","src":"15736:124:17"},"nativeSrc":"15736:131:17","nodeType":"YulFunctionCall","src":"15736:131:17"},"variableNames":[{"name":"tail","nativeSrc":"15728:4:17","nodeType":"YulIdentifier","src":"15728:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_ef454a3ea0c22f8d07b6c481320b7d1deed66223e2a6ddc7d2fc84c6da989b8d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15455:419:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15606:9:17","nodeType":"YulTypedName","src":"15606:9:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15621:4:17","nodeType":"YulTypedName","src":"15621:4:17","type":""}],"src":"15455:419:17"},{"body":{"nativeSrc":"15908:152:17","nodeType":"YulBlock","src":"15908:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15925:1:17","nodeType":"YulLiteral","src":"15925:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"15928:77:17","nodeType":"YulLiteral","src":"15928:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"15918:6:17","nodeType":"YulIdentifier","src":"15918:6:17"},"nativeSrc":"15918:88:17","nodeType":"YulFunctionCall","src":"15918:88:17"},"nativeSrc":"15918:88:17","nodeType":"YulExpressionStatement","src":"15918:88:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16022:1:17","nodeType":"YulLiteral","src":"16022:1:17","type":"","value":"4"},{"kind":"number","nativeSrc":"16025:4:17","nodeType":"YulLiteral","src":"16025:4:17","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"16015:6:17","nodeType":"YulIdentifier","src":"16015:6:17"},"nativeSrc":"16015:15:17","nodeType":"YulFunctionCall","src":"16015:15:17"},"nativeSrc":"16015:15:17","nodeType":"YulExpressionStatement","src":"16015:15:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16046:1:17","nodeType":"YulLiteral","src":"16046:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"16049:4:17","nodeType":"YulLiteral","src":"16049:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"16039:6:17","nodeType":"YulIdentifier","src":"16039:6:17"},"nativeSrc":"16039:15:17","nodeType":"YulFunctionCall","src":"16039:15:17"},"nativeSrc":"16039:15:17","nodeType":"YulExpressionStatement","src":"16039:15:17"}]},"name":"panic_error_0x12","nativeSrc":"15880:180:17","nodeType":"YulFunctionDefinition","src":"15880:180:17"},{"body":{"nativeSrc":"16108:143:17","nodeType":"YulBlock","src":"16108:143:17","statements":[{"nativeSrc":"16118:25:17","nodeType":"YulAssignment","src":"16118:25:17","value":{"arguments":[{"name":"x","nativeSrc":"16141:1:17","nodeType":"YulIdentifier","src":"16141:1:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"16123:17:17","nodeType":"YulIdentifier","src":"16123:17:17"},"nativeSrc":"16123:20:17","nodeType":"YulFunctionCall","src":"16123:20:17"},"variableNames":[{"name":"x","nativeSrc":"16118:1:17","nodeType":"YulIdentifier","src":"16118:1:17"}]},{"nativeSrc":"16152:25:17","nodeType":"YulAssignment","src":"16152:25:17","value":{"arguments":[{"name":"y","nativeSrc":"16175:1:17","nodeType":"YulIdentifier","src":"16175:1:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"16157:17:17","nodeType":"YulIdentifier","src":"16157:17:17"},"nativeSrc":"16157:20:17","nodeType":"YulFunctionCall","src":"16157:20:17"},"variableNames":[{"name":"y","nativeSrc":"16152:1:17","nodeType":"YulIdentifier","src":"16152:1:17"}]},{"body":{"nativeSrc":"16199:22:17","nodeType":"YulBlock","src":"16199:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"16201:16:17","nodeType":"YulIdentifier","src":"16201:16:17"},"nativeSrc":"16201:18:17","nodeType":"YulFunctionCall","src":"16201:18:17"},"nativeSrc":"16201:18:17","nodeType":"YulExpressionStatement","src":"16201:18:17"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"16196:1:17","nodeType":"YulIdentifier","src":"16196:1:17"}],"functionName":{"name":"iszero","nativeSrc":"16189:6:17","nodeType":"YulIdentifier","src":"16189:6:17"},"nativeSrc":"16189:9:17","nodeType":"YulFunctionCall","src":"16189:9:17"},"nativeSrc":"16186:35:17","nodeType":"YulIf","src":"16186:35:17"},{"nativeSrc":"16231:14:17","nodeType":"YulAssignment","src":"16231:14:17","value":{"arguments":[{"name":"x","nativeSrc":"16240:1:17","nodeType":"YulIdentifier","src":"16240:1:17"},{"name":"y","nativeSrc":"16243:1:17","nodeType":"YulIdentifier","src":"16243:1:17"}],"functionName":{"name":"div","nativeSrc":"16236:3:17","nodeType":"YulIdentifier","src":"16236:3:17"},"nativeSrc":"16236:9:17","nodeType":"YulFunctionCall","src":"16236:9:17"},"variableNames":[{"name":"r","nativeSrc":"16231:1:17","nodeType":"YulIdentifier","src":"16231:1:17"}]}]},"name":"checked_div_t_uint256","nativeSrc":"16066:185:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"16097:1:17","nodeType":"YulTypedName","src":"16097:1:17","type":""},{"name":"y","nativeSrc":"16100:1:17","nodeType":"YulTypedName","src":"16100:1:17","type":""}],"returnVariables":[{"name":"r","nativeSrc":"16106:1:17","nodeType":"YulTypedName","src":"16106:1:17","type":""}],"src":"16066:185:17"},{"body":{"nativeSrc":"16285:152:17","nodeType":"YulBlock","src":"16285:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16302:1:17","nodeType":"YulLiteral","src":"16302:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"16305:77:17","nodeType":"YulLiteral","src":"16305:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"16295:6:17","nodeType":"YulIdentifier","src":"16295:6:17"},"nativeSrc":"16295:88:17","nodeType":"YulFunctionCall","src":"16295:88:17"},"nativeSrc":"16295:88:17","nodeType":"YulExpressionStatement","src":"16295:88:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16399:1:17","nodeType":"YulLiteral","src":"16399:1:17","type":"","value":"4"},{"kind":"number","nativeSrc":"16402:4:17","nodeType":"YulLiteral","src":"16402:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"16392:6:17","nodeType":"YulIdentifier","src":"16392:6:17"},"nativeSrc":"16392:15:17","nodeType":"YulFunctionCall","src":"16392:15:17"},"nativeSrc":"16392:15:17","nodeType":"YulExpressionStatement","src":"16392:15:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16423:1:17","nodeType":"YulLiteral","src":"16423:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"16426:4:17","nodeType":"YulLiteral","src":"16426:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"16416:6:17","nodeType":"YulIdentifier","src":"16416:6:17"},"nativeSrc":"16416:15:17","nodeType":"YulFunctionCall","src":"16416:15:17"},"nativeSrc":"16416:15:17","nodeType":"YulExpressionStatement","src":"16416:15:17"}]},"name":"panic_error_0x22","nativeSrc":"16257:180:17","nodeType":"YulFunctionDefinition","src":"16257:180:17"},{"body":{"nativeSrc":"16494:269:17","nodeType":"YulBlock","src":"16494:269:17","statements":[{"nativeSrc":"16504:22:17","nodeType":"YulAssignment","src":"16504:22:17","value":{"arguments":[{"name":"data","nativeSrc":"16518:4:17","nodeType":"YulIdentifier","src":"16518:4:17"},{"kind":"number","nativeSrc":"16524:1:17","nodeType":"YulLiteral","src":"16524:1:17","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"16514:3:17","nodeType":"YulIdentifier","src":"16514:3:17"},"nativeSrc":"16514:12:17","nodeType":"YulFunctionCall","src":"16514:12:17"},"variableNames":[{"name":"length","nativeSrc":"16504:6:17","nodeType":"YulIdentifier","src":"16504:6:17"}]},{"nativeSrc":"16535:38:17","nodeType":"YulVariableDeclaration","src":"16535:38:17","value":{"arguments":[{"name":"data","nativeSrc":"16565:4:17","nodeType":"YulIdentifier","src":"16565:4:17"},{"kind":"number","nativeSrc":"16571:1:17","nodeType":"YulLiteral","src":"16571:1:17","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"16561:3:17","nodeType":"YulIdentifier","src":"16561:3:17"},"nativeSrc":"16561:12:17","nodeType":"YulFunctionCall","src":"16561:12:17"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"16539:18:17","nodeType":"YulTypedName","src":"16539:18:17","type":""}]},{"body":{"nativeSrc":"16612:51:17","nodeType":"YulBlock","src":"16612:51:17","statements":[{"nativeSrc":"16626:27:17","nodeType":"YulAssignment","src":"16626:27:17","value":{"arguments":[{"name":"length","nativeSrc":"16640:6:17","nodeType":"YulIdentifier","src":"16640:6:17"},{"kind":"number","nativeSrc":"16648:4:17","nodeType":"YulLiteral","src":"16648:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"16636:3:17","nodeType":"YulIdentifier","src":"16636:3:17"},"nativeSrc":"16636:17:17","nodeType":"YulFunctionCall","src":"16636:17:17"},"variableNames":[{"name":"length","nativeSrc":"16626:6:17","nodeType":"YulIdentifier","src":"16626:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"16592:18:17","nodeType":"YulIdentifier","src":"16592:18:17"}],"functionName":{"name":"iszero","nativeSrc":"16585:6:17","nodeType":"YulIdentifier","src":"16585:6:17"},"nativeSrc":"16585:26:17","nodeType":"YulFunctionCall","src":"16585:26:17"},"nativeSrc":"16582:81:17","nodeType":"YulIf","src":"16582:81:17"},{"body":{"nativeSrc":"16715:42:17","nodeType":"YulBlock","src":"16715:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"16729:16:17","nodeType":"YulIdentifier","src":"16729:16:17"},"nativeSrc":"16729:18:17","nodeType":"YulFunctionCall","src":"16729:18:17"},"nativeSrc":"16729:18:17","nodeType":"YulExpressionStatement","src":"16729:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"16679:18:17","nodeType":"YulIdentifier","src":"16679:18:17"},{"arguments":[{"name":"length","nativeSrc":"16702:6:17","nodeType":"YulIdentifier","src":"16702:6:17"},{"kind":"number","nativeSrc":"16710:2:17","nodeType":"YulLiteral","src":"16710:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"16699:2:17","nodeType":"YulIdentifier","src":"16699:2:17"},"nativeSrc":"16699:14:17","nodeType":"YulFunctionCall","src":"16699:14:17"}],"functionName":{"name":"eq","nativeSrc":"16676:2:17","nodeType":"YulIdentifier","src":"16676:2:17"},"nativeSrc":"16676:38:17","nodeType":"YulFunctionCall","src":"16676:38:17"},"nativeSrc":"16673:84:17","nodeType":"YulIf","src":"16673:84:17"}]},"name":"extract_byte_array_length","nativeSrc":"16443:320:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"16478:4:17","nodeType":"YulTypedName","src":"16478:4:17","type":""}],"returnVariables":[{"name":"length","nativeSrc":"16487:6:17","nodeType":"YulTypedName","src":"16487:6:17","type":""}],"src":"16443:320:17"},{"body":{"nativeSrc":"16875:59:17","nodeType":"YulBlock","src":"16875:59:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"16897:6:17","nodeType":"YulIdentifier","src":"16897:6:17"},{"kind":"number","nativeSrc":"16905:1:17","nodeType":"YulLiteral","src":"16905:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16893:3:17","nodeType":"YulIdentifier","src":"16893:3:17"},"nativeSrc":"16893:14:17","nodeType":"YulFunctionCall","src":"16893:14:17"},{"hexValue":"446561646c696e6520706173736564","kind":"string","nativeSrc":"16909:17:17","nodeType":"YulLiteral","src":"16909:17:17","type":"","value":"Deadline passed"}],"functionName":{"name":"mstore","nativeSrc":"16886:6:17","nodeType":"YulIdentifier","src":"16886:6:17"},"nativeSrc":"16886:41:17","nodeType":"YulFunctionCall","src":"16886:41:17"},"nativeSrc":"16886:41:17","nodeType":"YulExpressionStatement","src":"16886:41:17"}]},"name":"store_literal_in_memory_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f","nativeSrc":"16769:165:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"16867:6:17","nodeType":"YulTypedName","src":"16867:6:17","type":""}],"src":"16769:165:17"},{"body":{"nativeSrc":"17086:220:17","nodeType":"YulBlock","src":"17086:220:17","statements":[{"nativeSrc":"17096:74:17","nodeType":"YulAssignment","src":"17096:74:17","value":{"arguments":[{"name":"pos","nativeSrc":"17162:3:17","nodeType":"YulIdentifier","src":"17162:3:17"},{"kind":"number","nativeSrc":"17167:2:17","nodeType":"YulLiteral","src":"17167:2:17","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"17103:58:17","nodeType":"YulIdentifier","src":"17103:58:17"},"nativeSrc":"17103:67:17","nodeType":"YulFunctionCall","src":"17103:67:17"},"variableNames":[{"name":"pos","nativeSrc":"17096:3:17","nodeType":"YulIdentifier","src":"17096:3:17"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"17268:3:17","nodeType":"YulIdentifier","src":"17268:3:17"}],"functionName":{"name":"store_literal_in_memory_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f","nativeSrc":"17179:88:17","nodeType":"YulIdentifier","src":"17179:88:17"},"nativeSrc":"17179:93:17","nodeType":"YulFunctionCall","src":"17179:93:17"},"nativeSrc":"17179:93:17","nodeType":"YulExpressionStatement","src":"17179:93:17"},{"nativeSrc":"17281:19:17","nodeType":"YulAssignment","src":"17281:19:17","value":{"arguments":[{"name":"pos","nativeSrc":"17292:3:17","nodeType":"YulIdentifier","src":"17292:3:17"},{"kind":"number","nativeSrc":"17297:2:17","nodeType":"YulLiteral","src":"17297:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17288:3:17","nodeType":"YulIdentifier","src":"17288:3:17"},"nativeSrc":"17288:12:17","nodeType":"YulFunctionCall","src":"17288:12:17"},"variableNames":[{"name":"end","nativeSrc":"17281:3:17","nodeType":"YulIdentifier","src":"17281:3:17"}]}]},"name":"abi_encode_t_stringliteral_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f_to_t_string_memory_ptr_fromStack","nativeSrc":"16940:366:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17074:3:17","nodeType":"YulTypedName","src":"17074:3:17","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17082:3:17","nodeType":"YulTypedName","src":"17082:3:17","type":""}],"src":"16940:366:17"},{"body":{"nativeSrc":"17483:248:17","nodeType":"YulBlock","src":"17483:248:17","statements":[{"nativeSrc":"17493:26:17","nodeType":"YulAssignment","src":"17493:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"17505:9:17","nodeType":"YulIdentifier","src":"17505:9:17"},{"kind":"number","nativeSrc":"17516:2:17","nodeType":"YulLiteral","src":"17516:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17501:3:17","nodeType":"YulIdentifier","src":"17501:3:17"},"nativeSrc":"17501:18:17","nodeType":"YulFunctionCall","src":"17501:18:17"},"variableNames":[{"name":"tail","nativeSrc":"17493:4:17","nodeType":"YulIdentifier","src":"17493:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17540:9:17","nodeType":"YulIdentifier","src":"17540:9:17"},{"kind":"number","nativeSrc":"17551:1:17","nodeType":"YulLiteral","src":"17551:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17536:3:17","nodeType":"YulIdentifier","src":"17536:3:17"},"nativeSrc":"17536:17:17","nodeType":"YulFunctionCall","src":"17536:17:17"},{"arguments":[{"name":"tail","nativeSrc":"17559:4:17","nodeType":"YulIdentifier","src":"17559:4:17"},{"name":"headStart","nativeSrc":"17565:9:17","nodeType":"YulIdentifier","src":"17565:9:17"}],"functionName":{"name":"sub","nativeSrc":"17555:3:17","nodeType":"YulIdentifier","src":"17555:3:17"},"nativeSrc":"17555:20:17","nodeType":"YulFunctionCall","src":"17555:20:17"}],"functionName":{"name":"mstore","nativeSrc":"17529:6:17","nodeType":"YulIdentifier","src":"17529:6:17"},"nativeSrc":"17529:47:17","nodeType":"YulFunctionCall","src":"17529:47:17"},"nativeSrc":"17529:47:17","nodeType":"YulExpressionStatement","src":"17529:47:17"},{"nativeSrc":"17585:139:17","nodeType":"YulAssignment","src":"17585:139:17","value":{"arguments":[{"name":"tail","nativeSrc":"17719:4:17","nodeType":"YulIdentifier","src":"17719:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f_to_t_string_memory_ptr_fromStack","nativeSrc":"17593:124:17","nodeType":"YulIdentifier","src":"17593:124:17"},"nativeSrc":"17593:131:17","nodeType":"YulFunctionCall","src":"17593:131:17"},"variableNames":[{"name":"tail","nativeSrc":"17585:4:17","nodeType":"YulIdentifier","src":"17585:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17312:419:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17463:9:17","nodeType":"YulTypedName","src":"17463:9:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17478:4:17","nodeType":"YulTypedName","src":"17478:4:17","type":""}],"src":"17312:419:17"},{"body":{"nativeSrc":"17843:56:17","nodeType":"YulBlock","src":"17843:56:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17865:6:17","nodeType":"YulIdentifier","src":"17865:6:17"},{"kind":"number","nativeSrc":"17873:1:17","nodeType":"YulLiteral","src":"17873:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17861:3:17","nodeType":"YulIdentifier","src":"17861:3:17"},"nativeSrc":"17861:14:17","nodeType":"YulFunctionCall","src":"17861:14:17"},{"hexValue":"496e76616c69642070617468","kind":"string","nativeSrc":"17877:14:17","nodeType":"YulLiteral","src":"17877:14:17","type":"","value":"Invalid path"}],"functionName":{"name":"mstore","nativeSrc":"17854:6:17","nodeType":"YulIdentifier","src":"17854:6:17"},"nativeSrc":"17854:38:17","nodeType":"YulFunctionCall","src":"17854:38:17"},"nativeSrc":"17854:38:17","nodeType":"YulExpressionStatement","src":"17854:38:17"}]},"name":"store_literal_in_memory_6eaf91a30795816d7b5ab342a2ebdd69fbc6fb670d48889a575f3f685dfb42c8","nativeSrc":"17737:162:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"17835:6:17","nodeType":"YulTypedName","src":"17835:6:17","type":""}],"src":"17737:162:17"},{"body":{"nativeSrc":"18051:220:17","nodeType":"YulBlock","src":"18051:220:17","statements":[{"nativeSrc":"18061:74:17","nodeType":"YulAssignment","src":"18061:74:17","value":{"arguments":[{"name":"pos","nativeSrc":"18127:3:17","nodeType":"YulIdentifier","src":"18127:3:17"},{"kind":"number","nativeSrc":"18132:2:17","nodeType":"YulLiteral","src":"18132:2:17","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"18068:58:17","nodeType":"YulIdentifier","src":"18068:58:17"},"nativeSrc":"18068:67:17","nodeType":"YulFunctionCall","src":"18068:67:17"},"variableNames":[{"name":"pos","nativeSrc":"18061:3:17","nodeType":"YulIdentifier","src":"18061:3:17"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"18233:3:17","nodeType":"YulIdentifier","src":"18233:3:17"}],"functionName":{"name":"store_literal_in_memory_6eaf91a30795816d7b5ab342a2ebdd69fbc6fb670d48889a575f3f685dfb42c8","nativeSrc":"18144:88:17","nodeType":"YulIdentifier","src":"18144:88:17"},"nativeSrc":"18144:93:17","nodeType":"YulFunctionCall","src":"18144:93:17"},"nativeSrc":"18144:93:17","nodeType":"YulExpressionStatement","src":"18144:93:17"},{"nativeSrc":"18246:19:17","nodeType":"YulAssignment","src":"18246:19:17","value":{"arguments":[{"name":"pos","nativeSrc":"18257:3:17","nodeType":"YulIdentifier","src":"18257:3:17"},{"kind":"number","nativeSrc":"18262:2:17","nodeType":"YulLiteral","src":"18262:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18253:3:17","nodeType":"YulIdentifier","src":"18253:3:17"},"nativeSrc":"18253:12:17","nodeType":"YulFunctionCall","src":"18253:12:17"},"variableNames":[{"name":"end","nativeSrc":"18246:3:17","nodeType":"YulIdentifier","src":"18246:3:17"}]}]},"name":"abi_encode_t_stringliteral_6eaf91a30795816d7b5ab342a2ebdd69fbc6fb670d48889a575f3f685dfb42c8_to_t_string_memory_ptr_fromStack","nativeSrc":"17905:366:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18039:3:17","nodeType":"YulTypedName","src":"18039:3:17","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18047:3:17","nodeType":"YulTypedName","src":"18047:3:17","type":""}],"src":"17905:366:17"},{"body":{"nativeSrc":"18448:248:17","nodeType":"YulBlock","src":"18448:248:17","statements":[{"nativeSrc":"18458:26:17","nodeType":"YulAssignment","src":"18458:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"18470:9:17","nodeType":"YulIdentifier","src":"18470:9:17"},{"kind":"number","nativeSrc":"18481:2:17","nodeType":"YulLiteral","src":"18481:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18466:3:17","nodeType":"YulIdentifier","src":"18466:3:17"},"nativeSrc":"18466:18:17","nodeType":"YulFunctionCall","src":"18466:18:17"},"variableNames":[{"name":"tail","nativeSrc":"18458:4:17","nodeType":"YulIdentifier","src":"18458:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18505:9:17","nodeType":"YulIdentifier","src":"18505:9:17"},{"kind":"number","nativeSrc":"18516:1:17","nodeType":"YulLiteral","src":"18516:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18501:3:17","nodeType":"YulIdentifier","src":"18501:3:17"},"nativeSrc":"18501:17:17","nodeType":"YulFunctionCall","src":"18501:17:17"},{"arguments":[{"name":"tail","nativeSrc":"18524:4:17","nodeType":"YulIdentifier","src":"18524:4:17"},{"name":"headStart","nativeSrc":"18530:9:17","nodeType":"YulIdentifier","src":"18530:9:17"}],"functionName":{"name":"sub","nativeSrc":"18520:3:17","nodeType":"YulIdentifier","src":"18520:3:17"},"nativeSrc":"18520:20:17","nodeType":"YulFunctionCall","src":"18520:20:17"}],"functionName":{"name":"mstore","nativeSrc":"18494:6:17","nodeType":"YulIdentifier","src":"18494:6:17"},"nativeSrc":"18494:47:17","nodeType":"YulFunctionCall","src":"18494:47:17"},"nativeSrc":"18494:47:17","nodeType":"YulExpressionStatement","src":"18494:47:17"},{"nativeSrc":"18550:139:17","nodeType":"YulAssignment","src":"18550:139:17","value":{"arguments":[{"name":"tail","nativeSrc":"18684:4:17","nodeType":"YulIdentifier","src":"18684:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_6eaf91a30795816d7b5ab342a2ebdd69fbc6fb670d48889a575f3f685dfb42c8_to_t_string_memory_ptr_fromStack","nativeSrc":"18558:124:17","nodeType":"YulIdentifier","src":"18558:124:17"},"nativeSrc":"18558:131:17","nodeType":"YulFunctionCall","src":"18558:131:17"},"variableNames":[{"name":"tail","nativeSrc":"18550:4:17","nodeType":"YulIdentifier","src":"18550:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_6eaf91a30795816d7b5ab342a2ebdd69fbc6fb670d48889a575f3f685dfb42c8__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18277:419:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18428:9:17","nodeType":"YulTypedName","src":"18428:9:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18443:4:17","nodeType":"YulTypedName","src":"18443:4:17","type":""}],"src":"18277:419:17"},{"body":{"nativeSrc":"18730:152:17","nodeType":"YulBlock","src":"18730:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"18747:1:17","nodeType":"YulLiteral","src":"18747:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"18750:77:17","nodeType":"YulLiteral","src":"18750:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"18740:6:17","nodeType":"YulIdentifier","src":"18740:6:17"},"nativeSrc":"18740:88:17","nodeType":"YulFunctionCall","src":"18740:88:17"},"nativeSrc":"18740:88:17","nodeType":"YulExpressionStatement","src":"18740:88:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18844:1:17","nodeType":"YulLiteral","src":"18844:1:17","type":"","value":"4"},{"kind":"number","nativeSrc":"18847:4:17","nodeType":"YulLiteral","src":"18847:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"18837:6:17","nodeType":"YulIdentifier","src":"18837:6:17"},"nativeSrc":"18837:15:17","nodeType":"YulFunctionCall","src":"18837:15:17"},"nativeSrc":"18837:15:17","nodeType":"YulExpressionStatement","src":"18837:15:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18868:1:17","nodeType":"YulLiteral","src":"18868:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"18871:4:17","nodeType":"YulLiteral","src":"18871:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"18861:6:17","nodeType":"YulIdentifier","src":"18861:6:17"},"nativeSrc":"18861:15:17","nodeType":"YulFunctionCall","src":"18861:15:17"},"nativeSrc":"18861:15:17","nodeType":"YulExpressionStatement","src":"18861:15:17"}]},"name":"panic_error_0x32","nativeSrc":"18702:180:17","nodeType":"YulFunctionDefinition","src":"18702:180:17"},{"body":{"nativeSrc":"18994:58:17","nodeType":"YulBlock","src":"18994:58:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"19016:6:17","nodeType":"YulIdentifier","src":"19016:6:17"},{"kind":"number","nativeSrc":"19024:1:17","nodeType":"YulLiteral","src":"19024:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19012:3:17","nodeType":"YulIdentifier","src":"19012:3:17"},"nativeSrc":"19012:14:17","nodeType":"YulFunctionCall","src":"19012:14:17"},{"hexValue":"496e76616c696420746f6b656e73","kind":"string","nativeSrc":"19028:16:17","nodeType":"YulLiteral","src":"19028:16:17","type":"","value":"Invalid tokens"}],"functionName":{"name":"mstore","nativeSrc":"19005:6:17","nodeType":"YulIdentifier","src":"19005:6:17"},"nativeSrc":"19005:40:17","nodeType":"YulFunctionCall","src":"19005:40:17"},"nativeSrc":"19005:40:17","nodeType":"YulExpressionStatement","src":"19005:40:17"}]},"name":"store_literal_in_memory_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3","nativeSrc":"18888:164:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"18986:6:17","nodeType":"YulTypedName","src":"18986:6:17","type":""}],"src":"18888:164:17"},{"body":{"nativeSrc":"19204:220:17","nodeType":"YulBlock","src":"19204:220:17","statements":[{"nativeSrc":"19214:74:17","nodeType":"YulAssignment","src":"19214:74:17","value":{"arguments":[{"name":"pos","nativeSrc":"19280:3:17","nodeType":"YulIdentifier","src":"19280:3:17"},{"kind":"number","nativeSrc":"19285:2:17","nodeType":"YulLiteral","src":"19285:2:17","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"19221:58:17","nodeType":"YulIdentifier","src":"19221:58:17"},"nativeSrc":"19221:67:17","nodeType":"YulFunctionCall","src":"19221:67:17"},"variableNames":[{"name":"pos","nativeSrc":"19214:3:17","nodeType":"YulIdentifier","src":"19214:3:17"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"19386:3:17","nodeType":"YulIdentifier","src":"19386:3:17"}],"functionName":{"name":"store_literal_in_memory_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3","nativeSrc":"19297:88:17","nodeType":"YulIdentifier","src":"19297:88:17"},"nativeSrc":"19297:93:17","nodeType":"YulFunctionCall","src":"19297:93:17"},"nativeSrc":"19297:93:17","nodeType":"YulExpressionStatement","src":"19297:93:17"},{"nativeSrc":"19399:19:17","nodeType":"YulAssignment","src":"19399:19:17","value":{"arguments":[{"name":"pos","nativeSrc":"19410:3:17","nodeType":"YulIdentifier","src":"19410:3:17"},{"kind":"number","nativeSrc":"19415:2:17","nodeType":"YulLiteral","src":"19415:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19406:3:17","nodeType":"YulIdentifier","src":"19406:3:17"},"nativeSrc":"19406:12:17","nodeType":"YulFunctionCall","src":"19406:12:17"},"variableNames":[{"name":"end","nativeSrc":"19399:3:17","nodeType":"YulIdentifier","src":"19399:3:17"}]}]},"name":"abi_encode_t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3_to_t_string_memory_ptr_fromStack","nativeSrc":"19058:366:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"19192:3:17","nodeType":"YulTypedName","src":"19192:3:17","type":""}],"returnVariables":[{"name":"end","nativeSrc":"19200:3:17","nodeType":"YulTypedName","src":"19200:3:17","type":""}],"src":"19058:366:17"},{"body":{"nativeSrc":"19601:248:17","nodeType":"YulBlock","src":"19601:248:17","statements":[{"nativeSrc":"19611:26:17","nodeType":"YulAssignment","src":"19611:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"19623:9:17","nodeType":"YulIdentifier","src":"19623:9:17"},{"kind":"number","nativeSrc":"19634:2:17","nodeType":"YulLiteral","src":"19634:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19619:3:17","nodeType":"YulIdentifier","src":"19619:3:17"},"nativeSrc":"19619:18:17","nodeType":"YulFunctionCall","src":"19619:18:17"},"variableNames":[{"name":"tail","nativeSrc":"19611:4:17","nodeType":"YulIdentifier","src":"19611:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19658:9:17","nodeType":"YulIdentifier","src":"19658:9:17"},{"kind":"number","nativeSrc":"19669:1:17","nodeType":"YulLiteral","src":"19669:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19654:3:17","nodeType":"YulIdentifier","src":"19654:3:17"},"nativeSrc":"19654:17:17","nodeType":"YulFunctionCall","src":"19654:17:17"},{"arguments":[{"name":"tail","nativeSrc":"19677:4:17","nodeType":"YulIdentifier","src":"19677:4:17"},{"name":"headStart","nativeSrc":"19683:9:17","nodeType":"YulIdentifier","src":"19683:9:17"}],"functionName":{"name":"sub","nativeSrc":"19673:3:17","nodeType":"YulIdentifier","src":"19673:3:17"},"nativeSrc":"19673:20:17","nodeType":"YulFunctionCall","src":"19673:20:17"}],"functionName":{"name":"mstore","nativeSrc":"19647:6:17","nodeType":"YulIdentifier","src":"19647:6:17"},"nativeSrc":"19647:47:17","nodeType":"YulFunctionCall","src":"19647:47:17"},"nativeSrc":"19647:47:17","nodeType":"YulExpressionStatement","src":"19647:47:17"},{"nativeSrc":"19703:139:17","nodeType":"YulAssignment","src":"19703:139:17","value":{"arguments":[{"name":"tail","nativeSrc":"19837:4:17","nodeType":"YulIdentifier","src":"19837:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3_to_t_string_memory_ptr_fromStack","nativeSrc":"19711:124:17","nodeType":"YulIdentifier","src":"19711:124:17"},"nativeSrc":"19711:131:17","nodeType":"YulFunctionCall","src":"19711:131:17"},"variableNames":[{"name":"tail","nativeSrc":"19703:4:17","nodeType":"YulIdentifier","src":"19703:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"19430:419:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19581:9:17","nodeType":"YulTypedName","src":"19581:9:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19596:4:17","nodeType":"YulTypedName","src":"19596:4:17","type":""}],"src":"19430:419:17"},{"body":{"nativeSrc":"19961:70:17","nodeType":"YulBlock","src":"19961:70:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"19983:6:17","nodeType":"YulIdentifier","src":"19983:6:17"},{"kind":"number","nativeSrc":"19991:1:17","nodeType":"YulLiteral","src":"19991:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19979:3:17","nodeType":"YulIdentifier","src":"19979:3:17"},"nativeSrc":"19979:14:17","nodeType":"YulFunctionCall","src":"19979:14:17"},{"hexValue":"496e73756666696369656e74206f757470757420616d6f756e74","kind":"string","nativeSrc":"19995:28:17","nodeType":"YulLiteral","src":"19995:28:17","type":"","value":"Insufficient output amount"}],"functionName":{"name":"mstore","nativeSrc":"19972:6:17","nodeType":"YulIdentifier","src":"19972:6:17"},"nativeSrc":"19972:52:17","nodeType":"YulFunctionCall","src":"19972:52:17"},"nativeSrc":"19972:52:17","nodeType":"YulExpressionStatement","src":"19972:52:17"}]},"name":"store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90","nativeSrc":"19855:176:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"19953:6:17","nodeType":"YulTypedName","src":"19953:6:17","type":""}],"src":"19855:176:17"},{"body":{"nativeSrc":"20183:220:17","nodeType":"YulBlock","src":"20183:220:17","statements":[{"nativeSrc":"20193:74:17","nodeType":"YulAssignment","src":"20193:74:17","value":{"arguments":[{"name":"pos","nativeSrc":"20259:3:17","nodeType":"YulIdentifier","src":"20259:3:17"},{"kind":"number","nativeSrc":"20264:2:17","nodeType":"YulLiteral","src":"20264:2:17","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"20200:58:17","nodeType":"YulIdentifier","src":"20200:58:17"},"nativeSrc":"20200:67:17","nodeType":"YulFunctionCall","src":"20200:67:17"},"variableNames":[{"name":"pos","nativeSrc":"20193:3:17","nodeType":"YulIdentifier","src":"20193:3:17"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"20365:3:17","nodeType":"YulIdentifier","src":"20365:3:17"}],"functionName":{"name":"store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90","nativeSrc":"20276:88:17","nodeType":"YulIdentifier","src":"20276:88:17"},"nativeSrc":"20276:93:17","nodeType":"YulFunctionCall","src":"20276:93:17"},"nativeSrc":"20276:93:17","nodeType":"YulExpressionStatement","src":"20276:93:17"},{"nativeSrc":"20378:19:17","nodeType":"YulAssignment","src":"20378:19:17","value":{"arguments":[{"name":"pos","nativeSrc":"20389:3:17","nodeType":"YulIdentifier","src":"20389:3:17"},{"kind":"number","nativeSrc":"20394:2:17","nodeType":"YulLiteral","src":"20394:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20385:3:17","nodeType":"YulIdentifier","src":"20385:3:17"},"nativeSrc":"20385:12:17","nodeType":"YulFunctionCall","src":"20385:12:17"},"variableNames":[{"name":"end","nativeSrc":"20378:3:17","nodeType":"YulIdentifier","src":"20378:3:17"}]}]},"name":"abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack","nativeSrc":"20037:366:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"20171:3:17","nodeType":"YulTypedName","src":"20171:3:17","type":""}],"returnVariables":[{"name":"end","nativeSrc":"20179:3:17","nodeType":"YulTypedName","src":"20179:3:17","type":""}],"src":"20037:366:17"},{"body":{"nativeSrc":"20580:248:17","nodeType":"YulBlock","src":"20580:248:17","statements":[{"nativeSrc":"20590:26:17","nodeType":"YulAssignment","src":"20590:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"20602:9:17","nodeType":"YulIdentifier","src":"20602:9:17"},{"kind":"number","nativeSrc":"20613:2:17","nodeType":"YulLiteral","src":"20613:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20598:3:17","nodeType":"YulIdentifier","src":"20598:3:17"},"nativeSrc":"20598:18:17","nodeType":"YulFunctionCall","src":"20598:18:17"},"variableNames":[{"name":"tail","nativeSrc":"20590:4:17","nodeType":"YulIdentifier","src":"20590:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20637:9:17","nodeType":"YulIdentifier","src":"20637:9:17"},{"kind":"number","nativeSrc":"20648:1:17","nodeType":"YulLiteral","src":"20648:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20633:3:17","nodeType":"YulIdentifier","src":"20633:3:17"},"nativeSrc":"20633:17:17","nodeType":"YulFunctionCall","src":"20633:17:17"},{"arguments":[{"name":"tail","nativeSrc":"20656:4:17","nodeType":"YulIdentifier","src":"20656:4:17"},{"name":"headStart","nativeSrc":"20662:9:17","nodeType":"YulIdentifier","src":"20662:9:17"}],"functionName":{"name":"sub","nativeSrc":"20652:3:17","nodeType":"YulIdentifier","src":"20652:3:17"},"nativeSrc":"20652:20:17","nodeType":"YulFunctionCall","src":"20652:20:17"}],"functionName":{"name":"mstore","nativeSrc":"20626:6:17","nodeType":"YulIdentifier","src":"20626:6:17"},"nativeSrc":"20626:47:17","nodeType":"YulFunctionCall","src":"20626:47:17"},"nativeSrc":"20626:47:17","nodeType":"YulExpressionStatement","src":"20626:47:17"},{"nativeSrc":"20682:139:17","nodeType":"YulAssignment","src":"20682:139:17","value":{"arguments":[{"name":"tail","nativeSrc":"20816:4:17","nodeType":"YulIdentifier","src":"20816:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack","nativeSrc":"20690:124:17","nodeType":"YulIdentifier","src":"20690:124:17"},"nativeSrc":"20690:131:17","nodeType":"YulFunctionCall","src":"20690:131:17"},"variableNames":[{"name":"tail","nativeSrc":"20682:4:17","nodeType":"YulIdentifier","src":"20682:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20409:419:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20560:9:17","nodeType":"YulTypedName","src":"20560:9:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20575:4:17","nodeType":"YulTypedName","src":"20575:4:17","type":""}],"src":"20409:419:17"},{"body":{"nativeSrc":"20897:80:17","nodeType":"YulBlock","src":"20897:80:17","statements":[{"nativeSrc":"20907:22:17","nodeType":"YulAssignment","src":"20907:22:17","value":{"arguments":[{"name":"offset","nativeSrc":"20922:6:17","nodeType":"YulIdentifier","src":"20922:6:17"}],"functionName":{"name":"mload","nativeSrc":"20916:5:17","nodeType":"YulIdentifier","src":"20916:5:17"},"nativeSrc":"20916:13:17","nodeType":"YulFunctionCall","src":"20916:13:17"},"variableNames":[{"name":"value","nativeSrc":"20907:5:17","nodeType":"YulIdentifier","src":"20907:5:17"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"20965:5:17","nodeType":"YulIdentifier","src":"20965:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"20938:26:17","nodeType":"YulIdentifier","src":"20938:26:17"},"nativeSrc":"20938:33:17","nodeType":"YulFunctionCall","src":"20938:33:17"},"nativeSrc":"20938:33:17","nodeType":"YulExpressionStatement","src":"20938:33:17"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"20834:143:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"20875:6:17","nodeType":"YulTypedName","src":"20875:6:17","type":""},{"name":"end","nativeSrc":"20883:3:17","nodeType":"YulTypedName","src":"20883:3:17","type":""}],"returnVariables":[{"name":"value","nativeSrc":"20891:5:17","nodeType":"YulTypedName","src":"20891:5:17","type":""}],"src":"20834:143:17"},{"body":{"nativeSrc":"21060:274:17","nodeType":"YulBlock","src":"21060:274:17","statements":[{"body":{"nativeSrc":"21106:83:17","nodeType":"YulBlock","src":"21106:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"21108:77:17","nodeType":"YulIdentifier","src":"21108:77:17"},"nativeSrc":"21108:79:17","nodeType":"YulFunctionCall","src":"21108:79:17"},"nativeSrc":"21108:79:17","nodeType":"YulExpressionStatement","src":"21108:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"21081:7:17","nodeType":"YulIdentifier","src":"21081:7:17"},{"name":"headStart","nativeSrc":"21090:9:17","nodeType":"YulIdentifier","src":"21090:9:17"}],"functionName":{"name":"sub","nativeSrc":"21077:3:17","nodeType":"YulIdentifier","src":"21077:3:17"},"nativeSrc":"21077:23:17","nodeType":"YulFunctionCall","src":"21077:23:17"},{"kind":"number","nativeSrc":"21102:2:17","nodeType":"YulLiteral","src":"21102:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"21073:3:17","nodeType":"YulIdentifier","src":"21073:3:17"},"nativeSrc":"21073:32:17","nodeType":"YulFunctionCall","src":"21073:32:17"},"nativeSrc":"21070:119:17","nodeType":"YulIf","src":"21070:119:17"},{"nativeSrc":"21199:128:17","nodeType":"YulBlock","src":"21199:128:17","statements":[{"nativeSrc":"21214:15:17","nodeType":"YulVariableDeclaration","src":"21214:15:17","value":{"kind":"number","nativeSrc":"21228:1:17","nodeType":"YulLiteral","src":"21228:1:17","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"21218:6:17","nodeType":"YulTypedName","src":"21218:6:17","type":""}]},{"nativeSrc":"21243:74:17","nodeType":"YulAssignment","src":"21243:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21289:9:17","nodeType":"YulIdentifier","src":"21289:9:17"},{"name":"offset","nativeSrc":"21300:6:17","nodeType":"YulIdentifier","src":"21300:6:17"}],"functionName":{"name":"add","nativeSrc":"21285:3:17","nodeType":"YulIdentifier","src":"21285:3:17"},"nativeSrc":"21285:22:17","nodeType":"YulFunctionCall","src":"21285:22:17"},{"name":"dataEnd","nativeSrc":"21309:7:17","nodeType":"YulIdentifier","src":"21309:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"21253:31:17","nodeType":"YulIdentifier","src":"21253:31:17"},"nativeSrc":"21253:64:17","nodeType":"YulFunctionCall","src":"21253:64:17"},"variableNames":[{"name":"value0","nativeSrc":"21243:6:17","nodeType":"YulIdentifier","src":"21243:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"20983:351:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21030:9:17","nodeType":"YulTypedName","src":"21030:9:17","type":""},{"name":"dataEnd","nativeSrc":"21041:7:17","nodeType":"YulTypedName","src":"21041:7:17","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"21053:6:17","nodeType":"YulTypedName","src":"21053:6:17","type":""}],"src":"20983:351:17"},{"body":{"nativeSrc":"21494:288:17","nodeType":"YulBlock","src":"21494:288:17","statements":[{"nativeSrc":"21504:26:17","nodeType":"YulAssignment","src":"21504:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"21516:9:17","nodeType":"YulIdentifier","src":"21516:9:17"},{"kind":"number","nativeSrc":"21527:2:17","nodeType":"YulLiteral","src":"21527:2:17","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21512:3:17","nodeType":"YulIdentifier","src":"21512:3:17"},"nativeSrc":"21512:18:17","nodeType":"YulFunctionCall","src":"21512:18:17"},"variableNames":[{"name":"tail","nativeSrc":"21504:4:17","nodeType":"YulIdentifier","src":"21504:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"21584:6:17","nodeType":"YulIdentifier","src":"21584:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"21597:9:17","nodeType":"YulIdentifier","src":"21597:9:17"},{"kind":"number","nativeSrc":"21608:1:17","nodeType":"YulLiteral","src":"21608:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21593:3:17","nodeType":"YulIdentifier","src":"21593:3:17"},"nativeSrc":"21593:17:17","nodeType":"YulFunctionCall","src":"21593:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"21540:43:17","nodeType":"YulIdentifier","src":"21540:43:17"},"nativeSrc":"21540:71:17","nodeType":"YulFunctionCall","src":"21540:71:17"},"nativeSrc":"21540:71:17","nodeType":"YulExpressionStatement","src":"21540:71:17"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"21665:6:17","nodeType":"YulIdentifier","src":"21665:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"21678:9:17","nodeType":"YulIdentifier","src":"21678:9:17"},{"kind":"number","nativeSrc":"21689:2:17","nodeType":"YulLiteral","src":"21689:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21674:3:17","nodeType":"YulIdentifier","src":"21674:3:17"},"nativeSrc":"21674:18:17","nodeType":"YulFunctionCall","src":"21674:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"21621:43:17","nodeType":"YulIdentifier","src":"21621:43:17"},"nativeSrc":"21621:72:17","nodeType":"YulFunctionCall","src":"21621:72:17"},"nativeSrc":"21621:72:17","nodeType":"YulExpressionStatement","src":"21621:72:17"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"21747:6:17","nodeType":"YulIdentifier","src":"21747:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"21760:9:17","nodeType":"YulIdentifier","src":"21760:9:17"},{"kind":"number","nativeSrc":"21771:2:17","nodeType":"YulLiteral","src":"21771:2:17","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21756:3:17","nodeType":"YulIdentifier","src":"21756:3:17"},"nativeSrc":"21756:18:17","nodeType":"YulFunctionCall","src":"21756:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"21703:43:17","nodeType":"YulIdentifier","src":"21703:43:17"},"nativeSrc":"21703:72:17","nodeType":"YulFunctionCall","src":"21703:72:17"},"nativeSrc":"21703:72:17","nodeType":"YulExpressionStatement","src":"21703:72:17"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"21340:442:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21450:9:17","nodeType":"YulTypedName","src":"21450:9:17","type":""},{"name":"value2","nativeSrc":"21462:6:17","nodeType":"YulTypedName","src":"21462:6:17","type":""},{"name":"value1","nativeSrc":"21470:6:17","nodeType":"YulTypedName","src":"21470:6:17","type":""},{"name":"value0","nativeSrc":"21478:6:17","nodeType":"YulTypedName","src":"21478:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21489:4:17","nodeType":"YulTypedName","src":"21489:4:17","type":""}],"src":"21340:442:17"},{"body":{"nativeSrc":"21816:152:17","nodeType":"YulBlock","src":"21816:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21833:1:17","nodeType":"YulLiteral","src":"21833:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"21836:77:17","nodeType":"YulLiteral","src":"21836:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"21826:6:17","nodeType":"YulIdentifier","src":"21826:6:17"},"nativeSrc":"21826:88:17","nodeType":"YulFunctionCall","src":"21826:88:17"},"nativeSrc":"21826:88:17","nodeType":"YulExpressionStatement","src":"21826:88:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21930:1:17","nodeType":"YulLiteral","src":"21930:1:17","type":"","value":"4"},{"kind":"number","nativeSrc":"21933:4:17","nodeType":"YulLiteral","src":"21933:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"21923:6:17","nodeType":"YulIdentifier","src":"21923:6:17"},"nativeSrc":"21923:15:17","nodeType":"YulFunctionCall","src":"21923:15:17"},"nativeSrc":"21923:15:17","nodeType":"YulExpressionStatement","src":"21923:15:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21954:1:17","nodeType":"YulLiteral","src":"21954:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"21957:4:17","nodeType":"YulLiteral","src":"21957:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"21947:6:17","nodeType":"YulIdentifier","src":"21947:6:17"},"nativeSrc":"21947:15:17","nodeType":"YulFunctionCall","src":"21947:15:17"},"nativeSrc":"21947:15:17","nodeType":"YulExpressionStatement","src":"21947:15:17"}]},"name":"panic_error_0x41","nativeSrc":"21788:180:17","nodeType":"YulFunctionDefinition","src":"21788:180:17"},{"body":{"nativeSrc":"22080:65:17","nodeType":"YulBlock","src":"22080:65:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"22102:6:17","nodeType":"YulIdentifier","src":"22102:6:17"},{"kind":"number","nativeSrc":"22110:1:17","nodeType":"YulLiteral","src":"22110:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22098:3:17","nodeType":"YulIdentifier","src":"22098:3:17"},"nativeSrc":"22098:14:17","nodeType":"YulFunctionCall","src":"22098:14:17"},{"hexValue":"496e73756666696369656e74204120616d6f756e74","kind":"string","nativeSrc":"22114:23:17","nodeType":"YulLiteral","src":"22114:23:17","type":"","value":"Insufficient A amount"}],"functionName":{"name":"mstore","nativeSrc":"22091:6:17","nodeType":"YulIdentifier","src":"22091:6:17"},"nativeSrc":"22091:47:17","nodeType":"YulFunctionCall","src":"22091:47:17"},"nativeSrc":"22091:47:17","nodeType":"YulExpressionStatement","src":"22091:47:17"}]},"name":"store_literal_in_memory_5d6e3e7a778f04de2588734c091c00112253879305eae6cf8201e2362b43fd0d","nativeSrc":"21974:171:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"22072:6:17","nodeType":"YulTypedName","src":"22072:6:17","type":""}],"src":"21974:171:17"},{"body":{"nativeSrc":"22297:220:17","nodeType":"YulBlock","src":"22297:220:17","statements":[{"nativeSrc":"22307:74:17","nodeType":"YulAssignment","src":"22307:74:17","value":{"arguments":[{"name":"pos","nativeSrc":"22373:3:17","nodeType":"YulIdentifier","src":"22373:3:17"},{"kind":"number","nativeSrc":"22378:2:17","nodeType":"YulLiteral","src":"22378:2:17","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"22314:58:17","nodeType":"YulIdentifier","src":"22314:58:17"},"nativeSrc":"22314:67:17","nodeType":"YulFunctionCall","src":"22314:67:17"},"variableNames":[{"name":"pos","nativeSrc":"22307:3:17","nodeType":"YulIdentifier","src":"22307:3:17"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"22479:3:17","nodeType":"YulIdentifier","src":"22479:3:17"}],"functionName":{"name":"store_literal_in_memory_5d6e3e7a778f04de2588734c091c00112253879305eae6cf8201e2362b43fd0d","nativeSrc":"22390:88:17","nodeType":"YulIdentifier","src":"22390:88:17"},"nativeSrc":"22390:93:17","nodeType":"YulFunctionCall","src":"22390:93:17"},"nativeSrc":"22390:93:17","nodeType":"YulExpressionStatement","src":"22390:93:17"},{"nativeSrc":"22492:19:17","nodeType":"YulAssignment","src":"22492:19:17","value":{"arguments":[{"name":"pos","nativeSrc":"22503:3:17","nodeType":"YulIdentifier","src":"22503:3:17"},{"kind":"number","nativeSrc":"22508:2:17","nodeType":"YulLiteral","src":"22508:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22499:3:17","nodeType":"YulIdentifier","src":"22499:3:17"},"nativeSrc":"22499:12:17","nodeType":"YulFunctionCall","src":"22499:12:17"},"variableNames":[{"name":"end","nativeSrc":"22492:3:17","nodeType":"YulIdentifier","src":"22492:3:17"}]}]},"name":"abi_encode_t_stringliteral_5d6e3e7a778f04de2588734c091c00112253879305eae6cf8201e2362b43fd0d_to_t_string_memory_ptr_fromStack","nativeSrc":"22151:366:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"22285:3:17","nodeType":"YulTypedName","src":"22285:3:17","type":""}],"returnVariables":[{"name":"end","nativeSrc":"22293:3:17","nodeType":"YulTypedName","src":"22293:3:17","type":""}],"src":"22151:366:17"},{"body":{"nativeSrc":"22694:248:17","nodeType":"YulBlock","src":"22694:248:17","statements":[{"nativeSrc":"22704:26:17","nodeType":"YulAssignment","src":"22704:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"22716:9:17","nodeType":"YulIdentifier","src":"22716:9:17"},{"kind":"number","nativeSrc":"22727:2:17","nodeType":"YulLiteral","src":"22727:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22712:3:17","nodeType":"YulIdentifier","src":"22712:3:17"},"nativeSrc":"22712:18:17","nodeType":"YulFunctionCall","src":"22712:18:17"},"variableNames":[{"name":"tail","nativeSrc":"22704:4:17","nodeType":"YulIdentifier","src":"22704:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22751:9:17","nodeType":"YulIdentifier","src":"22751:9:17"},{"kind":"number","nativeSrc":"22762:1:17","nodeType":"YulLiteral","src":"22762:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22747:3:17","nodeType":"YulIdentifier","src":"22747:3:17"},"nativeSrc":"22747:17:17","nodeType":"YulFunctionCall","src":"22747:17:17"},{"arguments":[{"name":"tail","nativeSrc":"22770:4:17","nodeType":"YulIdentifier","src":"22770:4:17"},{"name":"headStart","nativeSrc":"22776:9:17","nodeType":"YulIdentifier","src":"22776:9:17"}],"functionName":{"name":"sub","nativeSrc":"22766:3:17","nodeType":"YulIdentifier","src":"22766:3:17"},"nativeSrc":"22766:20:17","nodeType":"YulFunctionCall","src":"22766:20:17"}],"functionName":{"name":"mstore","nativeSrc":"22740:6:17","nodeType":"YulIdentifier","src":"22740:6:17"},"nativeSrc":"22740:47:17","nodeType":"YulFunctionCall","src":"22740:47:17"},"nativeSrc":"22740:47:17","nodeType":"YulExpressionStatement","src":"22740:47:17"},{"nativeSrc":"22796:139:17","nodeType":"YulAssignment","src":"22796:139:17","value":{"arguments":[{"name":"tail","nativeSrc":"22930:4:17","nodeType":"YulIdentifier","src":"22930:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_5d6e3e7a778f04de2588734c091c00112253879305eae6cf8201e2362b43fd0d_to_t_string_memory_ptr_fromStack","nativeSrc":"22804:124:17","nodeType":"YulIdentifier","src":"22804:124:17"},"nativeSrc":"22804:131:17","nodeType":"YulFunctionCall","src":"22804:131:17"},"variableNames":[{"name":"tail","nativeSrc":"22796:4:17","nodeType":"YulIdentifier","src":"22796:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d6e3e7a778f04de2588734c091c00112253879305eae6cf8201e2362b43fd0d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"22523:419:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22674:9:17","nodeType":"YulTypedName","src":"22674:9:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22689:4:17","nodeType":"YulTypedName","src":"22689:4:17","type":""}],"src":"22523:419:17"},{"body":{"nativeSrc":"23054:65:17","nodeType":"YulBlock","src":"23054:65:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"23076:6:17","nodeType":"YulIdentifier","src":"23076:6:17"},{"kind":"number","nativeSrc":"23084:1:17","nodeType":"YulLiteral","src":"23084:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23072:3:17","nodeType":"YulIdentifier","src":"23072:3:17"},"nativeSrc":"23072:14:17","nodeType":"YulFunctionCall","src":"23072:14:17"},{"hexValue":"496e73756666696369656e74204220616d6f756e74","kind":"string","nativeSrc":"23088:23:17","nodeType":"YulLiteral","src":"23088:23:17","type":"","value":"Insufficient B amount"}],"functionName":{"name":"mstore","nativeSrc":"23065:6:17","nodeType":"YulIdentifier","src":"23065:6:17"},"nativeSrc":"23065:47:17","nodeType":"YulFunctionCall","src":"23065:47:17"},"nativeSrc":"23065:47:17","nodeType":"YulExpressionStatement","src":"23065:47:17"}]},"name":"store_literal_in_memory_7956b12eed2c2f66e7d911209e39ae880dbb4cb35c0044f27817de99463b5f8a","nativeSrc":"22948:171:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"23046:6:17","nodeType":"YulTypedName","src":"23046:6:17","type":""}],"src":"22948:171:17"},{"body":{"nativeSrc":"23271:220:17","nodeType":"YulBlock","src":"23271:220:17","statements":[{"nativeSrc":"23281:74:17","nodeType":"YulAssignment","src":"23281:74:17","value":{"arguments":[{"name":"pos","nativeSrc":"23347:3:17","nodeType":"YulIdentifier","src":"23347:3:17"},{"kind":"number","nativeSrc":"23352:2:17","nodeType":"YulLiteral","src":"23352:2:17","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"23288:58:17","nodeType":"YulIdentifier","src":"23288:58:17"},"nativeSrc":"23288:67:17","nodeType":"YulFunctionCall","src":"23288:67:17"},"variableNames":[{"name":"pos","nativeSrc":"23281:3:17","nodeType":"YulIdentifier","src":"23281:3:17"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"23453:3:17","nodeType":"YulIdentifier","src":"23453:3:17"}],"functionName":{"name":"store_literal_in_memory_7956b12eed2c2f66e7d911209e39ae880dbb4cb35c0044f27817de99463b5f8a","nativeSrc":"23364:88:17","nodeType":"YulIdentifier","src":"23364:88:17"},"nativeSrc":"23364:93:17","nodeType":"YulFunctionCall","src":"23364:93:17"},"nativeSrc":"23364:93:17","nodeType":"YulExpressionStatement","src":"23364:93:17"},{"nativeSrc":"23466:19:17","nodeType":"YulAssignment","src":"23466:19:17","value":{"arguments":[{"name":"pos","nativeSrc":"23477:3:17","nodeType":"YulIdentifier","src":"23477:3:17"},{"kind":"number","nativeSrc":"23482:2:17","nodeType":"YulLiteral","src":"23482:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23473:3:17","nodeType":"YulIdentifier","src":"23473:3:17"},"nativeSrc":"23473:12:17","nodeType":"YulFunctionCall","src":"23473:12:17"},"variableNames":[{"name":"end","nativeSrc":"23466:3:17","nodeType":"YulIdentifier","src":"23466:3:17"}]}]},"name":"abi_encode_t_stringliteral_7956b12eed2c2f66e7d911209e39ae880dbb4cb35c0044f27817de99463b5f8a_to_t_string_memory_ptr_fromStack","nativeSrc":"23125:366:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"23259:3:17","nodeType":"YulTypedName","src":"23259:3:17","type":""}],"returnVariables":[{"name":"end","nativeSrc":"23267:3:17","nodeType":"YulTypedName","src":"23267:3:17","type":""}],"src":"23125:366:17"},{"body":{"nativeSrc":"23668:248:17","nodeType":"YulBlock","src":"23668:248:17","statements":[{"nativeSrc":"23678:26:17","nodeType":"YulAssignment","src":"23678:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"23690:9:17","nodeType":"YulIdentifier","src":"23690:9:17"},{"kind":"number","nativeSrc":"23701:2:17","nodeType":"YulLiteral","src":"23701:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23686:3:17","nodeType":"YulIdentifier","src":"23686:3:17"},"nativeSrc":"23686:18:17","nodeType":"YulFunctionCall","src":"23686:18:17"},"variableNames":[{"name":"tail","nativeSrc":"23678:4:17","nodeType":"YulIdentifier","src":"23678:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23725:9:17","nodeType":"YulIdentifier","src":"23725:9:17"},{"kind":"number","nativeSrc":"23736:1:17","nodeType":"YulLiteral","src":"23736:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23721:3:17","nodeType":"YulIdentifier","src":"23721:3:17"},"nativeSrc":"23721:17:17","nodeType":"YulFunctionCall","src":"23721:17:17"},{"arguments":[{"name":"tail","nativeSrc":"23744:4:17","nodeType":"YulIdentifier","src":"23744:4:17"},{"name":"headStart","nativeSrc":"23750:9:17","nodeType":"YulIdentifier","src":"23750:9:17"}],"functionName":{"name":"sub","nativeSrc":"23740:3:17","nodeType":"YulIdentifier","src":"23740:3:17"},"nativeSrc":"23740:20:17","nodeType":"YulFunctionCall","src":"23740:20:17"}],"functionName":{"name":"mstore","nativeSrc":"23714:6:17","nodeType":"YulIdentifier","src":"23714:6:17"},"nativeSrc":"23714:47:17","nodeType":"YulFunctionCall","src":"23714:47:17"},"nativeSrc":"23714:47:17","nodeType":"YulExpressionStatement","src":"23714:47:17"},{"nativeSrc":"23770:139:17","nodeType":"YulAssignment","src":"23770:139:17","value":{"arguments":[{"name":"tail","nativeSrc":"23904:4:17","nodeType":"YulIdentifier","src":"23904:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_7956b12eed2c2f66e7d911209e39ae880dbb4cb35c0044f27817de99463b5f8a_to_t_string_memory_ptr_fromStack","nativeSrc":"23778:124:17","nodeType":"YulIdentifier","src":"23778:124:17"},"nativeSrc":"23778:131:17","nodeType":"YulFunctionCall","src":"23778:131:17"},"variableNames":[{"name":"tail","nativeSrc":"23770:4:17","nodeType":"YulIdentifier","src":"23770:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_7956b12eed2c2f66e7d911209e39ae880dbb4cb35c0044f27817de99463b5f8a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"23497:419:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23648:9:17","nodeType":"YulTypedName","src":"23648:9:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23663:4:17","nodeType":"YulTypedName","src":"23663:4:17","type":""}],"src":"23497:419:17"},{"body":{"nativeSrc":"24076:288:17","nodeType":"YulBlock","src":"24076:288:17","statements":[{"nativeSrc":"24086:26:17","nodeType":"YulAssignment","src":"24086:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"24098:9:17","nodeType":"YulIdentifier","src":"24098:9:17"},{"kind":"number","nativeSrc":"24109:2:17","nodeType":"YulLiteral","src":"24109:2:17","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"24094:3:17","nodeType":"YulIdentifier","src":"24094:3:17"},"nativeSrc":"24094:18:17","nodeType":"YulFunctionCall","src":"24094:18:17"},"variableNames":[{"name":"tail","nativeSrc":"24086:4:17","nodeType":"YulIdentifier","src":"24086:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"24166:6:17","nodeType":"YulIdentifier","src":"24166:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"24179:9:17","nodeType":"YulIdentifier","src":"24179:9:17"},{"kind":"number","nativeSrc":"24190:1:17","nodeType":"YulLiteral","src":"24190:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24175:3:17","nodeType":"YulIdentifier","src":"24175:3:17"},"nativeSrc":"24175:17:17","nodeType":"YulFunctionCall","src":"24175:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"24122:43:17","nodeType":"YulIdentifier","src":"24122:43:17"},"nativeSrc":"24122:71:17","nodeType":"YulFunctionCall","src":"24122:71:17"},"nativeSrc":"24122:71:17","nodeType":"YulExpressionStatement","src":"24122:71:17"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"24247:6:17","nodeType":"YulIdentifier","src":"24247:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"24260:9:17","nodeType":"YulIdentifier","src":"24260:9:17"},{"kind":"number","nativeSrc":"24271:2:17","nodeType":"YulLiteral","src":"24271:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24256:3:17","nodeType":"YulIdentifier","src":"24256:3:17"},"nativeSrc":"24256:18:17","nodeType":"YulFunctionCall","src":"24256:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"24203:43:17","nodeType":"YulIdentifier","src":"24203:43:17"},"nativeSrc":"24203:72:17","nodeType":"YulFunctionCall","src":"24203:72:17"},"nativeSrc":"24203:72:17","nodeType":"YulExpressionStatement","src":"24203:72:17"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"24329:6:17","nodeType":"YulIdentifier","src":"24329:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"24342:9:17","nodeType":"YulIdentifier","src":"24342:9:17"},{"kind":"number","nativeSrc":"24353:2:17","nodeType":"YulLiteral","src":"24353:2:17","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"24338:3:17","nodeType":"YulIdentifier","src":"24338:3:17"},"nativeSrc":"24338:18:17","nodeType":"YulFunctionCall","src":"24338:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"24285:43:17","nodeType":"YulIdentifier","src":"24285:43:17"},"nativeSrc":"24285:72:17","nodeType":"YulFunctionCall","src":"24285:72:17"},"nativeSrc":"24285:72:17","nodeType":"YulExpressionStatement","src":"24285:72:17"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"23922:442:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24032:9:17","nodeType":"YulTypedName","src":"24032:9:17","type":""},{"name":"value2","nativeSrc":"24044:6:17","nodeType":"YulTypedName","src":"24044:6:17","type":""},{"name":"value1","nativeSrc":"24052:6:17","nodeType":"YulTypedName","src":"24052:6:17","type":""},{"name":"value0","nativeSrc":"24060:6:17","nodeType":"YulTypedName","src":"24060:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24071:4:17","nodeType":"YulTypedName","src":"24071:4:17","type":""}],"src":"23922:442:17"},{"body":{"nativeSrc":"24496:206:17","nodeType":"YulBlock","src":"24496:206:17","statements":[{"nativeSrc":"24506:26:17","nodeType":"YulAssignment","src":"24506:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"24518:9:17","nodeType":"YulIdentifier","src":"24518:9:17"},{"kind":"number","nativeSrc":"24529:2:17","nodeType":"YulLiteral","src":"24529:2:17","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"24514:3:17","nodeType":"YulIdentifier","src":"24514:3:17"},"nativeSrc":"24514:18:17","nodeType":"YulFunctionCall","src":"24514:18:17"},"variableNames":[{"name":"tail","nativeSrc":"24506:4:17","nodeType":"YulIdentifier","src":"24506:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"24586:6:17","nodeType":"YulIdentifier","src":"24586:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"24599:9:17","nodeType":"YulIdentifier","src":"24599:9:17"},{"kind":"number","nativeSrc":"24610:1:17","nodeType":"YulLiteral","src":"24610:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24595:3:17","nodeType":"YulIdentifier","src":"24595:3:17"},"nativeSrc":"24595:17:17","nodeType":"YulFunctionCall","src":"24595:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"24542:43:17","nodeType":"YulIdentifier","src":"24542:43:17"},"nativeSrc":"24542:71:17","nodeType":"YulFunctionCall","src":"24542:71:17"},"nativeSrc":"24542:71:17","nodeType":"YulExpressionStatement","src":"24542:71:17"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"24667:6:17","nodeType":"YulIdentifier","src":"24667:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"24680:9:17","nodeType":"YulIdentifier","src":"24680:9:17"},{"kind":"number","nativeSrc":"24691:2:17","nodeType":"YulLiteral","src":"24691:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24676:3:17","nodeType":"YulIdentifier","src":"24676:3:17"},"nativeSrc":"24676:18:17","nodeType":"YulFunctionCall","src":"24676:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"24623:43:17","nodeType":"YulIdentifier","src":"24623:43:17"},"nativeSrc":"24623:72:17","nodeType":"YulFunctionCall","src":"24623:72:17"},"nativeSrc":"24623:72:17","nodeType":"YulExpressionStatement","src":"24623:72:17"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"24370:332:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24460:9:17","nodeType":"YulTypedName","src":"24460:9:17","type":""},{"name":"value1","nativeSrc":"24472:6:17","nodeType":"YulTypedName","src":"24472:6:17","type":""},{"name":"value0","nativeSrc":"24480:6:17","nodeType":"YulTypedName","src":"24480:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24491:4:17","nodeType":"YulTypedName","src":"24491:4:17","type":""}],"src":"24370:332:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ef454a3ea0c22f8d07b6c481320b7d1deed66223e2a6ddc7d2fc84c6da989b8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"No division\")\n\n    }\n\n    function abi_encode_t_stringliteral_ef454a3ea0c22f8d07b6c481320b7d1deed66223e2a6ddc7d2fc84c6da989b8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_ef454a3ea0c22f8d07b6c481320b7d1deed66223e2a6ddc7d2fc84c6da989b8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef454a3ea0c22f8d07b6c481320b7d1deed66223e2a6ddc7d2fc84c6da989b8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef454a3ea0c22f8d07b6c481320b7d1deed66223e2a6ddc7d2fc84c6da989b8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deadline passed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6eaf91a30795816d7b5ab342a2ebdd69fbc6fb670d48889a575f3f685dfb42c8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid path\")\n\n    }\n\n    function abi_encode_t_stringliteral_6eaf91a30795816d7b5ab342a2ebdd69fbc6fb670d48889a575f3f685dfb42c8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_6eaf91a30795816d7b5ab342a2ebdd69fbc6fb670d48889a575f3f685dfb42c8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6eaf91a30795816d7b5ab342a2ebdd69fbc6fb670d48889a575f3f685dfb42c8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6eaf91a30795816d7b5ab342a2ebdd69fbc6fb670d48889a575f3f685dfb42c8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient output amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_5d6e3e7a778f04de2588734c091c00112253879305eae6cf8201e2362b43fd0d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient A amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_5d6e3e7a778f04de2588734c091c00112253879305eae6cf8201e2362b43fd0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_5d6e3e7a778f04de2588734c091c00112253879305eae6cf8201e2362b43fd0d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d6e3e7a778f04de2588734c091c00112253879305eae6cf8201e2362b43fd0d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d6e3e7a778f04de2588734c091c00112253879305eae6cf8201e2362b43fd0d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7956b12eed2c2f66e7d911209e39ae880dbb4cb35c0044f27817de99463b5f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient B amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_7956b12eed2c2f66e7d911209e39ae880dbb4cb35c0044f27817de99463b5f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_7956b12eed2c2f66e7d911209e39ae880dbb4cb35c0044f27817de99463b5f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7956b12eed2c2f66e7d911209e39ae880dbb4cb35c0044f27817de99463b5f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7956b12eed2c2f66e7d911209e39ae880dbb4cb35c0044f27817de99463b5f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063baa2abde11610066578063baa2abde146102eb578063d21220a71461031c578063dd62ed3e1461033a578063e8e337001461036a57610100565b806370a082311461023d57806395d89b411461026d578063a9059cbb1461028b578063ac41865a146102bb57610100565b806318160ddd116100d357806318160ddd146101a157806323b872dd146101bf578063313ce567146101ef57806338ed17391461020d57610100565b8063054d50d41461010557806306fdde0314610135578063095ea7b3146101535780630dfe168114610183575b600080fd5b61011f600480360381019061011a9190612227565b61039c565b60405161012c9190612289565b60405180910390f35b61013d61042a565b60405161014a9190612334565b60405180910390f35b61016d600480360381019061016891906123b4565b6104bc565b60405161017a919061240f565b60405180910390f35b61018b6104df565b6040516101989190612439565b60405180910390f35b6101a9610505565b6040516101b69190612289565b60405180910390f35b6101d960048036038101906101d49190612454565b61050f565b6040516101e6919061240f565b60405180910390f35b6101f761053e565b60405161020491906124c3565b60405180910390f35b61022760048036038101906102229190612543565b610547565b604051610234919061269b565b60405180910390f35b610257600480360381019061025291906126bd565b6108af565b6040516102649190612289565b60405180910390f35b6102756108f7565b6040516102829190612334565b60405180910390f35b6102a560048036038101906102a091906123b4565b610989565b6040516102b2919061240f565b60405180910390f35b6102d560048036038101906102d091906126ea565b6109ac565b6040516102e29190612289565b60405180910390f35b6103056004803603810190610300919061272a565b610ad2565b6040516103139291906127cc565b60405180910390f35b610324610d8f565b6040516103319190612439565b60405180910390f35b610354600480360381019061034f91906126ea565b610db5565b6040516103619190612289565b60405180910390f35b610384600480360381019061037f91906127f5565b610e3c565b604051610393939291906128ab565b60405180910390f35b60008082856103ab9190612911565b9050600084866103bb9190612953565b905060008111610400576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f7906129d3565b60405180910390fd5b80670de0b6b3a7640000836104159190612911565b61041f9190612a22565b925050509392505050565b60606003805461043990612a82565b80601f016020809104026020016040519081016040528092919081815260200182805461046590612a82565b80156104b25780601f10610487576101008083540402835291602001916104b2565b820191906000526020600020905b81548152906001019060200180831161049557829003601f168201915b5050505050905090565b6000806104c761117c565b90506104d4818585611184565b600191505092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b60008061051a61117c565b9050610527858285611196565b61053285858561122b565b60019150509392505050565b60006012905090565b60606000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050428410156105da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d190612aff565b60405180910390fd5b60028787905014610620576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061790612b6b565b60405180910390fd5b61062861213f565b8787600081811061063c5761063b612b8b565b5b905060200201602081019061065191906126bd565b816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508787600181811061069c5761069b612b8b565b5b90506020020160208101906106b191906126bd565b816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050898160400181815250508273ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614801561076057508173ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16145b806107d557508173ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161480156107d457508273ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16145b5b610814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080b90612c06565b60405180910390fd5b61081d8161131f565b610834816040015182608001518360a0015161039c565b8160600181815250508881606001511015610884576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087b90612c72565b60405180910390fd5b61088e8187611430565b6108a08160400151826060015161149c565b93505050509695505050505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461090690612a82565b80601f016020809104026020016040519081016040528092919081815260200182805461093290612a82565b801561097f5780601f106109545761010080835404028352916020019161097f565b820191906000526020600020905b81548152906001019060200180831161096257829003601f168201915b5050505050905090565b60008061099461117c565b90506109a181858561122b565b600191505092915050565b6000808373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109e89190612439565b602060405180830381865afa158015610a05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a299190612ca7565b905060008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a669190612439565b602060405180830381865afa158015610a83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa79190612ca7565b905081670de0b6b3a764000082610abe9190612911565b610ac89190612a22565b9250505092915050565b6000806000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905042851015610b66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5d90612aff565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16148015610bcc57508073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16145b80610c3957508073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16148015610c3857508173ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16145b5b610c78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6f90612c06565b60405180910390fd5b610c806121a1565b8b816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508a816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610d038a82600001518360200151611532565b8095508196505050610d1785858b8b61167a565b610d2e33888c888886600001518760200151611706565b3373ffffffffffffffffffffffffffffffffffffffff167f1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d86868d604051610d78939291906128ab565b60405180910390a250505097509795505050505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905042861015610ed1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec890612aff565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168d73ffffffffffffffffffffffffffffffffffffffff16148015610f3757508073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff16145b80610fa457508073ffffffffffffffffffffffffffffffffffffffff168d73ffffffffffffffffffffffffffffffffffffffff16148015610fa357508173ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff16145b5b610fe3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fda90612c06565b60405180910390fd5b60008d73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161101e9190612439565b602060405180830381865afa15801561103b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105f9190612ca7565b905060008d73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161109c9190612439565b602060405180830381865afa1580156110b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110dd9190612ca7565b90506110ed8d8d8d8d868661176f565b80975081985050506111028f8f89898d611875565b61111686886111119190612911565b6118f3565b94503373ffffffffffffffffffffffffffffffffffffffff167f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e888888604051611162939291906128ab565b60405180910390a250505050985098509895505050505050565b600033905090565b6111918383836001611a90565b505050565b60006111a28484610db5565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156112255781811015611215578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161120c93929190612cd4565b60405180910390fd5b61122484848484036000611a90565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361129d5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112949190612439565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361130f5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113069190612439565b60405180910390fd5b61131a838383611c67565b505050565b806000015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161135c9190612439565b602060405180830381865afa158015611379573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139d9190612ca7565b816080018181525050806020015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016113e39190612439565b602060405180830381865afa158015611400573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114249190612ca7565b8160a001818152505050565b61146533308460400151856000015173ffffffffffffffffffffffffffffffffffffffff16611e8c909392919063ffffffff16565b611498818360600151846020015173ffffffffffffffffffffffffffffffffffffffff16611f0e9092919063ffffffff16565b5050565b6060600267ffffffffffffffff8111156114b9576114b8612d0b565b5b6040519080825280602002602001820160405280156114e75781602001602082028036833780820191505090505b50905082816000815181106114ff576114fe612b8b565b5b60200260200101818152505081816001815181106115205761151f612b8b565b5b60200260200101818152505092915050565b60008060008473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016115709190612439565b602060405180830381865afa15801561158d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b19190612ca7565b905060008473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016115ee9190612439565b602060405180830381865afa15801561160b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162f9190612ca7565b9050600061163b610505565b905080838961164a9190612911565b6116549190612a22565b81838a6116619190612911565b61166b9190612a22565b94509450505050935093915050565b818410156116bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b490612d86565b60405180910390fd5b80831015611700576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f790612df2565b60405180910390fd5b50505050565b6117108786611f8d565b61173b86858473ffffffffffffffffffffffffffffffffffffffff16611f0e9092919063ffffffff16565b61176686848373ffffffffffffffffffffffffffffffffffffffff16611f0e9092919063ffffffff16565b50505050505050565b6000806000841480156117825750600083145b156117925787879150915061186a565b600084848a6117a19190612911565b6117ab9190612a22565b905087811161180357858110156117f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ee90612df2565b60405180910390fd5b8881925092505061186a565b600084868a6118129190612911565b61181c9190612a22565b905087811015611861576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185890612d86565b60405180910390fd5b80899350935050505b965096945050505050565b6118a23330858873ffffffffffffffffffffffffffffffffffffffff16611e8c909392919063ffffffff16565b6118cf3330848773ffffffffffffffffffffffffffffffffffffffff16611e8c909392919063ffffffff16565b6118ec816118e784866118e29190612911565b6118f3565b61200f565b5050505050565b60006001821161190557819050611a8b565b6000829050600060019050700100000000000000000000000000000000821061193757608082901c9150604081901b90505b68010000000000000000821061195657604082901c9150602081901b90505b640100000000821061197157602082901c9150601081901b90505b62010000821061198a57601082901c9150600881901b90505b61010082106119a257600882901c9150600481901b90505b601082106119b957600482901c9150600281901b90505b600482106119c957600181901b90505b600181600302901c905060018185816119e5576119e46129f3565b5b048201901c905060018185816119fe576119fd6129f3565b5b048201901c90506001818581611a1757611a166129f3565b5b048201901c90506001818581611a3057611a2f6129f3565b5b048201901c90506001818581611a4957611a486129f3565b5b048201901c90506001818581611a6257611a616129f3565b5b048201901c9050611a84818581611a7c57611a7b6129f3565b5b048211612091565b8103925050505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611b025760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611af99190612439565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b745760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611b6b9190612439565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611c61578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611c589190612289565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611cb9578060026000828254611cad9190612953565b92505081905550611d8c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611d45578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611d3c93929190612cd4565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611dd55780600260008282540392505081905550611e22565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611e7f9190612289565b60405180910390a3505050565b611f08848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611ec193929190612e12565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061209d565b50505050565b611f88838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611f41929190612e49565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061209d565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611fff5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611ff69190612439565b60405180910390fd5b61200b82600083611c67565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036120815760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016120789190612439565b60405180910390fd5b61208d60008383611c67565b5050565b60008115159050919050565b600080602060008451602086016000885af1806120c0576040513d6000823e3d81fd5b3d9250600051915050600082146120db5760018114156120f7565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b1561213957836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016121309190612439565b60405180910390fd5b50505050565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b600080fd5b6000819050919050565b612204816121f1565b811461220f57600080fd5b50565b600081359050612221816121fb565b92915050565b6000806000606084860312156122405761223f6121e7565b5b600061224e86828701612212565b935050602061225f86828701612212565b925050604061227086828701612212565b9150509250925092565b612283816121f1565b82525050565b600060208201905061229e600083018461227a565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156122de5780820151818401526020810190506122c3565b60008484015250505050565b6000601f19601f8301169050919050565b6000612306826122a4565b61231081856122af565b93506123208185602086016122c0565b612329816122ea565b840191505092915050565b6000602082019050818103600083015261234e81846122fb565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061238182612356565b9050919050565b61239181612376565b811461239c57600080fd5b50565b6000813590506123ae81612388565b92915050565b600080604083850312156123cb576123ca6121e7565b5b60006123d98582860161239f565b92505060206123ea85828601612212565b9150509250929050565b60008115159050919050565b612409816123f4565b82525050565b60006020820190506124246000830184612400565b92915050565b61243381612376565b82525050565b600060208201905061244e600083018461242a565b92915050565b60008060006060848603121561246d5761246c6121e7565b5b600061247b8682870161239f565b935050602061248c8682870161239f565b925050604061249d86828701612212565b9150509250925092565b600060ff82169050919050565b6124bd816124a7565b82525050565b60006020820190506124d860008301846124b4565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612503576125026124de565b5b8235905067ffffffffffffffff8111156125205761251f6124e3565b5b60208301915083602082028301111561253c5761253b6124e8565b5b9250929050565b60008060008060008060a087890312156125605761255f6121e7565b5b600061256e89828a01612212565b965050602061257f89828a01612212565b955050604087013567ffffffffffffffff8111156125a05761259f6121ec565b5b6125ac89828a016124ed565b945094505060606125bf89828a0161239f565b92505060806125d089828a01612212565b9150509295509295509295565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612612816121f1565b82525050565b60006126248383612609565b60208301905092915050565b6000602082019050919050565b6000612648826125dd565b61265281856125e8565b935061265d836125f9565b8060005b8381101561268e5781516126758882612618565b975061268083612630565b925050600181019050612661565b5085935050505092915050565b600060208201905081810360008301526126b5818461263d565b905092915050565b6000602082840312156126d3576126d26121e7565b5b60006126e18482850161239f565b91505092915050565b60008060408385031215612701576127006121e7565b5b600061270f8582860161239f565b92505060206127208582860161239f565b9150509250929050565b600080600080600080600060e0888a031215612749576127486121e7565b5b60006127578a828b0161239f565b97505060206127688a828b0161239f565b96505060406127798a828b01612212565b955050606061278a8a828b01612212565b945050608061279b8a828b01612212565b93505060a06127ac8a828b0161239f565b92505060c06127bd8a828b01612212565b91505092959891949750929550565b60006040820190506127e1600083018561227a565b6127ee602083018461227a565b9392505050565b600080600080600080600080610100898b031215612816576128156121e7565b5b60006128248b828c0161239f565b98505060206128358b828c0161239f565b97505060406128468b828c01612212565b96505060606128578b828c01612212565b95505060806128688b828c01612212565b94505060a06128798b828c01612212565b93505060c061288a8b828c0161239f565b92505060e061289b8b828c01612212565b9150509295985092959890939650565b60006060820190506128c0600083018661227a565b6128cd602083018561227a565b6128da604083018461227a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061291c826121f1565b9150612927836121f1565b9250828202612935816121f1565b9150828204841483151761294c5761294b6128e2565b5b5092915050565b600061295e826121f1565b9150612969836121f1565b9250828201905080821115612981576129806128e2565b5b92915050565b7f4e6f206469766973696f6e000000000000000000000000000000000000000000600082015250565b60006129bd600b836122af565b91506129c882612987565b602082019050919050565b600060208201905081810360008301526129ec816129b0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612a2d826121f1565b9150612a38836121f1565b925082612a4857612a476129f3565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612a9a57607f821691505b602082108103612aad57612aac612a53565b5b50919050565b7f446561646c696e65207061737365640000000000000000000000000000000000600082015250565b6000612ae9600f836122af565b9150612af482612ab3565b602082019050919050565b60006020820190508181036000830152612b1881612adc565b9050919050565b7f496e76616c696420706174680000000000000000000000000000000000000000600082015250565b6000612b55600c836122af565b9150612b6082612b1f565b602082019050919050565b60006020820190508181036000830152612b8481612b48565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e76616c696420746f6b656e73000000000000000000000000000000000000600082015250565b6000612bf0600e836122af565b9150612bfb82612bba565b602082019050919050565b60006020820190508181036000830152612c1f81612be3565b9050919050565b7f496e73756666696369656e74206f757470757420616d6f756e74000000000000600082015250565b6000612c5c601a836122af565b9150612c6782612c26565b602082019050919050565b60006020820190508181036000830152612c8b81612c4f565b9050919050565b600081519050612ca1816121fb565b92915050565b600060208284031215612cbd57612cbc6121e7565b5b6000612ccb84828501612c92565b91505092915050565b6000606082019050612ce9600083018661242a565b612cf6602083018561227a565b612d03604083018461227a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f496e73756666696369656e74204120616d6f756e740000000000000000000000600082015250565b6000612d706015836122af565b9150612d7b82612d3a565b602082019050919050565b60006020820190508181036000830152612d9f81612d63565b9050919050565b7f496e73756666696369656e74204220616d6f756e740000000000000000000000600082015250565b6000612ddc6015836122af565b9150612de782612da6565b602082019050919050565b60006020820190508181036000830152612e0b81612dcf565b9050919050565b6000606082019050612e27600083018661242a565b612e34602083018561242a565b612e41604083018461227a565b949350505050565b6000604082019050612e5e600083018561242a565b612e6b602083018461227a565b939250505056fea2646970667358221220d7a9e9089a931eddc180bd3efd03e68c2411182d4f29d1934a46b7e4337a180d64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xBAA2ABDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBAA2ABDE EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xE8E33700 EQ PUSH2 0x36A JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0x2BB JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x38ED1739 EQ PUSH2 0x20D JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x54D50D4 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST PUSH2 0x39C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x2289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x42A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x2334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x23B4 JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x240F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x2289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x2454 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x240F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH2 0x53E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x24C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x2543 JUMP JUMPDEST PUSH2 0x547 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x269B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x8AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x2289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x275 PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x2334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x23B4 JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x240F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x26EA JUMP JUMPDEST PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x2289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x272A JUMP JUMPDEST PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP3 SWAP2 SWAP1 PUSH2 0x27CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH2 0xD8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x26EA JUMP JUMPDEST PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x2289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x384 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x27F5 JUMP JUMPDEST PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x393 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP6 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x2911 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 DUP7 PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x2953 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x400 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F7 SWAP1 PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x2911 JUMP JUMPDEST PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x2A22 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x439 SWAP1 PUSH2 0x2A82 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x465 SWAP1 PUSH2 0x2A82 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x487 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x495 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4C7 PUSH2 0x117C JUMP JUMPDEST SWAP1 POP PUSH2 0x4D4 DUP2 DUP6 DUP6 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x51A PUSH2 0x117C JUMP JUMPDEST SWAP1 POP PUSH2 0x527 DUP6 DUP3 DUP6 PUSH2 0x1196 JUMP JUMPDEST PUSH2 0x532 DUP6 DUP6 DUP6 PUSH2 0x122B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP TIMESTAMP DUP5 LT ISZERO PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP8 DUP8 SWAP1 POP EQ PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x617 SWAP1 PUSH2 0x2B6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x628 PUSH2 0x213F JUMP JUMPDEST DUP8 DUP8 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x63C JUMPI PUSH2 0x63B PUSH2 0x2B8B JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x26BD JUMP JUMPDEST DUP2 PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP8 DUP8 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x69C JUMPI PUSH2 0x69B PUSH2 0x2B8B JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6B1 SWAP2 SWAP1 PUSH2 0x26BD JUMP JUMPDEST DUP2 PUSH1 0x20 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP10 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x760 JUMPI POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x7D5 JUMPI POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x7D4 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80B SWAP1 PUSH2 0x2C06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x81D DUP2 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x834 DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x80 ADD MLOAD DUP4 PUSH1 0xA0 ADD MLOAD PUSH2 0x39C JUMP JUMPDEST DUP2 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP9 DUP2 PUSH1 0x60 ADD MLOAD LT ISZERO PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87B SWAP1 PUSH2 0x2C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x88E DUP2 DUP8 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x8A0 DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0x149C JUMP JUMPDEST SWAP4 POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x906 SWAP1 PUSH2 0x2A82 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x932 SWAP1 PUSH2 0x2A82 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x97F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x954 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x97F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x962 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x994 PUSH2 0x117C JUMP JUMPDEST SWAP1 POP PUSH2 0x9A1 DUP2 DUP6 DUP6 PUSH2 0x122B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA29 SWAP2 SWAP1 PUSH2 0x2CA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x2CA7 JUMP JUMPDEST SWAP1 POP DUP2 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0xABE SWAP2 SWAP1 PUSH2 0x2911 JUMP JUMPDEST PUSH2 0xAC8 SWAP2 SWAP1 PUSH2 0x2A22 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP TIMESTAMP DUP6 LT ISZERO PUSH2 0xB66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5D SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xBCC JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xC39 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xC38 JUMPI POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST PUSH2 0xC78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6F SWAP1 PUSH2 0x2C06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC80 PUSH2 0x21A1 JUMP JUMPDEST DUP12 DUP2 PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP11 DUP2 PUSH1 0x20 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0xD03 DUP11 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x1532 JUMP JUMPDEST DUP1 SWAP6 POP DUP2 SWAP7 POP POP POP PUSH2 0xD17 DUP6 DUP6 DUP12 DUP12 PUSH2 0x167A JUMP JUMPDEST PUSH2 0xD2E CALLER DUP9 DUP13 DUP9 DUP9 DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x1706 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1DC8BB69DF2B8E91FBDCBFCF93D951B3F0000F085A95FE3F7946D6161439245D DUP7 DUP7 DUP14 PUSH1 0x40 MLOAD PUSH2 0xD78 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP TIMESTAMP DUP7 LT ISZERO PUSH2 0xED1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC8 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xF37 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xFA4 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xFA3 JUMPI POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST PUSH2 0xFE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDA SWAP1 PUSH2 0x2C06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101E SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x103B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x105F SWAP2 SWAP1 PUSH2 0x2CA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109C SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10DD SWAP2 SWAP1 PUSH2 0x2CA7 JUMP JUMPDEST SWAP1 POP PUSH2 0x10ED DUP14 DUP14 DUP14 DUP14 DUP7 DUP7 PUSH2 0x176F JUMP JUMPDEST DUP1 SWAP8 POP DUP2 SWAP9 POP POP POP PUSH2 0x1102 DUP16 DUP16 DUP10 DUP10 DUP14 PUSH2 0x1875 JUMP JUMPDEST PUSH2 0x1116 DUP7 DUP9 PUSH2 0x1111 SWAP2 SWAP1 PUSH2 0x2911 JUMP JUMPDEST PUSH2 0x18F3 JUMP JUMPDEST SWAP5 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x64B83944E79C3CE8D4C297411DE637C3E102D064677AAC0C163976EBDCD6F50E DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1162 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1191 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1A90 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A2 DUP5 DUP5 PUSH2 0xDB5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1225 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1215 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1224 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1A90 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x129D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1294 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1306 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x131A DUP4 DUP4 DUP4 PUSH2 0x1C67 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135C SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1379 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x139D SWAP2 SWAP1 PUSH2 0x2CA7 JUMP JUMPDEST DUP2 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E3 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1400 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1424 SWAP2 SWAP1 PUSH2 0x2CA7 JUMP JUMPDEST DUP2 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x1465 CALLER ADDRESS DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E8C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1498 DUP2 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F0E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14B9 JUMPI PUSH2 0x14B8 PUSH2 0x2D0B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14E7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x14FF JUMPI PUSH2 0x14FE PUSH2 0x2B8B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1520 JUMPI PUSH2 0x151F PUSH2 0x2B8B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1570 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x158D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15B1 SWAP2 SWAP1 PUSH2 0x2CA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15EE SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x160B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x162F SWAP2 SWAP1 PUSH2 0x2CA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x163B PUSH2 0x505 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP10 PUSH2 0x164A SWAP2 SWAP1 PUSH2 0x2911 JUMP JUMPDEST PUSH2 0x1654 SWAP2 SWAP1 PUSH2 0x2A22 JUMP JUMPDEST DUP2 DUP4 DUP11 PUSH2 0x1661 SWAP2 SWAP1 PUSH2 0x2911 JUMP JUMPDEST PUSH2 0x166B SWAP2 SWAP1 PUSH2 0x2A22 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0x16BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B4 SWAP1 PUSH2 0x2D86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 LT ISZERO PUSH2 0x1700 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F7 SWAP1 PUSH2 0x2DF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1710 DUP8 DUP7 PUSH2 0x1F8D JUMP JUMPDEST PUSH2 0x173B DUP7 DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F0E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1766 DUP7 DUP5 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F0E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ DUP1 ISZERO PUSH2 0x1782 JUMPI POP PUSH1 0x0 DUP4 EQ JUMPDEST ISZERO PUSH2 0x1792 JUMPI DUP8 DUP8 SWAP2 POP SWAP2 POP PUSH2 0x186A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP11 PUSH2 0x17A1 SWAP2 SWAP1 PUSH2 0x2911 JUMP JUMPDEST PUSH2 0x17AB SWAP2 SWAP1 PUSH2 0x2A22 JUMP JUMPDEST SWAP1 POP DUP8 DUP2 GT PUSH2 0x1803 JUMPI DUP6 DUP2 LT ISZERO PUSH2 0x17F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17EE SWAP1 PUSH2 0x2DF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 DUP2 SWAP3 POP SWAP3 POP POP PUSH2 0x186A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP11 PUSH2 0x1812 SWAP2 SWAP1 PUSH2 0x2911 JUMP JUMPDEST PUSH2 0x181C SWAP2 SWAP1 PUSH2 0x2A22 JUMP JUMPDEST SWAP1 POP DUP8 DUP2 LT ISZERO PUSH2 0x1861 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1858 SWAP1 PUSH2 0x2D86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP10 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18A2 CALLER ADDRESS DUP6 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E8C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x18CF CALLER ADDRESS DUP5 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E8C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x18EC DUP2 PUSH2 0x18E7 DUP5 DUP7 PUSH2 0x18E2 SWAP2 SWAP1 PUSH2 0x2911 JUMP JUMPDEST PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x200F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 GT PUSH2 0x1905 JUMPI DUP2 SWAP1 POP PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH17 0x100000000000000000000000000000000 DUP3 LT PUSH2 0x1937 JUMPI PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x40 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x1956 JUMPI PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x20 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x1971 JUMPI PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x10 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x198A JUMPI PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x8 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x19A2 JUMPI PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x4 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x19B9 JUMPI PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x2 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x19C9 JUMPI PUSH1 0x1 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 MUL SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x19E5 JUMPI PUSH2 0x19E4 PUSH2 0x29F3 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x19FE JUMPI PUSH2 0x19FD PUSH2 0x29F3 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A17 JUMPI PUSH2 0x1A16 PUSH2 0x29F3 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A30 JUMPI PUSH2 0x1A2F PUSH2 0x29F3 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A49 JUMPI PUSH2 0x1A48 PUSH2 0x29F3 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A62 JUMPI PUSH2 0x1A61 PUSH2 0x29F3 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1A84 DUP2 DUP6 DUP2 PUSH2 0x1A7C JUMPI PUSH2 0x1A7B PUSH2 0x29F3 JUMP JUMPDEST JUMPDEST DIV DUP3 GT PUSH2 0x2091 JUMP JUMPDEST DUP2 SUB SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B02 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF9 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B74 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6B SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1C61 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1C58 SWAP2 SWAP1 PUSH2 0x2289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CB9 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1CAD SWAP2 SWAP1 PUSH2 0x2953 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1D45 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DD5 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E22 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1E7F SWAP2 SWAP1 PUSH2 0x2289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1F08 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1EC1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x209D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1F88 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1F41 SWAP3 SWAP2 SWAP1 PUSH2 0x2E49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x209D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FFF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF6 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x200B DUP3 PUSH1 0x0 DUP4 PUSH2 0x1C67 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2081 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2078 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x208D PUSH1 0x0 DUP4 DUP4 PUSH2 0x1C67 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x20C0 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0x20DB JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x20F7 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2139 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2130 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2204 DUP2 PUSH2 0x21F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x220F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2221 DUP2 PUSH2 0x21FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2240 JUMPI PUSH2 0x223F PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x224E DUP7 DUP3 DUP8 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x225F DUP7 DUP3 DUP8 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2270 DUP7 DUP3 DUP8 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2283 DUP2 PUSH2 0x21F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x229E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x227A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22DE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x22C3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2306 DUP3 PUSH2 0x22A4 JUMP JUMPDEST PUSH2 0x2310 DUP2 DUP6 PUSH2 0x22AF JUMP JUMPDEST SWAP4 POP PUSH2 0x2320 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x22C0 JUMP JUMPDEST PUSH2 0x2329 DUP2 PUSH2 0x22EA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x234E DUP2 DUP5 PUSH2 0x22FB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2381 DUP3 PUSH2 0x2356 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2391 DUP2 PUSH2 0x2376 JUMP JUMPDEST DUP2 EQ PUSH2 0x239C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23AE DUP2 PUSH2 0x2388 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23CB JUMPI PUSH2 0x23CA PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23D9 DUP6 DUP3 DUP7 ADD PUSH2 0x239F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23EA DUP6 DUP3 DUP7 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2409 DUP2 PUSH2 0x23F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2424 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2400 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2433 DUP2 PUSH2 0x2376 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x244E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x242A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x246D JUMPI PUSH2 0x246C PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x247B DUP7 DUP3 DUP8 ADD PUSH2 0x239F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x248C DUP7 DUP3 DUP8 ADD PUSH2 0x239F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x249D DUP7 DUP3 DUP8 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24BD DUP2 PUSH2 0x24A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2503 JUMPI PUSH2 0x2502 PUSH2 0x24DE JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2520 JUMPI PUSH2 0x251F PUSH2 0x24E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x253C JUMPI PUSH2 0x253B PUSH2 0x24E8 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2560 JUMPI PUSH2 0x255F PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x256E DUP10 DUP3 DUP11 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x257F DUP10 DUP3 DUP11 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25A0 JUMPI PUSH2 0x259F PUSH2 0x21EC JUMP JUMPDEST JUMPDEST PUSH2 0x25AC DUP10 DUP3 DUP11 ADD PUSH2 0x24ED JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x60 PUSH2 0x25BF DUP10 DUP3 DUP11 ADD PUSH2 0x239F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x25D0 DUP10 DUP3 DUP11 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2612 DUP2 PUSH2 0x21F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2624 DUP4 DUP4 PUSH2 0x2609 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2648 DUP3 PUSH2 0x25DD JUMP JUMPDEST PUSH2 0x2652 DUP2 DUP6 PUSH2 0x25E8 JUMP JUMPDEST SWAP4 POP PUSH2 0x265D DUP4 PUSH2 0x25F9 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x268E JUMPI DUP2 MLOAD PUSH2 0x2675 DUP9 DUP3 PUSH2 0x2618 JUMP JUMPDEST SWAP8 POP PUSH2 0x2680 DUP4 PUSH2 0x2630 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2661 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26B5 DUP2 DUP5 PUSH2 0x263D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26D3 JUMPI PUSH2 0x26D2 PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26E1 DUP5 DUP3 DUP6 ADD PUSH2 0x239F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2701 JUMPI PUSH2 0x2700 PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x270F DUP6 DUP3 DUP7 ADD PUSH2 0x239F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2720 DUP6 DUP3 DUP7 ADD PUSH2 0x239F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2749 JUMPI PUSH2 0x2748 PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2757 DUP11 DUP3 DUP12 ADD PUSH2 0x239F JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2768 DUP11 DUP3 DUP12 ADD PUSH2 0x239F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2779 DUP11 DUP3 DUP12 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x278A DUP11 DUP3 DUP12 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x279B DUP11 DUP3 DUP12 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x27AC DUP11 DUP3 DUP12 ADD PUSH2 0x239F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x27BD DUP11 DUP3 DUP12 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x27E1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x27EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x227A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2816 JUMPI PUSH2 0x2815 PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2824 DUP12 DUP3 DUP13 ADD PUSH2 0x239F JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x2835 DUP12 DUP3 DUP13 ADD PUSH2 0x239F JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x2846 DUP12 DUP3 DUP13 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x2857 DUP12 DUP3 DUP13 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x2868 DUP12 DUP3 DUP13 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x2879 DUP12 DUP3 DUP13 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x288A DUP12 DUP3 DUP13 ADD PUSH2 0x239F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x289B DUP12 DUP3 DUP13 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x28C0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x28CD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x28DA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x227A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x291C DUP3 PUSH2 0x21F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2927 DUP4 PUSH2 0x21F1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2935 DUP2 PUSH2 0x21F1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x294C JUMPI PUSH2 0x294B PUSH2 0x28E2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295E DUP3 PUSH2 0x21F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2969 DUP4 PUSH2 0x21F1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2981 JUMPI PUSH2 0x2980 PUSH2 0x28E2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F206469766973696F6E000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29BD PUSH1 0xB DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x29C8 DUP3 PUSH2 0x2987 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29EC DUP2 PUSH2 0x29B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2A2D DUP3 PUSH2 0x21F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A38 DUP4 PUSH2 0x21F1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2A48 JUMPI PUSH2 0x2A47 PUSH2 0x29F3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2A9A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2AAD JUMPI PUSH2 0x2AAC PUSH2 0x2A53 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x446561646C696E65207061737365640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AE9 PUSH1 0xF DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2AF4 DUP3 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B18 DUP2 PUSH2 0x2ADC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420706174680000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B55 PUSH1 0xC DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2B60 DUP3 PUSH2 0x2B1F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B84 DUP2 PUSH2 0x2B48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x496E76616C696420746F6B656E73000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF0 PUSH1 0xE DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2BFB DUP3 PUSH2 0x2BBA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C1F DUP2 PUSH2 0x2BE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206F757470757420616D6F756E74000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C5C PUSH1 0x1A DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2C67 DUP3 PUSH2 0x2C26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C8B DUP2 PUSH2 0x2C4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CA1 DUP2 PUSH2 0x21FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CBD JUMPI PUSH2 0x2CBC PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CCB DUP5 DUP3 DUP6 ADD PUSH2 0x2C92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2CE9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x242A JUMP JUMPDEST PUSH2 0x2CF6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x2D03 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x227A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x496E73756666696369656E74204120616D6F756E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D70 PUSH1 0x15 DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2D7B DUP3 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D9F DUP2 PUSH2 0x2D63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74204220616D6F756E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DDC PUSH1 0x15 DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2DE7 DUP3 PUSH2 0x2DA6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E0B DUP2 PUSH2 0x2DCF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2E27 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x242A JUMP JUMPDEST PUSH2 0x2E34 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x242A JUMP JUMPDEST PUSH2 0x2E41 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x227A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E5E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x242A JUMP JUMPDEST PUSH2 0x2E6B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x227A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0xA9 0xE9 ADDMOD SWAP11 SWAP4 0x1E 0xDD 0xC1 DUP1 0xBD RETURNDATACOPY REVERT SUB 0xE6 DUP13 0x24 GT XOR 0x2D 0x4F 0x29 0xD1 SWAP4 BLOBBASEFEE CHAINID 0xB7 0xE4 CALLER PUSH27 0x180D64736F6C634300081C00330000000000000000000000000000 ","sourceMap":"530:19891:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20070:349;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;665:21:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14960:1030:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3296:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19425:277:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9560:956;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;761:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4682:1134:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;20070:349;20193:14;20219:17;20250:10;20239:8;:21;;;;:::i;:::-;20219:41;;20270:19;20303:9;20292:8;:20;;;;:::i;:::-;20270:42;;20344:1;20330:11;:15;20322:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;20401:11;20393:4;20381:9;:16;;;;:::i;:::-;20380:32;;;;:::i;:::-;20371:41;;20209:210;;20070:349;;;;;:::o;1760:89:5:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;665:21:14:-;;;;;;;;;;;;;:::o;2830:97:5:-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;14960:1030:14:-;15154:21;15187:15;15205:6;;;;;;;;;;;15187:24;;15221:15;15239:6;;;;;;;;;;;15221:24;;15275:15;15263:8;:27;;15255:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;15343:1;15328:4;;:11;;:16;15320:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;15379:20;;:::i;:::-;15424:4;;15429:1;15424:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;15409:4;:12;;:22;;;;;;;;;;;15457:4;;15462:1;15457:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;15441:4;:13;;:23;;;;;;;;;;;15490:8;15474:4;:13;;:24;;;;;15534:7;15518:23;;:4;:12;;;:23;;;:51;;;;;15562:7;15545:24;;:4;:13;;;:24;;;15518:51;15517:110;;;;15591:7;15575:23;;:4;:12;;;:23;;;:51;;;;;15619:7;15602:24;;:4;:13;;;:24;;;15575:51;15517:110;15509:137;;;;;;;;;;;;:::i;:::-;;;;;;;;;15665:24;15684:4;15665:18;:24::i;:::-;15716:60;15729:4;:13;;;15744:4;:14;;;15760:4;:15;;;15716:12;:60::i;:::-;15699:4;:14;;:77;;;;;15821:12;15803:4;:14;;;:30;;15795:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;15883:22;15896:4;15902:2;15883:12;:22::i;:::-;15934:49;15953:4;:13;;;15968:4;:14;;;15934:18;:49::i;:::-;15924:59;;15177:813;;;14960:1030;;;;;;;;:::o;2985:116:5:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;1962:93::-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3296:178::-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;19425:277:14:-;19498:13;19523:16;19549:6;19542:24;;;19575:4;19542:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19523:58;;19591:16;19617:6;19610:24;;;19643:4;19610:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19591:58;;19687:8;19679:4;19668:8;:15;;;;:::i;:::-;19667:28;;;;:::i;:::-;19659:36;;19513:189;;19425:277;;;;:::o;9560:956::-;9786:15;9803;9830;9848:6;;;;;;;;;;;9830:24;;9864:15;9882:6;;;;;;;;;;;9864:24;;9918:15;9906:8;:27;;9898:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;9982:7;9972:17;;:6;:17;;;:38;;;;;10003:7;9993:17;;:6;:17;;;9972:38;9971:84;;;;10026:7;10016:17;;:6;:17;;;:38;;;;;10047:7;10037:17;;:6;:17;;;10016:38;9971:84;9963:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;10085:25;;:::i;:::-;10134:6;10120:4;:11;;:20;;;;;;;;;;;10164:6;10150:4;:11;;:20;;;;;;;;;;;10210:54;10228:9;10239:4;:11;;;10252:4;:11;;;10210:17;:54::i;:::-;10189:75;;;;;;;;10274:58;10291:7;10300;10309:10;10321;10274:16;:58::i;:::-;10342:94;10366:10;10378:2;10382:9;10393:7;10402;10411:4;:11;;;10424:4;:11;;;10342:23;:94::i;:::-;10469:10;10452:57;;;10481:7;10490;10499:9;10452:57;;;;;;;;:::i;:::-;;;;;;;;9820:696;;;9560:956;;;;;;;;;;:::o;761:21::-;;;;;;;;;;;;;:::o;3532:140:5:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;4682:1134:14:-;4942:15;4959;4976:17;5005:15;5023:6;;;;;;;;;;;5005:24;;5039:15;5057:6;;;;;;;;;;;5039:24;;5093:15;5081:8;:27;;5073:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;5157:7;5147:17;;:6;:17;;;:38;;;;;5178:7;5168:17;;:6;:17;;;5147:38;5146:84;;;;5201:7;5191:17;;:6;:17;;;:38;;;;;5222:7;5212:17;;:6;:17;;;5191:38;5146:84;5138:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5259:16;5285:6;5278:24;;;5311:4;5278:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5259:58;;5327:16;5353:6;5346:24;;;5379:4;5346:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5327:58;;5425:182;5463:14;5491;5519:10;5543;5567:8;5589;5425:24;:182::i;:::-;5404:203;;;;;;;;5626:53;5642:6;5650;5658:7;5667;5676:2;5626:15;:53::i;:::-;5710:28;5730:7;5720;:17;;;;:::i;:::-;5710:9;:28::i;:::-;5698:40;;5769:10;5754:55;;;5781:7;5790;5799:9;5754:55;;;;;;;;:::i;:::-;;;;;;;;4995:821;;;;4682:1134;;;;;;;;;;;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;8707:128:5:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;16960:216:14:-;17057:4;:12;;;17050:30;;;17089:4;17050:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17033:4;:14;;:62;;;;;17130:4;:13;;;17123:31;;;17163:4;17123:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17105:4;:15;;:64;;;;;16960:216;:::o;18051:224::-;18125:79;18163:10;18183:4;18190;:13;;;18132:4;:12;;;18125:37;;;;:79;;;;;;:::i;:::-;18214:54;18249:2;18253:4;:14;;;18221:4;:13;;;18214:34;;;;:54;;;;;:::i;:::-;18051:224;;:::o;18869:237::-;18956:21;19010:1;18999:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18989:23;;19035:8;19022:7;19030:1;19022:10;;;;;;;;:::i;:::-;;;;;;;:21;;;;;19066:9;19053:7;19061:1;19053:10;;;;;;;;:::i;:::-;;;;;;;:22;;;;;18869:237;;;;:::o;11363:400::-;11463:15;11480;11507:16;11533:6;11526:24;;;11559:4;11526:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11507:58;;11575:16;11601:6;11594:24;;;11627:4;11594:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11575:58;;11643:14;11660:13;:11;:13::i;:::-;11643:30;;11716:6;11704:8;11692:9;:20;;;;:::i;:::-;11691:31;;;;:::i;:::-;11749:6;11737:8;11725:9;:20;;;;:::i;:::-;11724:31;;;;:::i;:::-;11683:73;;;;;;;11363:400;;;;;;:::o;12510:250::-;12652:10;12641:7;:21;;12633:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;12717:10;12706:7;:21;;12698:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;12510:250;;;;:::o;13971:353::-;14195:22;14201:4;14207:9;14195:5;:22::i;:::-;14227:40;14255:2;14259:7;14234:6;14227:27;;;;:40;;;;;:::i;:::-;14277;14305:2;14309:7;14284:6;14277:27;;;;:40;;;;;:::i;:::-;13971:353;;;;;;;:::o;6808:856::-;7042:15;7059;7102:1;7090:8;:13;:30;;;;;7119:1;7107:8;:13;7090:30;7086:100;;;7144:14;7160;7136:39;;;;;;7086:100;7204:22;7259:8;7247;7230:14;:25;;;;:::i;:::-;7229:38;;;;:::i;:::-;7204:63;;7299:14;7281;:32;7277:178;;7355:10;7337:14;:28;;7329:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;7413:14;7429;7405:39;;;;;;;7277:178;7473:22;7528:8;7516;7499:14;:25;;;;:::i;:::-;7498:38;;;;:::i;:::-;7473:63;;7572:10;7554:14;:28;;7546:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;7626:14;7642;7618:39;;;;;;6808:856;;;;;;;;;;:::o;8462:367::-;8629:67;8661:10;8681:4;8688:7;8636:6;8629:31;;;;:67;;;;;;:::i;:::-;8706;8738:10;8758:4;8765:7;8713:6;8706:31;;;;:67;;;;;;:::i;:::-;8783:39;8789:2;8793:28;8813:7;8803;:17;;;;:::i;:::-;8793:9;:28::i;:::-;8783:5;:39::i;:::-;8462:367;;;;;:::o;20567:5181:12:-;20615:7;20733:1;20728;:6;20724:53;;20761:1;20754:8;;;;20724:53;21704:10;21717:1;21704:14;;21732:10;21745:1;21732:14;;21772:8;21765:2;:16;21761:92;;21808:3;21801:10;;;;;21836:2;21829:9;;;;;21761:92;21877:7;21870:2;:15;21866:90;;21912:2;21905:9;;;;;21939:2;21932:9;;;;;21866:90;21980:7;21973:2;:15;21969:90;;22015:2;22008:9;;;;;22042:2;22035:9;;;;;21969:90;22083:7;22076:2;:15;22072:89;;22118:2;22111:9;;;;;22145:1;22138:8;;;;;22072:89;22185:6;22178:2;:14;22174:87;;22219:1;22212:8;;;;;22245:1;22238:8;;;;;22174:87;22285:6;22278:2;:14;22274:87;;22319:1;22312:8;;;;;22345:1;22338:8;;;;;22274:87;22385:6;22378:2;:14;22374:61;;22419:1;22412:8;;;;;22374:61;22872:1;22865:2;22861:1;:6;22860:13;;22855:18;;24782:1;24775:2;24771:1;:6;;;;;:::i;:::-;;;24766:2;:11;24765:18;;24760:23;;24891:1;24884:2;24880:1;:6;;;;;:::i;:::-;;;24875:2;:11;24874:18;;24869:23;;25002:1;24995:2;24991:1;:6;;;;;:::i;:::-;;;24986:2;:11;24985:18;;24980:23;;25111:1;25104:2;25100:1;:6;;;;;:::i;:::-;;;25095:2;:11;25094:18;;25089:23;;25221:1;25214:2;25210:1;:6;;;;;:::i;:::-;;;25205:2;:11;25204:18;;25199:23;;25331:1;25324:2;25320:1;:6;;;;;:::i;:::-;;;25315:2;:11;25314:18;;25309:23;;25703:28;25728:2;25724:1;:6;;;;;:::i;:::-;;;25719:2;:11;25703:15;:28::i;:::-;25698:2;:33;25691:40;;;;20567:5181;;;;:::o;9682:432:5:-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;1618:188:8:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;1219:160::-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;7965:206:5:-;8054:1;8035:21;;:7;:21;;;8031:89;;8106:1;8079:30;;;;;;;;;;;:::i;:::-;;;;;;;;8031:89;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;:::-;7965:206;;:::o;7439:208::-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;34795:145:13:-;34842:9;34921:1;34914:9;34907:17;34902:22;;34795:145;;;:::o;8370:720:8:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:17:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:619::-;767:6;775;783;832:2;820:9;811:7;807:23;803:32;800:119;;;838:79;;:::i;:::-;800:119;958:1;983:53;1028:7;1019:6;1008:9;1004:22;983:53;:::i;:::-;973:63;;929:117;1085:2;1111:53;1156:7;1147:6;1136:9;1132:22;1111:53;:::i;:::-;1101:63;;1056:118;1213:2;1239:53;1284:7;1275:6;1264:9;1260:22;1239:53;:::i;:::-;1229:63;;1184:118;690:619;;;;;:::o;1315:118::-;1402:24;1420:5;1402:24;:::i;:::-;1397:3;1390:37;1315:118;;:::o;1439:222::-;1532:4;1570:2;1559:9;1555:18;1547:26;;1583:71;1651:1;1640:9;1636:17;1627:6;1583:71;:::i;:::-;1439:222;;;;:::o;1667:99::-;1719:6;1753:5;1747:12;1737:22;;1667:99;;;:::o;1772:169::-;1856:11;1890:6;1885:3;1878:19;1930:4;1925:3;1921:14;1906:29;;1772:169;;;;:::o;1947:248::-;2029:1;2039:113;2053:6;2050:1;2047:13;2039:113;;;2138:1;2133:3;2129:11;2123:18;2119:1;2114:3;2110:11;2103:39;2075:2;2072:1;2068:10;2063:15;;2039:113;;;2186:1;2177:6;2172:3;2168:16;2161:27;2009:186;1947:248;;;:::o;2201:102::-;2242:6;2293:2;2289:7;2284:2;2277:5;2273:14;2269:28;2259:38;;2201:102;;;:::o;2309:377::-;2397:3;2425:39;2458:5;2425:39;:::i;:::-;2480:71;2544:6;2539:3;2480:71;:::i;:::-;2473:78;;2560:65;2618:6;2613:3;2606:4;2599:5;2595:16;2560:65;:::i;:::-;2650:29;2672:6;2650:29;:::i;:::-;2645:3;2641:39;2634:46;;2401:285;2309:377;;;;:::o;2692:313::-;2805:4;2843:2;2832:9;2828:18;2820:26;;2892:9;2886:4;2882:20;2878:1;2867:9;2863:17;2856:47;2920:78;2993:4;2984:6;2920:78;:::i;:::-;2912:86;;2692:313;;;;:::o;3011:126::-;3048:7;3088:42;3081:5;3077:54;3066:65;;3011:126;;;:::o;3143:96::-;3180:7;3209:24;3227:5;3209:24;:::i;:::-;3198:35;;3143:96;;;:::o;3245:122::-;3318:24;3336:5;3318:24;:::i;:::-;3311:5;3308:35;3298:63;;3357:1;3354;3347:12;3298:63;3245:122;:::o;3373:139::-;3419:5;3457:6;3444:20;3435:29;;3473:33;3500:5;3473:33;:::i;:::-;3373:139;;;;:::o;3518:474::-;3586:6;3594;3643:2;3631:9;3622:7;3618:23;3614:32;3611:119;;;3649:79;;:::i;:::-;3611:119;3769:1;3794:53;3839:7;3830:6;3819:9;3815:22;3794:53;:::i;:::-;3784:63;;3740:117;3896:2;3922:53;3967:7;3958:6;3947:9;3943:22;3922:53;:::i;:::-;3912:63;;3867:118;3518:474;;;;;:::o;3998:90::-;4032:7;4075:5;4068:13;4061:21;4050:32;;3998:90;;;:::o;4094:109::-;4175:21;4190:5;4175:21;:::i;:::-;4170:3;4163:34;4094:109;;:::o;4209:210::-;4296:4;4334:2;4323:9;4319:18;4311:26;;4347:65;4409:1;4398:9;4394:17;4385:6;4347:65;:::i;:::-;4209:210;;;;:::o;4425:118::-;4512:24;4530:5;4512:24;:::i;:::-;4507:3;4500:37;4425:118;;:::o;4549:222::-;4642:4;4680:2;4669:9;4665:18;4657:26;;4693:71;4761:1;4750:9;4746:17;4737:6;4693:71;:::i;:::-;4549:222;;;;:::o;4777:619::-;4854:6;4862;4870;4919:2;4907:9;4898:7;4894:23;4890:32;4887:119;;;4925:79;;:::i;:::-;4887:119;5045:1;5070:53;5115:7;5106:6;5095:9;5091:22;5070:53;:::i;:::-;5060:63;;5016:117;5172:2;5198:53;5243:7;5234:6;5223:9;5219:22;5198:53;:::i;:::-;5188:63;;5143:118;5300:2;5326:53;5371:7;5362:6;5351:9;5347:22;5326:53;:::i;:::-;5316:63;;5271:118;4777:619;;;;;:::o;5402:86::-;5437:7;5477:4;5470:5;5466:16;5455:27;;5402:86;;;:::o;5494:112::-;5577:22;5593:5;5577:22;:::i;:::-;5572:3;5565:35;5494:112;;:::o;5612:214::-;5701:4;5739:2;5728:9;5724:18;5716:26;;5752:67;5816:1;5805:9;5801:17;5792:6;5752:67;:::i;:::-;5612:214;;;;:::o;5832:117::-;5941:1;5938;5931:12;5955:117;6064:1;6061;6054:12;6078:117;6187:1;6184;6177:12;6218:568;6291:8;6301:6;6351:3;6344:4;6336:6;6332:17;6328:27;6318:122;;6359:79;;:::i;:::-;6318:122;6472:6;6459:20;6449:30;;6502:18;6494:6;6491:30;6488:117;;;6524:79;;:::i;:::-;6488:117;6638:4;6630:6;6626:17;6614:29;;6692:3;6684:4;6676:6;6672:17;6662:8;6658:32;6655:41;6652:128;;;6699:79;;:::i;:::-;6652:128;6218:568;;;;;:::o;6792:1141::-;6914:6;6922;6930;6938;6946;6954;7003:3;6991:9;6982:7;6978:23;6974:33;6971:120;;;7010:79;;:::i;:::-;6971:120;7130:1;7155:53;7200:7;7191:6;7180:9;7176:22;7155:53;:::i;:::-;7145:63;;7101:117;7257:2;7283:53;7328:7;7319:6;7308:9;7304:22;7283:53;:::i;:::-;7273:63;;7228:118;7413:2;7402:9;7398:18;7385:32;7444:18;7436:6;7433:30;7430:117;;;7466:79;;:::i;:::-;7430:117;7579:80;7651:7;7642:6;7631:9;7627:22;7579:80;:::i;:::-;7561:98;;;;7356:313;7708:2;7734:53;7779:7;7770:6;7759:9;7755:22;7734:53;:::i;:::-;7724:63;;7679:118;7836:3;7863:53;7908:7;7899:6;7888:9;7884:22;7863:53;:::i;:::-;7853:63;;7807:119;6792:1141;;;;;;;;:::o;7939:114::-;8006:6;8040:5;8034:12;8024:22;;7939:114;;;:::o;8059:184::-;8158:11;8192:6;8187:3;8180:19;8232:4;8227:3;8223:14;8208:29;;8059:184;;;;:::o;8249:132::-;8316:4;8339:3;8331:11;;8369:4;8364:3;8360:14;8352:22;;8249:132;;;:::o;8387:108::-;8464:24;8482:5;8464:24;:::i;:::-;8459:3;8452:37;8387:108;;:::o;8501:179::-;8570:10;8591:46;8633:3;8625:6;8591:46;:::i;:::-;8669:4;8664:3;8660:14;8646:28;;8501:179;;;;:::o;8686:113::-;8756:4;8788;8783:3;8779:14;8771:22;;8686:113;;;:::o;8835:732::-;8954:3;8983:54;9031:5;8983:54;:::i;:::-;9053:86;9132:6;9127:3;9053:86;:::i;:::-;9046:93;;9163:56;9213:5;9163:56;:::i;:::-;9242:7;9273:1;9258:284;9283:6;9280:1;9277:13;9258:284;;;9359:6;9353:13;9386:63;9445:3;9430:13;9386:63;:::i;:::-;9379:70;;9472:60;9525:6;9472:60;:::i;:::-;9462:70;;9318:224;9305:1;9302;9298:9;9293:14;;9258:284;;;9262:14;9558:3;9551:10;;8959:608;;;8835:732;;;;:::o;9573:373::-;9716:4;9754:2;9743:9;9739:18;9731:26;;9803:9;9797:4;9793:20;9789:1;9778:9;9774:17;9767:47;9831:108;9934:4;9925:6;9831:108;:::i;:::-;9823:116;;9573:373;;;;:::o;9952:329::-;10011:6;10060:2;10048:9;10039:7;10035:23;10031:32;10028:119;;;10066:79;;:::i;:::-;10028:119;10186:1;10211:53;10256:7;10247:6;10236:9;10232:22;10211:53;:::i;:::-;10201:63;;10157:117;9952:329;;;;:::o;10287:474::-;10355:6;10363;10412:2;10400:9;10391:7;10387:23;10383:32;10380:119;;;10418:79;;:::i;:::-;10380:119;10538:1;10563:53;10608:7;10599:6;10588:9;10584:22;10563:53;:::i;:::-;10553:63;;10509:117;10665:2;10691:53;10736:7;10727:6;10716:9;10712:22;10691:53;:::i;:::-;10681:63;;10636:118;10287:474;;;;;:::o;10767:1203::-;10880:6;10888;10896;10904;10912;10920;10928;10977:3;10965:9;10956:7;10952:23;10948:33;10945:120;;;10984:79;;:::i;:::-;10945:120;11104:1;11129:53;11174:7;11165:6;11154:9;11150:22;11129:53;:::i;:::-;11119:63;;11075:117;11231:2;11257:53;11302:7;11293:6;11282:9;11278:22;11257:53;:::i;:::-;11247:63;;11202:118;11359:2;11385:53;11430:7;11421:6;11410:9;11406:22;11385:53;:::i;:::-;11375:63;;11330:118;11487:2;11513:53;11558:7;11549:6;11538:9;11534:22;11513:53;:::i;:::-;11503:63;;11458:118;11615:3;11642:53;11687:7;11678:6;11667:9;11663:22;11642:53;:::i;:::-;11632:63;;11586:119;11744:3;11771:53;11816:7;11807:6;11796:9;11792:22;11771:53;:::i;:::-;11761:63;;11715:119;11873:3;11900:53;11945:7;11936:6;11925:9;11921:22;11900:53;:::i;:::-;11890:63;;11844:119;10767:1203;;;;;;;;;;:::o;11976:332::-;12097:4;12135:2;12124:9;12120:18;12112:26;;12148:71;12216:1;12205:9;12201:17;12192:6;12148:71;:::i;:::-;12229:72;12297:2;12286:9;12282:18;12273:6;12229:72;:::i;:::-;11976:332;;;;;:::o;12314:1349::-;12436:6;12444;12452;12460;12468;12476;12484;12492;12541:3;12529:9;12520:7;12516:23;12512:33;12509:120;;;12548:79;;:::i;:::-;12509:120;12668:1;12693:53;12738:7;12729:6;12718:9;12714:22;12693:53;:::i;:::-;12683:63;;12639:117;12795:2;12821:53;12866:7;12857:6;12846:9;12842:22;12821:53;:::i;:::-;12811:63;;12766:118;12923:2;12949:53;12994:7;12985:6;12974:9;12970:22;12949:53;:::i;:::-;12939:63;;12894:118;13051:2;13077:53;13122:7;13113:6;13102:9;13098:22;13077:53;:::i;:::-;13067:63;;13022:118;13179:3;13206:53;13251:7;13242:6;13231:9;13227:22;13206:53;:::i;:::-;13196:63;;13150:119;13308:3;13335:53;13380:7;13371:6;13360:9;13356:22;13335:53;:::i;:::-;13325:63;;13279:119;13437:3;13464:53;13509:7;13500:6;13489:9;13485:22;13464:53;:::i;:::-;13454:63;;13408:119;13566:3;13593:53;13638:7;13629:6;13618:9;13614:22;13593:53;:::i;:::-;13583:63;;13537:119;12314:1349;;;;;;;;;;;:::o;13669:442::-;13818:4;13856:2;13845:9;13841:18;13833:26;;13869:71;13937:1;13926:9;13922:17;13913:6;13869:71;:::i;:::-;13950:72;14018:2;14007:9;14003:18;13994:6;13950:72;:::i;:::-;14032;14100:2;14089:9;14085:18;14076:6;14032:72;:::i;:::-;13669:442;;;;;;:::o;14117:180::-;14165:77;14162:1;14155:88;14262:4;14259:1;14252:15;14286:4;14283:1;14276:15;14303:410;14343:7;14366:20;14384:1;14366:20;:::i;:::-;14361:25;;14400:20;14418:1;14400:20;:::i;:::-;14395:25;;14455:1;14452;14448:9;14477:30;14495:11;14477:30;:::i;:::-;14466:41;;14656:1;14647:7;14643:15;14640:1;14637:22;14617:1;14610:9;14590:83;14567:139;;14686:18;;:::i;:::-;14567:139;14351:362;14303:410;;;;:::o;14719:191::-;14759:3;14778:20;14796:1;14778:20;:::i;:::-;14773:25;;14812:20;14830:1;14812:20;:::i;:::-;14807:25;;14855:1;14852;14848:9;14841:16;;14876:3;14873:1;14870:10;14867:36;;;14883:18;;:::i;:::-;14867:36;14719:191;;;;:::o;14916:161::-;15056:13;15052:1;15044:6;15040:14;15033:37;14916:161;:::o;15083:366::-;15225:3;15246:67;15310:2;15305:3;15246:67;:::i;:::-;15239:74;;15322:93;15411:3;15322:93;:::i;:::-;15440:2;15435:3;15431:12;15424:19;;15083:366;;;:::o;15455:419::-;15621:4;15659:2;15648:9;15644:18;15636:26;;15708:9;15702:4;15698:20;15694:1;15683:9;15679:17;15672:47;15736:131;15862:4;15736:131;:::i;:::-;15728:139;;15455:419;;;:::o;15880:180::-;15928:77;15925:1;15918:88;16025:4;16022:1;16015:15;16049:4;16046:1;16039:15;16066:185;16106:1;16123:20;16141:1;16123:20;:::i;:::-;16118:25;;16157:20;16175:1;16157:20;:::i;:::-;16152:25;;16196:1;16186:35;;16201:18;;:::i;:::-;16186:35;16243:1;16240;16236:9;16231:14;;16066:185;;;;:::o;16257:180::-;16305:77;16302:1;16295:88;16402:4;16399:1;16392:15;16426:4;16423:1;16416:15;16443:320;16487:6;16524:1;16518:4;16514:12;16504:22;;16571:1;16565:4;16561:12;16592:18;16582:81;;16648:4;16640:6;16636:17;16626:27;;16582:81;16710:2;16702:6;16699:14;16679:18;16676:38;16673:84;;16729:18;;:::i;:::-;16673:84;16494:269;16443:320;;;:::o;16769:165::-;16909:17;16905:1;16897:6;16893:14;16886:41;16769:165;:::o;16940:366::-;17082:3;17103:67;17167:2;17162:3;17103:67;:::i;:::-;17096:74;;17179:93;17268:3;17179:93;:::i;:::-;17297:2;17292:3;17288:12;17281:19;;16940:366;;;:::o;17312:419::-;17478:4;17516:2;17505:9;17501:18;17493:26;;17565:9;17559:4;17555:20;17551:1;17540:9;17536:17;17529:47;17593:131;17719:4;17593:131;:::i;:::-;17585:139;;17312:419;;;:::o;17737:162::-;17877:14;17873:1;17865:6;17861:14;17854:38;17737:162;:::o;17905:366::-;18047:3;18068:67;18132:2;18127:3;18068:67;:::i;:::-;18061:74;;18144:93;18233:3;18144:93;:::i;:::-;18262:2;18257:3;18253:12;18246:19;;17905:366;;;:::o;18277:419::-;18443:4;18481:2;18470:9;18466:18;18458:26;;18530:9;18524:4;18520:20;18516:1;18505:9;18501:17;18494:47;18558:131;18684:4;18558:131;:::i;:::-;18550:139;;18277:419;;;:::o;18702:180::-;18750:77;18747:1;18740:88;18847:4;18844:1;18837:15;18871:4;18868:1;18861:15;18888:164;19028:16;19024:1;19016:6;19012:14;19005:40;18888:164;:::o;19058:366::-;19200:3;19221:67;19285:2;19280:3;19221:67;:::i;:::-;19214:74;;19297:93;19386:3;19297:93;:::i;:::-;19415:2;19410:3;19406:12;19399:19;;19058:366;;;:::o;19430:419::-;19596:4;19634:2;19623:9;19619:18;19611:26;;19683:9;19677:4;19673:20;19669:1;19658:9;19654:17;19647:47;19711:131;19837:4;19711:131;:::i;:::-;19703:139;;19430:419;;;:::o;19855:176::-;19995:28;19991:1;19983:6;19979:14;19972:52;19855:176;:::o;20037:366::-;20179:3;20200:67;20264:2;20259:3;20200:67;:::i;:::-;20193:74;;20276:93;20365:3;20276:93;:::i;:::-;20394:2;20389:3;20385:12;20378:19;;20037:366;;;:::o;20409:419::-;20575:4;20613:2;20602:9;20598:18;20590:26;;20662:9;20656:4;20652:20;20648:1;20637:9;20633:17;20626:47;20690:131;20816:4;20690:131;:::i;:::-;20682:139;;20409:419;;;:::o;20834:143::-;20891:5;20922:6;20916:13;20907:22;;20938:33;20965:5;20938:33;:::i;:::-;20834:143;;;;:::o;20983:351::-;21053:6;21102:2;21090:9;21081:7;21077:23;21073:32;21070:119;;;21108:79;;:::i;:::-;21070:119;21228:1;21253:64;21309:7;21300:6;21289:9;21285:22;21253:64;:::i;:::-;21243:74;;21199:128;20983:351;;;;:::o;21340:442::-;21489:4;21527:2;21516:9;21512:18;21504:26;;21540:71;21608:1;21597:9;21593:17;21584:6;21540:71;:::i;:::-;21621:72;21689:2;21678:9;21674:18;21665:6;21621:72;:::i;:::-;21703;21771:2;21760:9;21756:18;21747:6;21703:72;:::i;:::-;21340:442;;;;;;:::o;21788:180::-;21836:77;21833:1;21826:88;21933:4;21930:1;21923:15;21957:4;21954:1;21947:15;21974:171;22114:23;22110:1;22102:6;22098:14;22091:47;21974:171;:::o;22151:366::-;22293:3;22314:67;22378:2;22373:3;22314:67;:::i;:::-;22307:74;;22390:93;22479:3;22390:93;:::i;:::-;22508:2;22503:3;22499:12;22492:19;;22151:366;;;:::o;22523:419::-;22689:4;22727:2;22716:9;22712:18;22704:26;;22776:9;22770:4;22766:20;22762:1;22751:9;22747:17;22740:47;22804:131;22930:4;22804:131;:::i;:::-;22796:139;;22523:419;;;:::o;22948:171::-;23088:23;23084:1;23076:6;23072:14;23065:47;22948:171;:::o;23125:366::-;23267:3;23288:67;23352:2;23347:3;23288:67;:::i;:::-;23281:74;;23364:93;23453:3;23364:93;:::i;:::-;23482:2;23477:3;23473:12;23466:19;;23125:366;;;:::o;23497:419::-;23663:4;23701:2;23690:9;23686:18;23678:26;;23750:9;23744:4;23740:20;23736:1;23725:9;23721:17;23714:47;23778:131;23904:4;23778:131;:::i;:::-;23770:139;;23497:419;;;:::o;23922:442::-;24071:4;24109:2;24098:9;24094:18;24086:26;;24122:71;24190:1;24179:9;24175:17;24166:6;24122:71;:::i;:::-;24203:72;24271:2;24260:9;24256:18;24247:6;24203:72;:::i;:::-;24285;24353:2;24342:9;24338:18;24329:6;24285:72;:::i;:::-;23922:442;;;;;;:::o;24370:332::-;24491:4;24529:2;24518:9;24514:18;24506:26;;24542:71;24610:1;24599:9;24595:17;24586:6;24542:71;:::i;:::-;24623:72;24691:2;24680:9;24676:18;24667:6;24623:72;:::i;:::-;24370:332;;;;;:::o"},"methodIdentifiers":{"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)":"e8e33700","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","getAmountOut(uint256,uint256,uint256)":"054d50d4","getPrice(address,address)":"ac41865a","name()":"06fdde03","removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)":"baa2abde","swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":"38ed1739","symbol()":"95d89b41","token0()":"0dfe1681","token1()":"d21220a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract allows users to swap between two tokens and provide liquidity\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"LiquidityAdded(address,uint256,uint256,uint256)\":{\"custom:examples\":\" - When adding 100 TokenA and 200 TokenB, emits (provider, 100, 200, sqrt(100*200))\",\"details\":\"Records all relevant details of a liquidity provision event\",\"params\":{\"amountA\":\"Amount of tokenA deposited\",\"amountB\":\"Amount of tokenB deposited\",\"liquidity\":\"Amount of LP tokens minted to the provider\",\"provider\":\"Address that provided the liquidity (indexed for filtering)\"}},\"LiquidityRemoved(address,uint256,uint256,uint256)\":{\"custom:examples\":\" - When removing 50% of LP tokens, emits (provider, reserveA/2, reserveB/2, LP/2)\",\"details\":\"Records all relevant details of a liquidity withdrawal event\",\"params\":{\"amountA\":\"Amount of tokenA withdrawn\",\"amountB\":\"Amount of tokenB withdrawn\",\"liquidity\":\"Amount of LP tokens burned from the provider\",\"provider\":\"Address that removed the liquidity (indexed for filtering)\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"details\":\"Mints liquidity tokens proportional to the deposited amounts\",\"params\":{\"amountADesired\":\"Desired amount of tokenA to deposit\",\"amountAMin\":\"Minimum amount of tokenA to deposit (slippage protection)\",\"amountBDesired\":\"Desired amount of tokenB to deposit\",\"amountBMin\":\"Minimum amount of tokenB to deposit (slippage protection)\",\"deadline\":\"Unix timestamp after which the transaction will revert\",\"to\":\"Address that will receive the liquidity tokens\",\"tokenA\":\"Address of first token in the pair\",\"tokenB\":\"Address of second token in the pair\"},\"returns\":{\"amountA\":\"Actual amount of tokenA deposited\",\"amountB\":\"Actual amount of tokenB deposited\",\"liquidity\":\"Amount of liquidity tokens minted\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract with the two tokens to be traded\",\"params\":{\"_token0\":\"Address of the first token in the pair\",\"_token1\":\"Address of the second token in the pair\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getAmountOut(uint256,uint256,uint256)\":{\"details\":\"Uses a simple constant product formula (x*y=k)\",\"params\":{\"amountIn\":\"Amount of input tokens\",\"reserveIn\":\"Reserve amount of input tokens\",\"reserveOut\":\"Reserve amount of output tokens\"},\"returns\":{\"amount\":\"Calculated amount of output tokens\"}},\"getPrice(address,address)\":{\"details\":\"Price is expressed as tokenB per tokenA, scaled by 1e18\",\"params\":{\"tokenA\":\"Address of the base token\",\"tokenB\":\"Address of the quote token\"},\"returns\":{\"price\":\"Price ratio (tokenB/tokenA) multiplied by 1e18\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"details\":\"Burns liquidity tokens and returns the underlying assets\",\"params\":{\"amountAMin\":\"Minimum amount of tokenA to receive (slippage protection)\",\"amountBMin\":\"Minimum amount of tokenB to receive (slippage protection)\",\"deadline\":\"Unix timestamp after which the transaction will revert\",\"liquidity\":\"Amount of liquidity tokens to burn\",\"to\":\"Address that will receive the underlying tokens\",\"tokenA\":\"Address of first token in the pair\",\"tokenB\":\"Address of second token in the pair\"},\"returns\":{\"amountA\":\"Actual amount of tokenA received\",\"amountB\":\"Actual amount of tokenB received\"}},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"details\":\"Uses the current pool reserves to determine the exchange rate\",\"params\":{\"amountIn\":\"Exact amount of input tokens to swap\",\"amountOutMin\":\"Minimum amount of output tokens to receive (slippage protection)\",\"deadline\":\"Unix timestamp after which the transaction will revert\",\"path\":\"Array with token addresses (must be length 2 for this implementation)\",\"to\":\"Address that will receive the output tokens\"},\"returns\":{\"amounts\":\"Array containing the input and output amounts\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"SimpleSwap\",\"version\":1},\"userdoc\":{\"events\":{\"LiquidityAdded(address,uint256,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is added to the pool\"},\"LiquidityRemoved(address,uint256,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is removed from the pool\"}},\"kind\":\"user\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Adds liquidity to the pool\"},\"getAmountOut(uint256,uint256,uint256)\":{\"notice\":\"Calculates the amount of output tokens for a given input\"},\"getPrice(address,address)\":{\"notice\":\"Returns the current price ratio between two tokens\"},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Removes liquidity from the pool\"},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"notice\":\"Swaps an exact amount of input tokens for as many output tokens as possible\"},\"token0()\":{\"notice\":\"Address of the first token in the trading pair\"},\"token1()\":{\"notice\":\"Address of the second token in the trading pair\"}},\"notice\":\"A simplified Uniswap-like token swap and liquidity pool implementation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap.sol\":\"SimpleSwap\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/SimpleSwap.sol\":{\"keccak256\":\"0x6a0e6188a513e53ac88ddf3eb9ede3c72d62fc7ba8292cc9d51f2305a6103eaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05ce0f441d70edac4a34052dfaa414556e20aa73ca0e9357a437f0ea24098e8b\",\"dweb:/ipfs/QmX9Tfo518YEYUVSSDk8XE4bgVRdKKyXaaSDSeGUL47roz\"]}},\"version\":1}"}},"contracts/TokenA.sol":{"TokenA":{"abi":[{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_426":{"entryPoint":null,"id":426,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_5882":{"entryPoint":null,"id":5882,"parameterSlots":2,"returnSlots":0},"@_mint_729":{"entryPoint":597,"id":729,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":390,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_696":{"entryPoint":733,"id":696,"parameterSlots":3,"returnSlots":0},"@decimals_453":{"entryPoint":588,"id":453,"parameterSlots":0,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":1381,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2247,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2849,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2262,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2864,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2919,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1599,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1445,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2797,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":2349,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":2656,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":2432,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2731,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1896,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1319,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1287,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1731,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":2643,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1861,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1751,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2037,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1620,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1550,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2009,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1741,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1979,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2289,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1503,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1456,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1785,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1282,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":1636,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":2336,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1966,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1837,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1649,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1795,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1337,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1832,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:10953:17","nodeType":"YulBlock","src":"0:10953:17","statements":[{"body":{"nativeSrc":"47:35:17","nodeType":"YulBlock","src":"47:35:17","statements":[{"nativeSrc":"57:19:17","nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:17","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:17","nodeType":"YulIdentifier","src":"67:5:17"},"nativeSrc":"67:9:17","nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:17","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:17","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:17","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nativeSrc":"177:28:17","nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:17","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:17","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:17","nodeType":"YulIdentifier","src":"187:6:17"},"nativeSrc":"187:12:17","nodeType":"YulFunctionCall","src":"187:12:17"},"nativeSrc":"187:12:17","nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:17","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nativeSrc":"300:28:17","nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:17","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:17","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:17","nodeType":"YulIdentifier","src":"310:6:17"},"nativeSrc":"310:12:17","nodeType":"YulFunctionCall","src":"310:12:17"},"nativeSrc":"310:12:17","nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:17","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nativeSrc":"379:81:17","nodeType":"YulBlock","src":"379:81:17","statements":[{"nativeSrc":"389:65:17","nodeType":"YulAssignment","src":"389:65:17","value":{"arguments":[{"name":"value","nativeSrc":"404:5:17","nodeType":"YulIdentifier","src":"404:5:17"},{"kind":"number","nativeSrc":"411:42:17","nodeType":"YulLiteral","src":"411:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:17","nodeType":"YulIdentifier","src":"400:3:17"},"nativeSrc":"400:54:17","nodeType":"YulFunctionCall","src":"400:54:17"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:17","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:17","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:17","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:126:17"},{"body":{"nativeSrc":"511:51:17","nodeType":"YulBlock","src":"511:51:17","statements":[{"nativeSrc":"521:35:17","nodeType":"YulAssignment","src":"521:35:17","value":{"arguments":[{"name":"value","nativeSrc":"550:5:17","nodeType":"YulIdentifier","src":"550:5:17"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:17","nodeType":"YulIdentifier","src":"532:17:17"},"nativeSrc":"532:24:17","nodeType":"YulFunctionCall","src":"532:24:17"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:17","nodeType":"YulIdentifier","src":"521:7:17"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:17","nodeType":"YulTypedName","src":"493:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:17","nodeType":"YulTypedName","src":"503:7:17","type":""}],"src":"466:96:17"},{"body":{"nativeSrc":"611:79:17","nodeType":"YulBlock","src":"611:79:17","statements":[{"body":{"nativeSrc":"668:16:17","nodeType":"YulBlock","src":"668:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:17","nodeType":"YulLiteral","src":"677:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:17","nodeType":"YulLiteral","src":"680:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:17","nodeType":"YulIdentifier","src":"670:6:17"},"nativeSrc":"670:12:17","nodeType":"YulFunctionCall","src":"670:12:17"},"nativeSrc":"670:12:17","nodeType":"YulExpressionStatement","src":"670:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:17","nodeType":"YulIdentifier","src":"634:5:17"},{"arguments":[{"name":"value","nativeSrc":"659:5:17","nodeType":"YulIdentifier","src":"659:5:17"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:17","nodeType":"YulIdentifier","src":"641:17:17"},"nativeSrc":"641:24:17","nodeType":"YulFunctionCall","src":"641:24:17"}],"functionName":{"name":"eq","nativeSrc":"631:2:17","nodeType":"YulIdentifier","src":"631:2:17"},"nativeSrc":"631:35:17","nodeType":"YulFunctionCall","src":"631:35:17"}],"functionName":{"name":"iszero","nativeSrc":"624:6:17","nodeType":"YulIdentifier","src":"624:6:17"},"nativeSrc":"624:43:17","nodeType":"YulFunctionCall","src":"624:43:17"},"nativeSrc":"621:63:17","nodeType":"YulIf","src":"621:63:17"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:17","nodeType":"YulTypedName","src":"604:5:17","type":""}],"src":"568:122:17"},{"body":{"nativeSrc":"759:80:17","nodeType":"YulBlock","src":"759:80:17","statements":[{"nativeSrc":"769:22:17","nodeType":"YulAssignment","src":"769:22:17","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:17","nodeType":"YulIdentifier","src":"784:6:17"}],"functionName":{"name":"mload","nativeSrc":"778:5:17","nodeType":"YulIdentifier","src":"778:5:17"},"nativeSrc":"778:13:17","nodeType":"YulFunctionCall","src":"778:13:17"},"variableNames":[{"name":"value","nativeSrc":"769:5:17","nodeType":"YulIdentifier","src":"769:5:17"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:17","nodeType":"YulIdentifier","src":"827:5:17"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:17","nodeType":"YulIdentifier","src":"800:26:17"},"nativeSrc":"800:33:17","nodeType":"YulFunctionCall","src":"800:33:17"},"nativeSrc":"800:33:17","nodeType":"YulExpressionStatement","src":"800:33:17"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:17","nodeType":"YulTypedName","src":"737:6:17","type":""},{"name":"end","nativeSrc":"745:3:17","nodeType":"YulTypedName","src":"745:3:17","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:17","nodeType":"YulTypedName","src":"753:5:17","type":""}],"src":"696:143:17"},{"body":{"nativeSrc":"939:413:17","nodeType":"YulBlock","src":"939:413:17","statements":[{"body":{"nativeSrc":"985:83:17","nodeType":"YulBlock","src":"985:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"987:77:17","nodeType":"YulIdentifier","src":"987:77:17"},"nativeSrc":"987:79:17","nodeType":"YulFunctionCall","src":"987:79:17"},"nativeSrc":"987:79:17","nodeType":"YulExpressionStatement","src":"987:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"960:7:17","nodeType":"YulIdentifier","src":"960:7:17"},{"name":"headStart","nativeSrc":"969:9:17","nodeType":"YulIdentifier","src":"969:9:17"}],"functionName":{"name":"sub","nativeSrc":"956:3:17","nodeType":"YulIdentifier","src":"956:3:17"},"nativeSrc":"956:23:17","nodeType":"YulFunctionCall","src":"956:23:17"},{"kind":"number","nativeSrc":"981:2:17","nodeType":"YulLiteral","src":"981:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"952:3:17","nodeType":"YulIdentifier","src":"952:3:17"},"nativeSrc":"952:32:17","nodeType":"YulFunctionCall","src":"952:32:17"},"nativeSrc":"949:119:17","nodeType":"YulIf","src":"949:119:17"},{"nativeSrc":"1078:128:17","nodeType":"YulBlock","src":"1078:128:17","statements":[{"nativeSrc":"1093:15:17","nodeType":"YulVariableDeclaration","src":"1093:15:17","value":{"kind":"number","nativeSrc":"1107:1:17","nodeType":"YulLiteral","src":"1107:1:17","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1097:6:17","nodeType":"YulTypedName","src":"1097:6:17","type":""}]},{"nativeSrc":"1122:74:17","nodeType":"YulAssignment","src":"1122:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1168:9:17","nodeType":"YulIdentifier","src":"1168:9:17"},{"name":"offset","nativeSrc":"1179:6:17","nodeType":"YulIdentifier","src":"1179:6:17"}],"functionName":{"name":"add","nativeSrc":"1164:3:17","nodeType":"YulIdentifier","src":"1164:3:17"},"nativeSrc":"1164:22:17","nodeType":"YulFunctionCall","src":"1164:22:17"},{"name":"dataEnd","nativeSrc":"1188:7:17","nodeType":"YulIdentifier","src":"1188:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1132:31:17","nodeType":"YulIdentifier","src":"1132:31:17"},"nativeSrc":"1132:64:17","nodeType":"YulFunctionCall","src":"1132:64:17"},"variableNames":[{"name":"value0","nativeSrc":"1122:6:17","nodeType":"YulIdentifier","src":"1122:6:17"}]}]},{"nativeSrc":"1216:129:17","nodeType":"YulBlock","src":"1216:129:17","statements":[{"nativeSrc":"1231:16:17","nodeType":"YulVariableDeclaration","src":"1231:16:17","value":{"kind":"number","nativeSrc":"1245:2:17","nodeType":"YulLiteral","src":"1245:2:17","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1235:6:17","nodeType":"YulTypedName","src":"1235:6:17","type":""}]},{"nativeSrc":"1261:74:17","nodeType":"YulAssignment","src":"1261:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1307:9:17","nodeType":"YulIdentifier","src":"1307:9:17"},{"name":"offset","nativeSrc":"1318:6:17","nodeType":"YulIdentifier","src":"1318:6:17"}],"functionName":{"name":"add","nativeSrc":"1303:3:17","nodeType":"YulIdentifier","src":"1303:3:17"},"nativeSrc":"1303:22:17","nodeType":"YulFunctionCall","src":"1303:22:17"},{"name":"dataEnd","nativeSrc":"1327:7:17","nodeType":"YulIdentifier","src":"1327:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1271:31:17","nodeType":"YulIdentifier","src":"1271:31:17"},"nativeSrc":"1271:64:17","nodeType":"YulFunctionCall","src":"1271:64:17"},"variableNames":[{"name":"value1","nativeSrc":"1261:6:17","nodeType":"YulIdentifier","src":"1261:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nativeSrc":"845:507:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"901:9:17","nodeType":"YulTypedName","src":"901:9:17","type":""},{"name":"dataEnd","nativeSrc":"912:7:17","nodeType":"YulTypedName","src":"912:7:17","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"924:6:17","nodeType":"YulTypedName","src":"924:6:17","type":""},{"name":"value1","nativeSrc":"932:6:17","nodeType":"YulTypedName","src":"932:6:17","type":""}],"src":"845:507:17"},{"body":{"nativeSrc":"1417:40:17","nodeType":"YulBlock","src":"1417:40:17","statements":[{"nativeSrc":"1428:22:17","nodeType":"YulAssignment","src":"1428:22:17","value":{"arguments":[{"name":"value","nativeSrc":"1444:5:17","nodeType":"YulIdentifier","src":"1444:5:17"}],"functionName":{"name":"mload","nativeSrc":"1438:5:17","nodeType":"YulIdentifier","src":"1438:5:17"},"nativeSrc":"1438:12:17","nodeType":"YulFunctionCall","src":"1438:12:17"},"variableNames":[{"name":"length","nativeSrc":"1428:6:17","nodeType":"YulIdentifier","src":"1428:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1358:99:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1400:5:17","nodeType":"YulTypedName","src":"1400:5:17","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1410:6:17","nodeType":"YulTypedName","src":"1410:6:17","type":""}],"src":"1358:99:17"},{"body":{"nativeSrc":"1491:152:17","nodeType":"YulBlock","src":"1491:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1508:1:17","nodeType":"YulLiteral","src":"1508:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"1511:77:17","nodeType":"YulLiteral","src":"1511:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1501:6:17","nodeType":"YulIdentifier","src":"1501:6:17"},"nativeSrc":"1501:88:17","nodeType":"YulFunctionCall","src":"1501:88:17"},"nativeSrc":"1501:88:17","nodeType":"YulExpressionStatement","src":"1501:88:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1605:1:17","nodeType":"YulLiteral","src":"1605:1:17","type":"","value":"4"},{"kind":"number","nativeSrc":"1608:4:17","nodeType":"YulLiteral","src":"1608:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1598:6:17","nodeType":"YulIdentifier","src":"1598:6:17"},"nativeSrc":"1598:15:17","nodeType":"YulFunctionCall","src":"1598:15:17"},"nativeSrc":"1598:15:17","nodeType":"YulExpressionStatement","src":"1598:15:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1629:1:17","nodeType":"YulLiteral","src":"1629:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"1632:4:17","nodeType":"YulLiteral","src":"1632:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1622:6:17","nodeType":"YulIdentifier","src":"1622:6:17"},"nativeSrc":"1622:15:17","nodeType":"YulFunctionCall","src":"1622:15:17"},"nativeSrc":"1622:15:17","nodeType":"YulExpressionStatement","src":"1622:15:17"}]},"name":"panic_error_0x41","nativeSrc":"1463:180:17","nodeType":"YulFunctionDefinition","src":"1463:180:17"},{"body":{"nativeSrc":"1677:152:17","nodeType":"YulBlock","src":"1677:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1694:1:17","nodeType":"YulLiteral","src":"1694:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"1697:77:17","nodeType":"YulLiteral","src":"1697:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1687:6:17","nodeType":"YulIdentifier","src":"1687:6:17"},"nativeSrc":"1687:88:17","nodeType":"YulFunctionCall","src":"1687:88:17"},"nativeSrc":"1687:88:17","nodeType":"YulExpressionStatement","src":"1687:88:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1791:1:17","nodeType":"YulLiteral","src":"1791:1:17","type":"","value":"4"},{"kind":"number","nativeSrc":"1794:4:17","nodeType":"YulLiteral","src":"1794:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1784:6:17","nodeType":"YulIdentifier","src":"1784:6:17"},"nativeSrc":"1784:15:17","nodeType":"YulFunctionCall","src":"1784:15:17"},"nativeSrc":"1784:15:17","nodeType":"YulExpressionStatement","src":"1784:15:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1815:1:17","nodeType":"YulLiteral","src":"1815:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"1818:4:17","nodeType":"YulLiteral","src":"1818:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1808:6:17","nodeType":"YulIdentifier","src":"1808:6:17"},"nativeSrc":"1808:15:17","nodeType":"YulFunctionCall","src":"1808:15:17"},"nativeSrc":"1808:15:17","nodeType":"YulExpressionStatement","src":"1808:15:17"}]},"name":"panic_error_0x22","nativeSrc":"1649:180:17","nodeType":"YulFunctionDefinition","src":"1649:180:17"},{"body":{"nativeSrc":"1886:269:17","nodeType":"YulBlock","src":"1886:269:17","statements":[{"nativeSrc":"1896:22:17","nodeType":"YulAssignment","src":"1896:22:17","value":{"arguments":[{"name":"data","nativeSrc":"1910:4:17","nodeType":"YulIdentifier","src":"1910:4:17"},{"kind":"number","nativeSrc":"1916:1:17","nodeType":"YulLiteral","src":"1916:1:17","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"1906:3:17","nodeType":"YulIdentifier","src":"1906:3:17"},"nativeSrc":"1906:12:17","nodeType":"YulFunctionCall","src":"1906:12:17"},"variableNames":[{"name":"length","nativeSrc":"1896:6:17","nodeType":"YulIdentifier","src":"1896:6:17"}]},{"nativeSrc":"1927:38:17","nodeType":"YulVariableDeclaration","src":"1927:38:17","value":{"arguments":[{"name":"data","nativeSrc":"1957:4:17","nodeType":"YulIdentifier","src":"1957:4:17"},{"kind":"number","nativeSrc":"1963:1:17","nodeType":"YulLiteral","src":"1963:1:17","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1953:3:17","nodeType":"YulIdentifier","src":"1953:3:17"},"nativeSrc":"1953:12:17","nodeType":"YulFunctionCall","src":"1953:12:17"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1931:18:17","nodeType":"YulTypedName","src":"1931:18:17","type":""}]},{"body":{"nativeSrc":"2004:51:17","nodeType":"YulBlock","src":"2004:51:17","statements":[{"nativeSrc":"2018:27:17","nodeType":"YulAssignment","src":"2018:27:17","value":{"arguments":[{"name":"length","nativeSrc":"2032:6:17","nodeType":"YulIdentifier","src":"2032:6:17"},{"kind":"number","nativeSrc":"2040:4:17","nodeType":"YulLiteral","src":"2040:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"2028:3:17","nodeType":"YulIdentifier","src":"2028:3:17"},"nativeSrc":"2028:17:17","nodeType":"YulFunctionCall","src":"2028:17:17"},"variableNames":[{"name":"length","nativeSrc":"2018:6:17","nodeType":"YulIdentifier","src":"2018:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1984:18:17","nodeType":"YulIdentifier","src":"1984:18:17"}],"functionName":{"name":"iszero","nativeSrc":"1977:6:17","nodeType":"YulIdentifier","src":"1977:6:17"},"nativeSrc":"1977:26:17","nodeType":"YulFunctionCall","src":"1977:26:17"},"nativeSrc":"1974:81:17","nodeType":"YulIf","src":"1974:81:17"},{"body":{"nativeSrc":"2107:42:17","nodeType":"YulBlock","src":"2107:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"2121:16:17","nodeType":"YulIdentifier","src":"2121:16:17"},"nativeSrc":"2121:18:17","nodeType":"YulFunctionCall","src":"2121:18:17"},"nativeSrc":"2121:18:17","nodeType":"YulExpressionStatement","src":"2121:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2071:18:17","nodeType":"YulIdentifier","src":"2071:18:17"},{"arguments":[{"name":"length","nativeSrc":"2094:6:17","nodeType":"YulIdentifier","src":"2094:6:17"},{"kind":"number","nativeSrc":"2102:2:17","nodeType":"YulLiteral","src":"2102:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"2091:2:17","nodeType":"YulIdentifier","src":"2091:2:17"},"nativeSrc":"2091:14:17","nodeType":"YulFunctionCall","src":"2091:14:17"}],"functionName":{"name":"eq","nativeSrc":"2068:2:17","nodeType":"YulIdentifier","src":"2068:2:17"},"nativeSrc":"2068:38:17","nodeType":"YulFunctionCall","src":"2068:38:17"},"nativeSrc":"2065:84:17","nodeType":"YulIf","src":"2065:84:17"}]},"name":"extract_byte_array_length","nativeSrc":"1835:320:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1870:4:17","nodeType":"YulTypedName","src":"1870:4:17","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1879:6:17","nodeType":"YulTypedName","src":"1879:6:17","type":""}],"src":"1835:320:17"},{"body":{"nativeSrc":"2215:87:17","nodeType":"YulBlock","src":"2215:87:17","statements":[{"nativeSrc":"2225:11:17","nodeType":"YulAssignment","src":"2225:11:17","value":{"name":"ptr","nativeSrc":"2233:3:17","nodeType":"YulIdentifier","src":"2233:3:17"},"variableNames":[{"name":"data","nativeSrc":"2225:4:17","nodeType":"YulIdentifier","src":"2225:4:17"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2253:1:17","nodeType":"YulLiteral","src":"2253:1:17","type":"","value":"0"},{"name":"ptr","nativeSrc":"2256:3:17","nodeType":"YulIdentifier","src":"2256:3:17"}],"functionName":{"name":"mstore","nativeSrc":"2246:6:17","nodeType":"YulIdentifier","src":"2246:6:17"},"nativeSrc":"2246:14:17","nodeType":"YulFunctionCall","src":"2246:14:17"},"nativeSrc":"2246:14:17","nodeType":"YulExpressionStatement","src":"2246:14:17"},{"nativeSrc":"2269:26:17","nodeType":"YulAssignment","src":"2269:26:17","value":{"arguments":[{"kind":"number","nativeSrc":"2287:1:17","nodeType":"YulLiteral","src":"2287:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"2290:4:17","nodeType":"YulLiteral","src":"2290:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2277:9:17","nodeType":"YulIdentifier","src":"2277:9:17"},"nativeSrc":"2277:18:17","nodeType":"YulFunctionCall","src":"2277:18:17"},"variableNames":[{"name":"data","nativeSrc":"2269:4:17","nodeType":"YulIdentifier","src":"2269:4:17"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"2161:141:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"2202:3:17","nodeType":"YulTypedName","src":"2202:3:17","type":""}],"returnVariables":[{"name":"data","nativeSrc":"2210:4:17","nodeType":"YulTypedName","src":"2210:4:17","type":""}],"src":"2161:141:17"},{"body":{"nativeSrc":"2352:49:17","nodeType":"YulBlock","src":"2352:49:17","statements":[{"nativeSrc":"2362:33:17","nodeType":"YulAssignment","src":"2362:33:17","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2380:5:17","nodeType":"YulIdentifier","src":"2380:5:17"},{"kind":"number","nativeSrc":"2387:2:17","nodeType":"YulLiteral","src":"2387:2:17","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2376:3:17","nodeType":"YulIdentifier","src":"2376:3:17"},"nativeSrc":"2376:14:17","nodeType":"YulFunctionCall","src":"2376:14:17"},{"kind":"number","nativeSrc":"2392:2:17","nodeType":"YulLiteral","src":"2392:2:17","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"2372:3:17","nodeType":"YulIdentifier","src":"2372:3:17"},"nativeSrc":"2372:23:17","nodeType":"YulFunctionCall","src":"2372:23:17"},"variableNames":[{"name":"result","nativeSrc":"2362:6:17","nodeType":"YulIdentifier","src":"2362:6:17"}]}]},"name":"divide_by_32_ceil","nativeSrc":"2308:93:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2335:5:17","nodeType":"YulTypedName","src":"2335:5:17","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2345:6:17","nodeType":"YulTypedName","src":"2345:6:17","type":""}],"src":"2308:93:17"},{"body":{"nativeSrc":"2460:54:17","nodeType":"YulBlock","src":"2460:54:17","statements":[{"nativeSrc":"2470:37:17","nodeType":"YulAssignment","src":"2470:37:17","value":{"arguments":[{"name":"bits","nativeSrc":"2495:4:17","nodeType":"YulIdentifier","src":"2495:4:17"},{"name":"value","nativeSrc":"2501:5:17","nodeType":"YulIdentifier","src":"2501:5:17"}],"functionName":{"name":"shl","nativeSrc":"2491:3:17","nodeType":"YulIdentifier","src":"2491:3:17"},"nativeSrc":"2491:16:17","nodeType":"YulFunctionCall","src":"2491:16:17"},"variableNames":[{"name":"newValue","nativeSrc":"2470:8:17","nodeType":"YulIdentifier","src":"2470:8:17"}]}]},"name":"shift_left_dynamic","nativeSrc":"2407:107:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"2435:4:17","nodeType":"YulTypedName","src":"2435:4:17","type":""},{"name":"value","nativeSrc":"2441:5:17","nodeType":"YulTypedName","src":"2441:5:17","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"2451:8:17","nodeType":"YulTypedName","src":"2451:8:17","type":""}],"src":"2407:107:17"},{"body":{"nativeSrc":"2596:317:17","nodeType":"YulBlock","src":"2596:317:17","statements":[{"nativeSrc":"2606:35:17","nodeType":"YulVariableDeclaration","src":"2606:35:17","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"2627:10:17","nodeType":"YulIdentifier","src":"2627:10:17"},{"kind":"number","nativeSrc":"2639:1:17","nodeType":"YulLiteral","src":"2639:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"2623:3:17","nodeType":"YulIdentifier","src":"2623:3:17"},"nativeSrc":"2623:18:17","nodeType":"YulFunctionCall","src":"2623:18:17"},"variables":[{"name":"shiftBits","nativeSrc":"2610:9:17","nodeType":"YulTypedName","src":"2610:9:17","type":""}]},{"nativeSrc":"2650:109:17","nodeType":"YulVariableDeclaration","src":"2650:109:17","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2681:9:17","nodeType":"YulIdentifier","src":"2681:9:17"},{"kind":"number","nativeSrc":"2692:66:17","nodeType":"YulLiteral","src":"2692:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2662:18:17","nodeType":"YulIdentifier","src":"2662:18:17"},"nativeSrc":"2662:97:17","nodeType":"YulFunctionCall","src":"2662:97:17"},"variables":[{"name":"mask","nativeSrc":"2654:4:17","nodeType":"YulTypedName","src":"2654:4:17","type":""}]},{"nativeSrc":"2768:51:17","nodeType":"YulAssignment","src":"2768:51:17","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2799:9:17","nodeType":"YulIdentifier","src":"2799:9:17"},{"name":"toInsert","nativeSrc":"2810:8:17","nodeType":"YulIdentifier","src":"2810:8:17"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2780:18:17","nodeType":"YulIdentifier","src":"2780:18:17"},"nativeSrc":"2780:39:17","nodeType":"YulFunctionCall","src":"2780:39:17"},"variableNames":[{"name":"toInsert","nativeSrc":"2768:8:17","nodeType":"YulIdentifier","src":"2768:8:17"}]},{"nativeSrc":"2828:30:17","nodeType":"YulAssignment","src":"2828:30:17","value":{"arguments":[{"name":"value","nativeSrc":"2841:5:17","nodeType":"YulIdentifier","src":"2841:5:17"},{"arguments":[{"name":"mask","nativeSrc":"2852:4:17","nodeType":"YulIdentifier","src":"2852:4:17"}],"functionName":{"name":"not","nativeSrc":"2848:3:17","nodeType":"YulIdentifier","src":"2848:3:17"},"nativeSrc":"2848:9:17","nodeType":"YulFunctionCall","src":"2848:9:17"}],"functionName":{"name":"and","nativeSrc":"2837:3:17","nodeType":"YulIdentifier","src":"2837:3:17"},"nativeSrc":"2837:21:17","nodeType":"YulFunctionCall","src":"2837:21:17"},"variableNames":[{"name":"value","nativeSrc":"2828:5:17","nodeType":"YulIdentifier","src":"2828:5:17"}]},{"nativeSrc":"2867:40:17","nodeType":"YulAssignment","src":"2867:40:17","value":{"arguments":[{"name":"value","nativeSrc":"2880:5:17","nodeType":"YulIdentifier","src":"2880:5:17"},{"arguments":[{"name":"toInsert","nativeSrc":"2891:8:17","nodeType":"YulIdentifier","src":"2891:8:17"},{"name":"mask","nativeSrc":"2901:4:17","nodeType":"YulIdentifier","src":"2901:4:17"}],"functionName":{"name":"and","nativeSrc":"2887:3:17","nodeType":"YulIdentifier","src":"2887:3:17"},"nativeSrc":"2887:19:17","nodeType":"YulFunctionCall","src":"2887:19:17"}],"functionName":{"name":"or","nativeSrc":"2877:2:17","nodeType":"YulIdentifier","src":"2877:2:17"},"nativeSrc":"2877:30:17","nodeType":"YulFunctionCall","src":"2877:30:17"},"variableNames":[{"name":"result","nativeSrc":"2867:6:17","nodeType":"YulIdentifier","src":"2867:6:17"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"2520:393:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2557:5:17","nodeType":"YulTypedName","src":"2557:5:17","type":""},{"name":"shiftBytes","nativeSrc":"2564:10:17","nodeType":"YulTypedName","src":"2564:10:17","type":""},{"name":"toInsert","nativeSrc":"2576:8:17","nodeType":"YulTypedName","src":"2576:8:17","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2589:6:17","nodeType":"YulTypedName","src":"2589:6:17","type":""}],"src":"2520:393:17"},{"body":{"nativeSrc":"2964:32:17","nodeType":"YulBlock","src":"2964:32:17","statements":[{"nativeSrc":"2974:16:17","nodeType":"YulAssignment","src":"2974:16:17","value":{"name":"value","nativeSrc":"2985:5:17","nodeType":"YulIdentifier","src":"2985:5:17"},"variableNames":[{"name":"cleaned","nativeSrc":"2974:7:17","nodeType":"YulIdentifier","src":"2974:7:17"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2919:77:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2946:5:17","nodeType":"YulTypedName","src":"2946:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2956:7:17","nodeType":"YulTypedName","src":"2956:7:17","type":""}],"src":"2919:77:17"},{"body":{"nativeSrc":"3034:28:17","nodeType":"YulBlock","src":"3034:28:17","statements":[{"nativeSrc":"3044:12:17","nodeType":"YulAssignment","src":"3044:12:17","value":{"name":"value","nativeSrc":"3051:5:17","nodeType":"YulIdentifier","src":"3051:5:17"},"variableNames":[{"name":"ret","nativeSrc":"3044:3:17","nodeType":"YulIdentifier","src":"3044:3:17"}]}]},"name":"identity","nativeSrc":"3002:60:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3020:5:17","nodeType":"YulTypedName","src":"3020:5:17","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3030:3:17","nodeType":"YulTypedName","src":"3030:3:17","type":""}],"src":"3002:60:17"},{"body":{"nativeSrc":"3128:82:17","nodeType":"YulBlock","src":"3128:82:17","statements":[{"nativeSrc":"3138:66:17","nodeType":"YulAssignment","src":"3138:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3196:5:17","nodeType":"YulIdentifier","src":"3196:5:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3178:17:17","nodeType":"YulIdentifier","src":"3178:17:17"},"nativeSrc":"3178:24:17","nodeType":"YulFunctionCall","src":"3178:24:17"}],"functionName":{"name":"identity","nativeSrc":"3169:8:17","nodeType":"YulIdentifier","src":"3169:8:17"},"nativeSrc":"3169:34:17","nodeType":"YulFunctionCall","src":"3169:34:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3151:17:17","nodeType":"YulIdentifier","src":"3151:17:17"},"nativeSrc":"3151:53:17","nodeType":"YulFunctionCall","src":"3151:53:17"},"variableNames":[{"name":"converted","nativeSrc":"3138:9:17","nodeType":"YulIdentifier","src":"3138:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3068:142:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3108:5:17","nodeType":"YulTypedName","src":"3108:5:17","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3118:9:17","nodeType":"YulTypedName","src":"3118:9:17","type":""}],"src":"3068:142:17"},{"body":{"nativeSrc":"3263:28:17","nodeType":"YulBlock","src":"3263:28:17","statements":[{"nativeSrc":"3273:12:17","nodeType":"YulAssignment","src":"3273:12:17","value":{"name":"value","nativeSrc":"3280:5:17","nodeType":"YulIdentifier","src":"3280:5:17"},"variableNames":[{"name":"ret","nativeSrc":"3273:3:17","nodeType":"YulIdentifier","src":"3273:3:17"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"3216:75:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3249:5:17","nodeType":"YulTypedName","src":"3249:5:17","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3259:3:17","nodeType":"YulTypedName","src":"3259:3:17","type":""}],"src":"3216:75:17"},{"body":{"nativeSrc":"3373:193:17","nodeType":"YulBlock","src":"3373:193:17","statements":[{"nativeSrc":"3383:63:17","nodeType":"YulVariableDeclaration","src":"3383:63:17","value":{"arguments":[{"name":"value_0","nativeSrc":"3438:7:17","nodeType":"YulIdentifier","src":"3438:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3407:30:17","nodeType":"YulIdentifier","src":"3407:30:17"},"nativeSrc":"3407:39:17","nodeType":"YulFunctionCall","src":"3407:39:17"},"variables":[{"name":"convertedValue_0","nativeSrc":"3387:16:17","nodeType":"YulTypedName","src":"3387:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3462:4:17","nodeType":"YulIdentifier","src":"3462:4:17"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3502:4:17","nodeType":"YulIdentifier","src":"3502:4:17"}],"functionName":{"name":"sload","nativeSrc":"3496:5:17","nodeType":"YulIdentifier","src":"3496:5:17"},"nativeSrc":"3496:11:17","nodeType":"YulFunctionCall","src":"3496:11:17"},{"name":"offset","nativeSrc":"3509:6:17","nodeType":"YulIdentifier","src":"3509:6:17"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"3541:16:17","nodeType":"YulIdentifier","src":"3541:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"3517:23:17","nodeType":"YulIdentifier","src":"3517:23:17"},"nativeSrc":"3517:41:17","nodeType":"YulFunctionCall","src":"3517:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"3468:27:17","nodeType":"YulIdentifier","src":"3468:27:17"},"nativeSrc":"3468:91:17","nodeType":"YulFunctionCall","src":"3468:91:17"}],"functionName":{"name":"sstore","nativeSrc":"3455:6:17","nodeType":"YulIdentifier","src":"3455:6:17"},"nativeSrc":"3455:105:17","nodeType":"YulFunctionCall","src":"3455:105:17"},"nativeSrc":"3455:105:17","nodeType":"YulExpressionStatement","src":"3455:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3297:269:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3350:4:17","nodeType":"YulTypedName","src":"3350:4:17","type":""},{"name":"offset","nativeSrc":"3356:6:17","nodeType":"YulTypedName","src":"3356:6:17","type":""},{"name":"value_0","nativeSrc":"3364:7:17","nodeType":"YulTypedName","src":"3364:7:17","type":""}],"src":"3297:269:17"},{"body":{"nativeSrc":"3621:24:17","nodeType":"YulBlock","src":"3621:24:17","statements":[{"nativeSrc":"3631:8:17","nodeType":"YulAssignment","src":"3631:8:17","value":{"kind":"number","nativeSrc":"3638:1:17","nodeType":"YulLiteral","src":"3638:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"3631:3:17","nodeType":"YulIdentifier","src":"3631:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"3572:73:17","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"3617:3:17","nodeType":"YulTypedName","src":"3617:3:17","type":""}],"src":"3572:73:17"},{"body":{"nativeSrc":"3704:136:17","nodeType":"YulBlock","src":"3704:136:17","statements":[{"nativeSrc":"3714:46:17","nodeType":"YulVariableDeclaration","src":"3714:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"3728:30:17","nodeType":"YulIdentifier","src":"3728:30:17"},"nativeSrc":"3728:32:17","nodeType":"YulFunctionCall","src":"3728:32:17"},"variables":[{"name":"zero_0","nativeSrc":"3718:6:17","nodeType":"YulTypedName","src":"3718:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3813:4:17","nodeType":"YulIdentifier","src":"3813:4:17"},{"name":"offset","nativeSrc":"3819:6:17","nodeType":"YulIdentifier","src":"3819:6:17"},{"name":"zero_0","nativeSrc":"3827:6:17","nodeType":"YulIdentifier","src":"3827:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3769:43:17","nodeType":"YulIdentifier","src":"3769:43:17"},"nativeSrc":"3769:65:17","nodeType":"YulFunctionCall","src":"3769:65:17"},"nativeSrc":"3769:65:17","nodeType":"YulExpressionStatement","src":"3769:65:17"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"3651:189:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3690:4:17","nodeType":"YulTypedName","src":"3690:4:17","type":""},{"name":"offset","nativeSrc":"3696:6:17","nodeType":"YulTypedName","src":"3696:6:17","type":""}],"src":"3651:189:17"},{"body":{"nativeSrc":"3896:136:17","nodeType":"YulBlock","src":"3896:136:17","statements":[{"body":{"nativeSrc":"3963:63:17","nodeType":"YulBlock","src":"3963:63:17","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"4007:5:17","nodeType":"YulIdentifier","src":"4007:5:17"},{"kind":"number","nativeSrc":"4014:1:17","nodeType":"YulLiteral","src":"4014:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"3977:29:17","nodeType":"YulIdentifier","src":"3977:29:17"},"nativeSrc":"3977:39:17","nodeType":"YulFunctionCall","src":"3977:39:17"},"nativeSrc":"3977:39:17","nodeType":"YulExpressionStatement","src":"3977:39:17"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"3916:5:17","nodeType":"YulIdentifier","src":"3916:5:17"},{"name":"end","nativeSrc":"3923:3:17","nodeType":"YulIdentifier","src":"3923:3:17"}],"functionName":{"name":"lt","nativeSrc":"3913:2:17","nodeType":"YulIdentifier","src":"3913:2:17"},"nativeSrc":"3913:14:17","nodeType":"YulFunctionCall","src":"3913:14:17"},"nativeSrc":"3906:120:17","nodeType":"YulForLoop","post":{"nativeSrc":"3928:26:17","nodeType":"YulBlock","src":"3928:26:17","statements":[{"nativeSrc":"3930:22:17","nodeType":"YulAssignment","src":"3930:22:17","value":{"arguments":[{"name":"start","nativeSrc":"3943:5:17","nodeType":"YulIdentifier","src":"3943:5:17"},{"kind":"number","nativeSrc":"3950:1:17","nodeType":"YulLiteral","src":"3950:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3939:3:17","nodeType":"YulIdentifier","src":"3939:3:17"},"nativeSrc":"3939:13:17","nodeType":"YulFunctionCall","src":"3939:13:17"},"variableNames":[{"name":"start","nativeSrc":"3930:5:17","nodeType":"YulIdentifier","src":"3930:5:17"}]}]},"pre":{"nativeSrc":"3910:2:17","nodeType":"YulBlock","src":"3910:2:17","statements":[]},"src":"3906:120:17"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"3846:186:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"3884:5:17","nodeType":"YulTypedName","src":"3884:5:17","type":""},{"name":"end","nativeSrc":"3891:3:17","nodeType":"YulTypedName","src":"3891:3:17","type":""}],"src":"3846:186:17"},{"body":{"nativeSrc":"4117:464:17","nodeType":"YulBlock","src":"4117:464:17","statements":[{"body":{"nativeSrc":"4143:431:17","nodeType":"YulBlock","src":"4143:431:17","statements":[{"nativeSrc":"4157:54:17","nodeType":"YulVariableDeclaration","src":"4157:54:17","value":{"arguments":[{"name":"array","nativeSrc":"4205:5:17","nodeType":"YulIdentifier","src":"4205:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4173:31:17","nodeType":"YulIdentifier","src":"4173:31:17"},"nativeSrc":"4173:38:17","nodeType":"YulFunctionCall","src":"4173:38:17"},"variables":[{"name":"dataArea","nativeSrc":"4161:8:17","nodeType":"YulTypedName","src":"4161:8:17","type":""}]},{"nativeSrc":"4224:63:17","nodeType":"YulVariableDeclaration","src":"4224:63:17","value":{"arguments":[{"name":"dataArea","nativeSrc":"4247:8:17","nodeType":"YulIdentifier","src":"4247:8:17"},{"arguments":[{"name":"startIndex","nativeSrc":"4275:10:17","nodeType":"YulIdentifier","src":"4275:10:17"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4257:17:17","nodeType":"YulIdentifier","src":"4257:17:17"},"nativeSrc":"4257:29:17","nodeType":"YulFunctionCall","src":"4257:29:17"}],"functionName":{"name":"add","nativeSrc":"4243:3:17","nodeType":"YulIdentifier","src":"4243:3:17"},"nativeSrc":"4243:44:17","nodeType":"YulFunctionCall","src":"4243:44:17"},"variables":[{"name":"deleteStart","nativeSrc":"4228:11:17","nodeType":"YulTypedName","src":"4228:11:17","type":""}]},{"body":{"nativeSrc":"4444:27:17","nodeType":"YulBlock","src":"4444:27:17","statements":[{"nativeSrc":"4446:23:17","nodeType":"YulAssignment","src":"4446:23:17","value":{"name":"dataArea","nativeSrc":"4461:8:17","nodeType":"YulIdentifier","src":"4461:8:17"},"variableNames":[{"name":"deleteStart","nativeSrc":"4446:11:17","nodeType":"YulIdentifier","src":"4446:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4428:10:17","nodeType":"YulIdentifier","src":"4428:10:17"},{"kind":"number","nativeSrc":"4440:2:17","nodeType":"YulLiteral","src":"4440:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4425:2:17","nodeType":"YulIdentifier","src":"4425:2:17"},"nativeSrc":"4425:18:17","nodeType":"YulFunctionCall","src":"4425:18:17"},"nativeSrc":"4422:49:17","nodeType":"YulIf","src":"4422:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"4513:11:17","nodeType":"YulIdentifier","src":"4513:11:17"},{"arguments":[{"name":"dataArea","nativeSrc":"4530:8:17","nodeType":"YulIdentifier","src":"4530:8:17"},{"arguments":[{"name":"len","nativeSrc":"4558:3:17","nodeType":"YulIdentifier","src":"4558:3:17"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4540:17:17","nodeType":"YulIdentifier","src":"4540:17:17"},"nativeSrc":"4540:22:17","nodeType":"YulFunctionCall","src":"4540:22:17"}],"functionName":{"name":"add","nativeSrc":"4526:3:17","nodeType":"YulIdentifier","src":"4526:3:17"},"nativeSrc":"4526:37:17","nodeType":"YulFunctionCall","src":"4526:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"4484:28:17","nodeType":"YulIdentifier","src":"4484:28:17"},"nativeSrc":"4484:80:17","nodeType":"YulFunctionCall","src":"4484:80:17"},"nativeSrc":"4484:80:17","nodeType":"YulExpressionStatement","src":"4484:80:17"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"4134:3:17","nodeType":"YulIdentifier","src":"4134:3:17"},{"kind":"number","nativeSrc":"4139:2:17","nodeType":"YulLiteral","src":"4139:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4131:2:17","nodeType":"YulIdentifier","src":"4131:2:17"},"nativeSrc":"4131:11:17","nodeType":"YulFunctionCall","src":"4131:11:17"},"nativeSrc":"4128:446:17","nodeType":"YulIf","src":"4128:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4038:543:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4093:5:17","nodeType":"YulTypedName","src":"4093:5:17","type":""},{"name":"len","nativeSrc":"4100:3:17","nodeType":"YulTypedName","src":"4100:3:17","type":""},{"name":"startIndex","nativeSrc":"4105:10:17","nodeType":"YulTypedName","src":"4105:10:17","type":""}],"src":"4038:543:17"},{"body":{"nativeSrc":"4650:54:17","nodeType":"YulBlock","src":"4650:54:17","statements":[{"nativeSrc":"4660:37:17","nodeType":"YulAssignment","src":"4660:37:17","value":{"arguments":[{"name":"bits","nativeSrc":"4685:4:17","nodeType":"YulIdentifier","src":"4685:4:17"},{"name":"value","nativeSrc":"4691:5:17","nodeType":"YulIdentifier","src":"4691:5:17"}],"functionName":{"name":"shr","nativeSrc":"4681:3:17","nodeType":"YulIdentifier","src":"4681:3:17"},"nativeSrc":"4681:16:17","nodeType":"YulFunctionCall","src":"4681:16:17"},"variableNames":[{"name":"newValue","nativeSrc":"4660:8:17","nodeType":"YulIdentifier","src":"4660:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"4587:117:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4625:4:17","nodeType":"YulTypedName","src":"4625:4:17","type":""},{"name":"value","nativeSrc":"4631:5:17","nodeType":"YulTypedName","src":"4631:5:17","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4641:8:17","nodeType":"YulTypedName","src":"4641:8:17","type":""}],"src":"4587:117:17"},{"body":{"nativeSrc":"4761:118:17","nodeType":"YulBlock","src":"4761:118:17","statements":[{"nativeSrc":"4771:68:17","nodeType":"YulVariableDeclaration","src":"4771:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4820:1:17","nodeType":"YulLiteral","src":"4820:1:17","type":"","value":"8"},{"name":"bytes","nativeSrc":"4823:5:17","nodeType":"YulIdentifier","src":"4823:5:17"}],"functionName":{"name":"mul","nativeSrc":"4816:3:17","nodeType":"YulIdentifier","src":"4816:3:17"},"nativeSrc":"4816:13:17","nodeType":"YulFunctionCall","src":"4816:13:17"},{"arguments":[{"kind":"number","nativeSrc":"4835:1:17","nodeType":"YulLiteral","src":"4835:1:17","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4831:3:17","nodeType":"YulIdentifier","src":"4831:3:17"},"nativeSrc":"4831:6:17","nodeType":"YulFunctionCall","src":"4831:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"4787:28:17","nodeType":"YulIdentifier","src":"4787:28:17"},"nativeSrc":"4787:51:17","nodeType":"YulFunctionCall","src":"4787:51:17"}],"functionName":{"name":"not","nativeSrc":"4783:3:17","nodeType":"YulIdentifier","src":"4783:3:17"},"nativeSrc":"4783:56:17","nodeType":"YulFunctionCall","src":"4783:56:17"},"variables":[{"name":"mask","nativeSrc":"4775:4:17","nodeType":"YulTypedName","src":"4775:4:17","type":""}]},{"nativeSrc":"4848:25:17","nodeType":"YulAssignment","src":"4848:25:17","value":{"arguments":[{"name":"data","nativeSrc":"4862:4:17","nodeType":"YulIdentifier","src":"4862:4:17"},{"name":"mask","nativeSrc":"4868:4:17","nodeType":"YulIdentifier","src":"4868:4:17"}],"functionName":{"name":"and","nativeSrc":"4858:3:17","nodeType":"YulIdentifier","src":"4858:3:17"},"nativeSrc":"4858:15:17","nodeType":"YulFunctionCall","src":"4858:15:17"},"variableNames":[{"name":"result","nativeSrc":"4848:6:17","nodeType":"YulIdentifier","src":"4848:6:17"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"4710:169:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4738:4:17","nodeType":"YulTypedName","src":"4738:4:17","type":""},{"name":"bytes","nativeSrc":"4744:5:17","nodeType":"YulTypedName","src":"4744:5:17","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4754:6:17","nodeType":"YulTypedName","src":"4754:6:17","type":""}],"src":"4710:169:17"},{"body":{"nativeSrc":"4965:214:17","nodeType":"YulBlock","src":"4965:214:17","statements":[{"nativeSrc":"5098:37:17","nodeType":"YulAssignment","src":"5098:37:17","value":{"arguments":[{"name":"data","nativeSrc":"5125:4:17","nodeType":"YulIdentifier","src":"5125:4:17"},{"name":"len","nativeSrc":"5131:3:17","nodeType":"YulIdentifier","src":"5131:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"5106:18:17","nodeType":"YulIdentifier","src":"5106:18:17"},"nativeSrc":"5106:29:17","nodeType":"YulFunctionCall","src":"5106:29:17"},"variableNames":[{"name":"data","nativeSrc":"5098:4:17","nodeType":"YulIdentifier","src":"5098:4:17"}]},{"nativeSrc":"5144:29:17","nodeType":"YulAssignment","src":"5144:29:17","value":{"arguments":[{"name":"data","nativeSrc":"5155:4:17","nodeType":"YulIdentifier","src":"5155:4:17"},{"arguments":[{"kind":"number","nativeSrc":"5165:1:17","nodeType":"YulLiteral","src":"5165:1:17","type":"","value":"2"},{"name":"len","nativeSrc":"5168:3:17","nodeType":"YulIdentifier","src":"5168:3:17"}],"functionName":{"name":"mul","nativeSrc":"5161:3:17","nodeType":"YulIdentifier","src":"5161:3:17"},"nativeSrc":"5161:11:17","nodeType":"YulFunctionCall","src":"5161:11:17"}],"functionName":{"name":"or","nativeSrc":"5152:2:17","nodeType":"YulIdentifier","src":"5152:2:17"},"nativeSrc":"5152:21:17","nodeType":"YulFunctionCall","src":"5152:21:17"},"variableNames":[{"name":"used","nativeSrc":"5144:4:17","nodeType":"YulIdentifier","src":"5144:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"4884:295:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4946:4:17","nodeType":"YulTypedName","src":"4946:4:17","type":""},{"name":"len","nativeSrc":"4952:3:17","nodeType":"YulTypedName","src":"4952:3:17","type":""}],"returnVariables":[{"name":"used","nativeSrc":"4960:4:17","nodeType":"YulTypedName","src":"4960:4:17","type":""}],"src":"4884:295:17"},{"body":{"nativeSrc":"5276:1303:17","nodeType":"YulBlock","src":"5276:1303:17","statements":[{"nativeSrc":"5287:51:17","nodeType":"YulVariableDeclaration","src":"5287:51:17","value":{"arguments":[{"name":"src","nativeSrc":"5334:3:17","nodeType":"YulIdentifier","src":"5334:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"5301:32:17","nodeType":"YulIdentifier","src":"5301:32:17"},"nativeSrc":"5301:37:17","nodeType":"YulFunctionCall","src":"5301:37:17"},"variables":[{"name":"newLen","nativeSrc":"5291:6:17","nodeType":"YulTypedName","src":"5291:6:17","type":""}]},{"body":{"nativeSrc":"5423:22:17","nodeType":"YulBlock","src":"5423:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5425:16:17","nodeType":"YulIdentifier","src":"5425:16:17"},"nativeSrc":"5425:18:17","nodeType":"YulFunctionCall","src":"5425:18:17"},"nativeSrc":"5425:18:17","nodeType":"YulExpressionStatement","src":"5425:18:17"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5395:6:17","nodeType":"YulIdentifier","src":"5395:6:17"},{"kind":"number","nativeSrc":"5403:18:17","nodeType":"YulLiteral","src":"5403:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5392:2:17","nodeType":"YulIdentifier","src":"5392:2:17"},"nativeSrc":"5392:30:17","nodeType":"YulFunctionCall","src":"5392:30:17"},"nativeSrc":"5389:56:17","nodeType":"YulIf","src":"5389:56:17"},{"nativeSrc":"5455:52:17","nodeType":"YulVariableDeclaration","src":"5455:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5501:4:17","nodeType":"YulIdentifier","src":"5501:4:17"}],"functionName":{"name":"sload","nativeSrc":"5495:5:17","nodeType":"YulIdentifier","src":"5495:5:17"},"nativeSrc":"5495:11:17","nodeType":"YulFunctionCall","src":"5495:11:17"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5469:25:17","nodeType":"YulIdentifier","src":"5469:25:17"},"nativeSrc":"5469:38:17","nodeType":"YulFunctionCall","src":"5469:38:17"},"variables":[{"name":"oldLen","nativeSrc":"5459:6:17","nodeType":"YulTypedName","src":"5459:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5600:4:17","nodeType":"YulIdentifier","src":"5600:4:17"},{"name":"oldLen","nativeSrc":"5606:6:17","nodeType":"YulIdentifier","src":"5606:6:17"},{"name":"newLen","nativeSrc":"5614:6:17","nodeType":"YulIdentifier","src":"5614:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5554:45:17","nodeType":"YulIdentifier","src":"5554:45:17"},"nativeSrc":"5554:67:17","nodeType":"YulFunctionCall","src":"5554:67:17"},"nativeSrc":"5554:67:17","nodeType":"YulExpressionStatement","src":"5554:67:17"},{"nativeSrc":"5631:18:17","nodeType":"YulVariableDeclaration","src":"5631:18:17","value":{"kind":"number","nativeSrc":"5648:1:17","nodeType":"YulLiteral","src":"5648:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5635:9:17","nodeType":"YulTypedName","src":"5635:9:17","type":""}]},{"nativeSrc":"5659:17:17","nodeType":"YulAssignment","src":"5659:17:17","value":{"kind":"number","nativeSrc":"5672:4:17","nodeType":"YulLiteral","src":"5672:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"5659:9:17","nodeType":"YulIdentifier","src":"5659:9:17"}]},{"cases":[{"body":{"nativeSrc":"5723:611:17","nodeType":"YulBlock","src":"5723:611:17","statements":[{"nativeSrc":"5737:37:17","nodeType":"YulVariableDeclaration","src":"5737:37:17","value":{"arguments":[{"name":"newLen","nativeSrc":"5756:6:17","nodeType":"YulIdentifier","src":"5756:6:17"},{"arguments":[{"kind":"number","nativeSrc":"5768:4:17","nodeType":"YulLiteral","src":"5768:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"5764:3:17","nodeType":"YulIdentifier","src":"5764:3:17"},"nativeSrc":"5764:9:17","nodeType":"YulFunctionCall","src":"5764:9:17"}],"functionName":{"name":"and","nativeSrc":"5752:3:17","nodeType":"YulIdentifier","src":"5752:3:17"},"nativeSrc":"5752:22:17","nodeType":"YulFunctionCall","src":"5752:22:17"},"variables":[{"name":"loopEnd","nativeSrc":"5741:7:17","nodeType":"YulTypedName","src":"5741:7:17","type":""}]},{"nativeSrc":"5788:51:17","nodeType":"YulVariableDeclaration","src":"5788:51:17","value":{"arguments":[{"name":"slot","nativeSrc":"5834:4:17","nodeType":"YulIdentifier","src":"5834:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"5802:31:17","nodeType":"YulIdentifier","src":"5802:31:17"},"nativeSrc":"5802:37:17","nodeType":"YulFunctionCall","src":"5802:37:17"},"variables":[{"name":"dstPtr","nativeSrc":"5792:6:17","nodeType":"YulTypedName","src":"5792:6:17","type":""}]},{"nativeSrc":"5852:10:17","nodeType":"YulVariableDeclaration","src":"5852:10:17","value":{"kind":"number","nativeSrc":"5861:1:17","nodeType":"YulLiteral","src":"5861:1:17","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5856:1:17","nodeType":"YulTypedName","src":"5856:1:17","type":""}]},{"body":{"nativeSrc":"5920:163:17","nodeType":"YulBlock","src":"5920:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"5945:6:17","nodeType":"YulIdentifier","src":"5945:6:17"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5963:3:17","nodeType":"YulIdentifier","src":"5963:3:17"},{"name":"srcOffset","nativeSrc":"5968:9:17","nodeType":"YulIdentifier","src":"5968:9:17"}],"functionName":{"name":"add","nativeSrc":"5959:3:17","nodeType":"YulIdentifier","src":"5959:3:17"},"nativeSrc":"5959:19:17","nodeType":"YulFunctionCall","src":"5959:19:17"}],"functionName":{"name":"mload","nativeSrc":"5953:5:17","nodeType":"YulIdentifier","src":"5953:5:17"},"nativeSrc":"5953:26:17","nodeType":"YulFunctionCall","src":"5953:26:17"}],"functionName":{"name":"sstore","nativeSrc":"5938:6:17","nodeType":"YulIdentifier","src":"5938:6:17"},"nativeSrc":"5938:42:17","nodeType":"YulFunctionCall","src":"5938:42:17"},"nativeSrc":"5938:42:17","nodeType":"YulExpressionStatement","src":"5938:42:17"},{"nativeSrc":"5997:24:17","nodeType":"YulAssignment","src":"5997:24:17","value":{"arguments":[{"name":"dstPtr","nativeSrc":"6011:6:17","nodeType":"YulIdentifier","src":"6011:6:17"},{"kind":"number","nativeSrc":"6019:1:17","nodeType":"YulLiteral","src":"6019:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6007:3:17","nodeType":"YulIdentifier","src":"6007:3:17"},"nativeSrc":"6007:14:17","nodeType":"YulFunctionCall","src":"6007:14:17"},"variableNames":[{"name":"dstPtr","nativeSrc":"5997:6:17","nodeType":"YulIdentifier","src":"5997:6:17"}]},{"nativeSrc":"6038:31:17","nodeType":"YulAssignment","src":"6038:31:17","value":{"arguments":[{"name":"srcOffset","nativeSrc":"6055:9:17","nodeType":"YulIdentifier","src":"6055:9:17"},{"kind":"number","nativeSrc":"6066:2:17","nodeType":"YulLiteral","src":"6066:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6051:3:17","nodeType":"YulIdentifier","src":"6051:3:17"},"nativeSrc":"6051:18:17","nodeType":"YulFunctionCall","src":"6051:18:17"},"variableNames":[{"name":"srcOffset","nativeSrc":"6038:9:17","nodeType":"YulIdentifier","src":"6038:9:17"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5886:1:17","nodeType":"YulIdentifier","src":"5886:1:17"},{"name":"loopEnd","nativeSrc":"5889:7:17","nodeType":"YulIdentifier","src":"5889:7:17"}],"functionName":{"name":"lt","nativeSrc":"5883:2:17","nodeType":"YulIdentifier","src":"5883:2:17"},"nativeSrc":"5883:14:17","nodeType":"YulFunctionCall","src":"5883:14:17"},"nativeSrc":"5875:208:17","nodeType":"YulForLoop","post":{"nativeSrc":"5898:21:17","nodeType":"YulBlock","src":"5898:21:17","statements":[{"nativeSrc":"5900:17:17","nodeType":"YulAssignment","src":"5900:17:17","value":{"arguments":[{"name":"i","nativeSrc":"5909:1:17","nodeType":"YulIdentifier","src":"5909:1:17"},{"kind":"number","nativeSrc":"5912:4:17","nodeType":"YulLiteral","src":"5912:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5905:3:17","nodeType":"YulIdentifier","src":"5905:3:17"},"nativeSrc":"5905:12:17","nodeType":"YulFunctionCall","src":"5905:12:17"},"variableNames":[{"name":"i","nativeSrc":"5900:1:17","nodeType":"YulIdentifier","src":"5900:1:17"}]}]},"pre":{"nativeSrc":"5879:3:17","nodeType":"YulBlock","src":"5879:3:17","statements":[]},"src":"5875:208:17"},{"body":{"nativeSrc":"6119:156:17","nodeType":"YulBlock","src":"6119:156:17","statements":[{"nativeSrc":"6137:43:17","nodeType":"YulVariableDeclaration","src":"6137:43:17","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6164:3:17","nodeType":"YulIdentifier","src":"6164:3:17"},{"name":"srcOffset","nativeSrc":"6169:9:17","nodeType":"YulIdentifier","src":"6169:9:17"}],"functionName":{"name":"add","nativeSrc":"6160:3:17","nodeType":"YulIdentifier","src":"6160:3:17"},"nativeSrc":"6160:19:17","nodeType":"YulFunctionCall","src":"6160:19:17"}],"functionName":{"name":"mload","nativeSrc":"6154:5:17","nodeType":"YulIdentifier","src":"6154:5:17"},"nativeSrc":"6154:26:17","nodeType":"YulFunctionCall","src":"6154:26:17"},"variables":[{"name":"lastValue","nativeSrc":"6141:9:17","nodeType":"YulTypedName","src":"6141:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6204:6:17","nodeType":"YulIdentifier","src":"6204:6:17"},{"arguments":[{"name":"lastValue","nativeSrc":"6231:9:17","nodeType":"YulIdentifier","src":"6231:9:17"},{"arguments":[{"name":"newLen","nativeSrc":"6246:6:17","nodeType":"YulIdentifier","src":"6246:6:17"},{"kind":"number","nativeSrc":"6254:4:17","nodeType":"YulLiteral","src":"6254:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"6242:3:17","nodeType":"YulIdentifier","src":"6242:3:17"},"nativeSrc":"6242:17:17","nodeType":"YulFunctionCall","src":"6242:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"6212:18:17","nodeType":"YulIdentifier","src":"6212:18:17"},"nativeSrc":"6212:48:17","nodeType":"YulFunctionCall","src":"6212:48:17"}],"functionName":{"name":"sstore","nativeSrc":"6197:6:17","nodeType":"YulIdentifier","src":"6197:6:17"},"nativeSrc":"6197:64:17","nodeType":"YulFunctionCall","src":"6197:64:17"},"nativeSrc":"6197:64:17","nodeType":"YulExpressionStatement","src":"6197:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"6102:7:17","nodeType":"YulIdentifier","src":"6102:7:17"},{"name":"newLen","nativeSrc":"6111:6:17","nodeType":"YulIdentifier","src":"6111:6:17"}],"functionName":{"name":"lt","nativeSrc":"6099:2:17","nodeType":"YulIdentifier","src":"6099:2:17"},"nativeSrc":"6099:19:17","nodeType":"YulFunctionCall","src":"6099:19:17"},"nativeSrc":"6096:179:17","nodeType":"YulIf","src":"6096:179:17"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6295:4:17","nodeType":"YulIdentifier","src":"6295:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"6309:6:17","nodeType":"YulIdentifier","src":"6309:6:17"},{"kind":"number","nativeSrc":"6317:1:17","nodeType":"YulLiteral","src":"6317:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"6305:3:17","nodeType":"YulIdentifier","src":"6305:3:17"},"nativeSrc":"6305:14:17","nodeType":"YulFunctionCall","src":"6305:14:17"},{"kind":"number","nativeSrc":"6321:1:17","nodeType":"YulLiteral","src":"6321:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6301:3:17","nodeType":"YulIdentifier","src":"6301:3:17"},"nativeSrc":"6301:22:17","nodeType":"YulFunctionCall","src":"6301:22:17"}],"functionName":{"name":"sstore","nativeSrc":"6288:6:17","nodeType":"YulIdentifier","src":"6288:6:17"},"nativeSrc":"6288:36:17","nodeType":"YulFunctionCall","src":"6288:36:17"},"nativeSrc":"6288:36:17","nodeType":"YulExpressionStatement","src":"6288:36:17"}]},"nativeSrc":"5716:618:17","nodeType":"YulCase","src":"5716:618:17","value":{"kind":"number","nativeSrc":"5721:1:17","nodeType":"YulLiteral","src":"5721:1:17","type":"","value":"1"}},{"body":{"nativeSrc":"6351:222:17","nodeType":"YulBlock","src":"6351:222:17","statements":[{"nativeSrc":"6365:14:17","nodeType":"YulVariableDeclaration","src":"6365:14:17","value":{"kind":"number","nativeSrc":"6378:1:17","nodeType":"YulLiteral","src":"6378:1:17","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"6369:5:17","nodeType":"YulTypedName","src":"6369:5:17","type":""}]},{"body":{"nativeSrc":"6402:67:17","nodeType":"YulBlock","src":"6402:67:17","statements":[{"nativeSrc":"6420:35:17","nodeType":"YulAssignment","src":"6420:35:17","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6439:3:17","nodeType":"YulIdentifier","src":"6439:3:17"},{"name":"srcOffset","nativeSrc":"6444:9:17","nodeType":"YulIdentifier","src":"6444:9:17"}],"functionName":{"name":"add","nativeSrc":"6435:3:17","nodeType":"YulIdentifier","src":"6435:3:17"},"nativeSrc":"6435:19:17","nodeType":"YulFunctionCall","src":"6435:19:17"}],"functionName":{"name":"mload","nativeSrc":"6429:5:17","nodeType":"YulIdentifier","src":"6429:5:17"},"nativeSrc":"6429:26:17","nodeType":"YulFunctionCall","src":"6429:26:17"},"variableNames":[{"name":"value","nativeSrc":"6420:5:17","nodeType":"YulIdentifier","src":"6420:5:17"}]}]},"condition":{"name":"newLen","nativeSrc":"6395:6:17","nodeType":"YulIdentifier","src":"6395:6:17"},"nativeSrc":"6392:77:17","nodeType":"YulIf","src":"6392:77:17"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6489:4:17","nodeType":"YulIdentifier","src":"6489:4:17"},{"arguments":[{"name":"value","nativeSrc":"6548:5:17","nodeType":"YulIdentifier","src":"6548:5:17"},{"name":"newLen","nativeSrc":"6555:6:17","nodeType":"YulIdentifier","src":"6555:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6495:52:17","nodeType":"YulIdentifier","src":"6495:52:17"},"nativeSrc":"6495:67:17","nodeType":"YulFunctionCall","src":"6495:67:17"}],"functionName":{"name":"sstore","nativeSrc":"6482:6:17","nodeType":"YulIdentifier","src":"6482:6:17"},"nativeSrc":"6482:81:17","nodeType":"YulFunctionCall","src":"6482:81:17"},"nativeSrc":"6482:81:17","nodeType":"YulExpressionStatement","src":"6482:81:17"}]},"nativeSrc":"6343:230:17","nodeType":"YulCase","src":"6343:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"5696:6:17","nodeType":"YulIdentifier","src":"5696:6:17"},{"kind":"number","nativeSrc":"5704:2:17","nodeType":"YulLiteral","src":"5704:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5693:2:17","nodeType":"YulIdentifier","src":"5693:2:17"},"nativeSrc":"5693:14:17","nodeType":"YulFunctionCall","src":"5693:14:17"},"nativeSrc":"5686:887:17","nodeType":"YulSwitch","src":"5686:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"5184:1395:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5265:4:17","nodeType":"YulTypedName","src":"5265:4:17","type":""},{"name":"src","nativeSrc":"5271:3:17","nodeType":"YulTypedName","src":"5271:3:17","type":""}],"src":"5184:1395:17"},{"body":{"nativeSrc":"6650:53:17","nodeType":"YulBlock","src":"6650:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6667:3:17","nodeType":"YulIdentifier","src":"6667:3:17"},{"arguments":[{"name":"value","nativeSrc":"6690:5:17","nodeType":"YulIdentifier","src":"6690:5:17"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6672:17:17","nodeType":"YulIdentifier","src":"6672:17:17"},"nativeSrc":"6672:24:17","nodeType":"YulFunctionCall","src":"6672:24:17"}],"functionName":{"name":"mstore","nativeSrc":"6660:6:17","nodeType":"YulIdentifier","src":"6660:6:17"},"nativeSrc":"6660:37:17","nodeType":"YulFunctionCall","src":"6660:37:17"},"nativeSrc":"6660:37:17","nodeType":"YulExpressionStatement","src":"6660:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6585:118:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6638:5:17","nodeType":"YulTypedName","src":"6638:5:17","type":""},{"name":"pos","nativeSrc":"6645:3:17","nodeType":"YulTypedName","src":"6645:3:17","type":""}],"src":"6585:118:17"},{"body":{"nativeSrc":"6807:124:17","nodeType":"YulBlock","src":"6807:124:17","statements":[{"nativeSrc":"6817:26:17","nodeType":"YulAssignment","src":"6817:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"6829:9:17","nodeType":"YulIdentifier","src":"6829:9:17"},{"kind":"number","nativeSrc":"6840:2:17","nodeType":"YulLiteral","src":"6840:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6825:3:17","nodeType":"YulIdentifier","src":"6825:3:17"},"nativeSrc":"6825:18:17","nodeType":"YulFunctionCall","src":"6825:18:17"},"variableNames":[{"name":"tail","nativeSrc":"6817:4:17","nodeType":"YulIdentifier","src":"6817:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6897:6:17","nodeType":"YulIdentifier","src":"6897:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"6910:9:17","nodeType":"YulIdentifier","src":"6910:9:17"},{"kind":"number","nativeSrc":"6921:1:17","nodeType":"YulLiteral","src":"6921:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6906:3:17","nodeType":"YulIdentifier","src":"6906:3:17"},"nativeSrc":"6906:17:17","nodeType":"YulFunctionCall","src":"6906:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6853:43:17","nodeType":"YulIdentifier","src":"6853:43:17"},"nativeSrc":"6853:71:17","nodeType":"YulFunctionCall","src":"6853:71:17"},"nativeSrc":"6853:71:17","nodeType":"YulExpressionStatement","src":"6853:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6709:222:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6779:9:17","nodeType":"YulTypedName","src":"6779:9:17","type":""},{"name":"value0","nativeSrc":"6791:6:17","nodeType":"YulTypedName","src":"6791:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6802:4:17","nodeType":"YulTypedName","src":"6802:4:17","type":""}],"src":"6709:222:17"},{"body":{"nativeSrc":"6965:152:17","nodeType":"YulBlock","src":"6965:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6982:1:17","nodeType":"YulLiteral","src":"6982:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"6985:77:17","nodeType":"YulLiteral","src":"6985:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6975:6:17","nodeType":"YulIdentifier","src":"6975:6:17"},"nativeSrc":"6975:88:17","nodeType":"YulFunctionCall","src":"6975:88:17"},"nativeSrc":"6975:88:17","nodeType":"YulExpressionStatement","src":"6975:88:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7079:1:17","nodeType":"YulLiteral","src":"7079:1:17","type":"","value":"4"},{"kind":"number","nativeSrc":"7082:4:17","nodeType":"YulLiteral","src":"7082:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7072:6:17","nodeType":"YulIdentifier","src":"7072:6:17"},"nativeSrc":"7072:15:17","nodeType":"YulFunctionCall","src":"7072:15:17"},"nativeSrc":"7072:15:17","nodeType":"YulExpressionStatement","src":"7072:15:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7103:1:17","nodeType":"YulLiteral","src":"7103:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"7106:4:17","nodeType":"YulLiteral","src":"7106:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7096:6:17","nodeType":"YulIdentifier","src":"7096:6:17"},"nativeSrc":"7096:15:17","nodeType":"YulFunctionCall","src":"7096:15:17"},"nativeSrc":"7096:15:17","nodeType":"YulExpressionStatement","src":"7096:15:17"}]},"name":"panic_error_0x11","nativeSrc":"6937:180:17","nodeType":"YulFunctionDefinition","src":"6937:180:17"},{"body":{"nativeSrc":"7174:51:17","nodeType":"YulBlock","src":"7174:51:17","statements":[{"nativeSrc":"7184:34:17","nodeType":"YulAssignment","src":"7184:34:17","value":{"arguments":[{"kind":"number","nativeSrc":"7209:1:17","nodeType":"YulLiteral","src":"7209:1:17","type":"","value":"1"},{"name":"value","nativeSrc":"7212:5:17","nodeType":"YulIdentifier","src":"7212:5:17"}],"functionName":{"name":"shr","nativeSrc":"7205:3:17","nodeType":"YulIdentifier","src":"7205:3:17"},"nativeSrc":"7205:13:17","nodeType":"YulFunctionCall","src":"7205:13:17"},"variableNames":[{"name":"newValue","nativeSrc":"7184:8:17","nodeType":"YulIdentifier","src":"7184:8:17"}]}]},"name":"shift_right_1_unsigned","nativeSrc":"7123:102:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7155:5:17","nodeType":"YulTypedName","src":"7155:5:17","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"7165:8:17","nodeType":"YulTypedName","src":"7165:8:17","type":""}],"src":"7123:102:17"},{"body":{"nativeSrc":"7304:775:17","nodeType":"YulBlock","src":"7304:775:17","statements":[{"nativeSrc":"7314:15:17","nodeType":"YulAssignment","src":"7314:15:17","value":{"name":"_power","nativeSrc":"7323:6:17","nodeType":"YulIdentifier","src":"7323:6:17"},"variableNames":[{"name":"power","nativeSrc":"7314:5:17","nodeType":"YulIdentifier","src":"7314:5:17"}]},{"nativeSrc":"7338:14:17","nodeType":"YulAssignment","src":"7338:14:17","value":{"name":"_base","nativeSrc":"7347:5:17","nodeType":"YulIdentifier","src":"7347:5:17"},"variableNames":[{"name":"base","nativeSrc":"7338:4:17","nodeType":"YulIdentifier","src":"7338:4:17"}]},{"body":{"nativeSrc":"7396:677:17","nodeType":"YulBlock","src":"7396:677:17","statements":[{"body":{"nativeSrc":"7484:22:17","nodeType":"YulBlock","src":"7484:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7486:16:17","nodeType":"YulIdentifier","src":"7486:16:17"},"nativeSrc":"7486:18:17","nodeType":"YulFunctionCall","src":"7486:18:17"},"nativeSrc":"7486:18:17","nodeType":"YulExpressionStatement","src":"7486:18:17"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"7462:4:17","nodeType":"YulIdentifier","src":"7462:4:17"},{"arguments":[{"name":"max","nativeSrc":"7472:3:17","nodeType":"YulIdentifier","src":"7472:3:17"},{"name":"base","nativeSrc":"7477:4:17","nodeType":"YulIdentifier","src":"7477:4:17"}],"functionName":{"name":"div","nativeSrc":"7468:3:17","nodeType":"YulIdentifier","src":"7468:3:17"},"nativeSrc":"7468:14:17","nodeType":"YulFunctionCall","src":"7468:14:17"}],"functionName":{"name":"gt","nativeSrc":"7459:2:17","nodeType":"YulIdentifier","src":"7459:2:17"},"nativeSrc":"7459:24:17","nodeType":"YulFunctionCall","src":"7459:24:17"},"nativeSrc":"7456:50:17","nodeType":"YulIf","src":"7456:50:17"},{"body":{"nativeSrc":"7551:419:17","nodeType":"YulBlock","src":"7551:419:17","statements":[{"nativeSrc":"7931:25:17","nodeType":"YulAssignment","src":"7931:25:17","value":{"arguments":[{"name":"power","nativeSrc":"7944:5:17","nodeType":"YulIdentifier","src":"7944:5:17"},{"name":"base","nativeSrc":"7951:4:17","nodeType":"YulIdentifier","src":"7951:4:17"}],"functionName":{"name":"mul","nativeSrc":"7940:3:17","nodeType":"YulIdentifier","src":"7940:3:17"},"nativeSrc":"7940:16:17","nodeType":"YulFunctionCall","src":"7940:16:17"},"variableNames":[{"name":"power","nativeSrc":"7931:5:17","nodeType":"YulIdentifier","src":"7931:5:17"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"7526:8:17","nodeType":"YulIdentifier","src":"7526:8:17"},{"kind":"number","nativeSrc":"7536:1:17","nodeType":"YulLiteral","src":"7536:1:17","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"7522:3:17","nodeType":"YulIdentifier","src":"7522:3:17"},"nativeSrc":"7522:16:17","nodeType":"YulFunctionCall","src":"7522:16:17"},"nativeSrc":"7519:451:17","nodeType":"YulIf","src":"7519:451:17"},{"nativeSrc":"7983:23:17","nodeType":"YulAssignment","src":"7983:23:17","value":{"arguments":[{"name":"base","nativeSrc":"7995:4:17","nodeType":"YulIdentifier","src":"7995:4:17"},{"name":"base","nativeSrc":"8001:4:17","nodeType":"YulIdentifier","src":"8001:4:17"}],"functionName":{"name":"mul","nativeSrc":"7991:3:17","nodeType":"YulIdentifier","src":"7991:3:17"},"nativeSrc":"7991:15:17","nodeType":"YulFunctionCall","src":"7991:15:17"},"variableNames":[{"name":"base","nativeSrc":"7983:4:17","nodeType":"YulIdentifier","src":"7983:4:17"}]},{"nativeSrc":"8019:44:17","nodeType":"YulAssignment","src":"8019:44:17","value":{"arguments":[{"name":"exponent","nativeSrc":"8054:8:17","nodeType":"YulIdentifier","src":"8054:8:17"}],"functionName":{"name":"shift_right_1_unsigned","nativeSrc":"8031:22:17","nodeType":"YulIdentifier","src":"8031:22:17"},"nativeSrc":"8031:32:17","nodeType":"YulFunctionCall","src":"8031:32:17"},"variableNames":[{"name":"exponent","nativeSrc":"8019:8:17","nodeType":"YulIdentifier","src":"8019:8:17"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"7372:8:17","nodeType":"YulIdentifier","src":"7372:8:17"},{"kind":"number","nativeSrc":"7382:1:17","nodeType":"YulLiteral","src":"7382:1:17","type":"","value":"1"}],"functionName":{"name":"gt","nativeSrc":"7369:2:17","nodeType":"YulIdentifier","src":"7369:2:17"},"nativeSrc":"7369:15:17","nodeType":"YulFunctionCall","src":"7369:15:17"},"nativeSrc":"7361:712:17","nodeType":"YulForLoop","post":{"nativeSrc":"7385:2:17","nodeType":"YulBlock","src":"7385:2:17","statements":[]},"pre":{"nativeSrc":"7365:3:17","nodeType":"YulBlock","src":"7365:3:17","statements":[]},"src":"7361:712:17"}]},"name":"checked_exp_helper","nativeSrc":"7231:848:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nativeSrc":"7259:6:17","nodeType":"YulTypedName","src":"7259:6:17","type":""},{"name":"_base","nativeSrc":"7267:5:17","nodeType":"YulTypedName","src":"7267:5:17","type":""},{"name":"exponent","nativeSrc":"7274:8:17","nodeType":"YulTypedName","src":"7274:8:17","type":""},{"name":"max","nativeSrc":"7284:3:17","nodeType":"YulTypedName","src":"7284:3:17","type":""}],"returnVariables":[{"name":"power","nativeSrc":"7292:5:17","nodeType":"YulTypedName","src":"7292:5:17","type":""},{"name":"base","nativeSrc":"7299:4:17","nodeType":"YulTypedName","src":"7299:4:17","type":""}],"src":"7231:848:17"},{"body":{"nativeSrc":"8145:1013:17","nodeType":"YulBlock","src":"8145:1013:17","statements":[{"body":{"nativeSrc":"8340:20:17","nodeType":"YulBlock","src":"8340:20:17","statements":[{"nativeSrc":"8342:10:17","nodeType":"YulAssignment","src":"8342:10:17","value":{"kind":"number","nativeSrc":"8351:1:17","nodeType":"YulLiteral","src":"8351:1:17","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"8342:5:17","nodeType":"YulIdentifier","src":"8342:5:17"}]},{"nativeSrc":"8353:5:17","nodeType":"YulLeave","src":"8353:5:17"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"8330:8:17","nodeType":"YulIdentifier","src":"8330:8:17"}],"functionName":{"name":"iszero","nativeSrc":"8323:6:17","nodeType":"YulIdentifier","src":"8323:6:17"},"nativeSrc":"8323:16:17","nodeType":"YulFunctionCall","src":"8323:16:17"},"nativeSrc":"8320:40:17","nodeType":"YulIf","src":"8320:40:17"},{"body":{"nativeSrc":"8385:20:17","nodeType":"YulBlock","src":"8385:20:17","statements":[{"nativeSrc":"8387:10:17","nodeType":"YulAssignment","src":"8387:10:17","value":{"kind":"number","nativeSrc":"8396:1:17","nodeType":"YulLiteral","src":"8396:1:17","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"8387:5:17","nodeType":"YulIdentifier","src":"8387:5:17"}]},{"nativeSrc":"8398:5:17","nodeType":"YulLeave","src":"8398:5:17"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"8379:4:17","nodeType":"YulIdentifier","src":"8379:4:17"}],"functionName":{"name":"iszero","nativeSrc":"8372:6:17","nodeType":"YulIdentifier","src":"8372:6:17"},"nativeSrc":"8372:12:17","nodeType":"YulFunctionCall","src":"8372:12:17"},"nativeSrc":"8369:36:17","nodeType":"YulIf","src":"8369:36:17"},{"cases":[{"body":{"nativeSrc":"8515:20:17","nodeType":"YulBlock","src":"8515:20:17","statements":[{"nativeSrc":"8517:10:17","nodeType":"YulAssignment","src":"8517:10:17","value":{"kind":"number","nativeSrc":"8526:1:17","nodeType":"YulLiteral","src":"8526:1:17","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"8517:5:17","nodeType":"YulIdentifier","src":"8517:5:17"}]},{"nativeSrc":"8528:5:17","nodeType":"YulLeave","src":"8528:5:17"}]},"nativeSrc":"8508:27:17","nodeType":"YulCase","src":"8508:27:17","value":{"kind":"number","nativeSrc":"8513:1:17","nodeType":"YulLiteral","src":"8513:1:17","type":"","value":"1"}},{"body":{"nativeSrc":"8559:176:17","nodeType":"YulBlock","src":"8559:176:17","statements":[{"body":{"nativeSrc":"8594:22:17","nodeType":"YulBlock","src":"8594:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8596:16:17","nodeType":"YulIdentifier","src":"8596:16:17"},"nativeSrc":"8596:18:17","nodeType":"YulFunctionCall","src":"8596:18:17"},"nativeSrc":"8596:18:17","nodeType":"YulExpressionStatement","src":"8596:18:17"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"8579:8:17","nodeType":"YulIdentifier","src":"8579:8:17"},{"kind":"number","nativeSrc":"8589:3:17","nodeType":"YulLiteral","src":"8589:3:17","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"8576:2:17","nodeType":"YulIdentifier","src":"8576:2:17"},"nativeSrc":"8576:17:17","nodeType":"YulFunctionCall","src":"8576:17:17"},"nativeSrc":"8573:43:17","nodeType":"YulIf","src":"8573:43:17"},{"nativeSrc":"8629:25:17","nodeType":"YulAssignment","src":"8629:25:17","value":{"arguments":[{"kind":"number","nativeSrc":"8642:1:17","nodeType":"YulLiteral","src":"8642:1:17","type":"","value":"2"},{"name":"exponent","nativeSrc":"8645:8:17","nodeType":"YulIdentifier","src":"8645:8:17"}],"functionName":{"name":"exp","nativeSrc":"8638:3:17","nodeType":"YulIdentifier","src":"8638:3:17"},"nativeSrc":"8638:16:17","nodeType":"YulFunctionCall","src":"8638:16:17"},"variableNames":[{"name":"power","nativeSrc":"8629:5:17","nodeType":"YulIdentifier","src":"8629:5:17"}]},{"body":{"nativeSrc":"8685:22:17","nodeType":"YulBlock","src":"8685:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8687:16:17","nodeType":"YulIdentifier","src":"8687:16:17"},"nativeSrc":"8687:18:17","nodeType":"YulFunctionCall","src":"8687:18:17"},"nativeSrc":"8687:18:17","nodeType":"YulExpressionStatement","src":"8687:18:17"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"8673:5:17","nodeType":"YulIdentifier","src":"8673:5:17"},{"name":"max","nativeSrc":"8680:3:17","nodeType":"YulIdentifier","src":"8680:3:17"}],"functionName":{"name":"gt","nativeSrc":"8670:2:17","nodeType":"YulIdentifier","src":"8670:2:17"},"nativeSrc":"8670:14:17","nodeType":"YulFunctionCall","src":"8670:14:17"},"nativeSrc":"8667:40:17","nodeType":"YulIf","src":"8667:40:17"},{"nativeSrc":"8720:5:17","nodeType":"YulLeave","src":"8720:5:17"}]},"nativeSrc":"8544:191:17","nodeType":"YulCase","src":"8544:191:17","value":{"kind":"number","nativeSrc":"8549:1:17","nodeType":"YulLiteral","src":"8549:1:17","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"8465:4:17","nodeType":"YulIdentifier","src":"8465:4:17"},"nativeSrc":"8458:277:17","nodeType":"YulSwitch","src":"8458:277:17"},{"body":{"nativeSrc":"8867:123:17","nodeType":"YulBlock","src":"8867:123:17","statements":[{"nativeSrc":"8881:28:17","nodeType":"YulAssignment","src":"8881:28:17","value":{"arguments":[{"name":"base","nativeSrc":"8894:4:17","nodeType":"YulIdentifier","src":"8894:4:17"},{"name":"exponent","nativeSrc":"8900:8:17","nodeType":"YulIdentifier","src":"8900:8:17"}],"functionName":{"name":"exp","nativeSrc":"8890:3:17","nodeType":"YulIdentifier","src":"8890:3:17"},"nativeSrc":"8890:19:17","nodeType":"YulFunctionCall","src":"8890:19:17"},"variableNames":[{"name":"power","nativeSrc":"8881:5:17","nodeType":"YulIdentifier","src":"8881:5:17"}]},{"body":{"nativeSrc":"8940:22:17","nodeType":"YulBlock","src":"8940:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8942:16:17","nodeType":"YulIdentifier","src":"8942:16:17"},"nativeSrc":"8942:18:17","nodeType":"YulFunctionCall","src":"8942:18:17"},"nativeSrc":"8942:18:17","nodeType":"YulExpressionStatement","src":"8942:18:17"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"8928:5:17","nodeType":"YulIdentifier","src":"8928:5:17"},{"name":"max","nativeSrc":"8935:3:17","nodeType":"YulIdentifier","src":"8935:3:17"}],"functionName":{"name":"gt","nativeSrc":"8925:2:17","nodeType":"YulIdentifier","src":"8925:2:17"},"nativeSrc":"8925:14:17","nodeType":"YulFunctionCall","src":"8925:14:17"},"nativeSrc":"8922:40:17","nodeType":"YulIf","src":"8922:40:17"},{"nativeSrc":"8975:5:17","nodeType":"YulLeave","src":"8975:5:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"8770:4:17","nodeType":"YulIdentifier","src":"8770:4:17"},{"kind":"number","nativeSrc":"8776:2:17","nodeType":"YulLiteral","src":"8776:2:17","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"8767:2:17","nodeType":"YulIdentifier","src":"8767:2:17"},"nativeSrc":"8767:12:17","nodeType":"YulFunctionCall","src":"8767:12:17"},{"arguments":[{"name":"exponent","nativeSrc":"8784:8:17","nodeType":"YulIdentifier","src":"8784:8:17"},{"kind":"number","nativeSrc":"8794:2:17","nodeType":"YulLiteral","src":"8794:2:17","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"8781:2:17","nodeType":"YulIdentifier","src":"8781:2:17"},"nativeSrc":"8781:16:17","nodeType":"YulFunctionCall","src":"8781:16:17"}],"functionName":{"name":"and","nativeSrc":"8763:3:17","nodeType":"YulIdentifier","src":"8763:3:17"},"nativeSrc":"8763:35:17","nodeType":"YulFunctionCall","src":"8763:35:17"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"8819:4:17","nodeType":"YulIdentifier","src":"8819:4:17"},{"kind":"number","nativeSrc":"8825:3:17","nodeType":"YulLiteral","src":"8825:3:17","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"8816:2:17","nodeType":"YulIdentifier","src":"8816:2:17"},"nativeSrc":"8816:13:17","nodeType":"YulFunctionCall","src":"8816:13:17"},{"arguments":[{"name":"exponent","nativeSrc":"8834:8:17","nodeType":"YulIdentifier","src":"8834:8:17"},{"kind":"number","nativeSrc":"8844:2:17","nodeType":"YulLiteral","src":"8844:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"8831:2:17","nodeType":"YulIdentifier","src":"8831:2:17"},"nativeSrc":"8831:16:17","nodeType":"YulFunctionCall","src":"8831:16:17"}],"functionName":{"name":"and","nativeSrc":"8812:3:17","nodeType":"YulIdentifier","src":"8812:3:17"},"nativeSrc":"8812:36:17","nodeType":"YulFunctionCall","src":"8812:36:17"}],"functionName":{"name":"or","nativeSrc":"8747:2:17","nodeType":"YulIdentifier","src":"8747:2:17"},"nativeSrc":"8747:111:17","nodeType":"YulFunctionCall","src":"8747:111:17"},"nativeSrc":"8744:246:17","nodeType":"YulIf","src":"8744:246:17"},{"nativeSrc":"9000:57:17","nodeType":"YulAssignment","src":"9000:57:17","value":{"arguments":[{"kind":"number","nativeSrc":"9034:1:17","nodeType":"YulLiteral","src":"9034:1:17","type":"","value":"1"},{"name":"base","nativeSrc":"9037:4:17","nodeType":"YulIdentifier","src":"9037:4:17"},{"name":"exponent","nativeSrc":"9043:8:17","nodeType":"YulIdentifier","src":"9043:8:17"},{"name":"max","nativeSrc":"9053:3:17","nodeType":"YulIdentifier","src":"9053:3:17"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"9015:18:17","nodeType":"YulIdentifier","src":"9015:18:17"},"nativeSrc":"9015:42:17","nodeType":"YulFunctionCall","src":"9015:42:17"},"variableNames":[{"name":"power","nativeSrc":"9000:5:17","nodeType":"YulIdentifier","src":"9000:5:17"},{"name":"base","nativeSrc":"9007:4:17","nodeType":"YulIdentifier","src":"9007:4:17"}]},{"body":{"nativeSrc":"9096:22:17","nodeType":"YulBlock","src":"9096:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9098:16:17","nodeType":"YulIdentifier","src":"9098:16:17"},"nativeSrc":"9098:18:17","nodeType":"YulFunctionCall","src":"9098:18:17"},"nativeSrc":"9098:18:17","nodeType":"YulExpressionStatement","src":"9098:18:17"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"9073:5:17","nodeType":"YulIdentifier","src":"9073:5:17"},{"arguments":[{"name":"max","nativeSrc":"9084:3:17","nodeType":"YulIdentifier","src":"9084:3:17"},{"name":"base","nativeSrc":"9089:4:17","nodeType":"YulIdentifier","src":"9089:4:17"}],"functionName":{"name":"div","nativeSrc":"9080:3:17","nodeType":"YulIdentifier","src":"9080:3:17"},"nativeSrc":"9080:14:17","nodeType":"YulFunctionCall","src":"9080:14:17"}],"functionName":{"name":"gt","nativeSrc":"9070:2:17","nodeType":"YulIdentifier","src":"9070:2:17"},"nativeSrc":"9070:25:17","nodeType":"YulFunctionCall","src":"9070:25:17"},"nativeSrc":"9067:51:17","nodeType":"YulIf","src":"9067:51:17"},{"nativeSrc":"9127:25:17","nodeType":"YulAssignment","src":"9127:25:17","value":{"arguments":[{"name":"power","nativeSrc":"9140:5:17","nodeType":"YulIdentifier","src":"9140:5:17"},{"name":"base","nativeSrc":"9147:4:17","nodeType":"YulIdentifier","src":"9147:4:17"}],"functionName":{"name":"mul","nativeSrc":"9136:3:17","nodeType":"YulIdentifier","src":"9136:3:17"},"nativeSrc":"9136:16:17","nodeType":"YulFunctionCall","src":"9136:16:17"},"variableNames":[{"name":"power","nativeSrc":"9127:5:17","nodeType":"YulIdentifier","src":"9127:5:17"}]}]},"name":"checked_exp_unsigned","nativeSrc":"8085:1073:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"8115:4:17","nodeType":"YulTypedName","src":"8115:4:17","type":""},{"name":"exponent","nativeSrc":"8121:8:17","nodeType":"YulTypedName","src":"8121:8:17","type":""},{"name":"max","nativeSrc":"8131:3:17","nodeType":"YulTypedName","src":"8131:3:17","type":""}],"returnVariables":[{"name":"power","nativeSrc":"8139:5:17","nodeType":"YulTypedName","src":"8139:5:17","type":""}],"src":"8085:1073:17"},{"body":{"nativeSrc":"9207:43:17","nodeType":"YulBlock","src":"9207:43:17","statements":[{"nativeSrc":"9217:27:17","nodeType":"YulAssignment","src":"9217:27:17","value":{"arguments":[{"name":"value","nativeSrc":"9232:5:17","nodeType":"YulIdentifier","src":"9232:5:17"},{"kind":"number","nativeSrc":"9239:4:17","nodeType":"YulLiteral","src":"9239:4:17","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"9228:3:17","nodeType":"YulIdentifier","src":"9228:3:17"},"nativeSrc":"9228:16:17","nodeType":"YulFunctionCall","src":"9228:16:17"},"variableNames":[{"name":"cleaned","nativeSrc":"9217:7:17","nodeType":"YulIdentifier","src":"9217:7:17"}]}]},"name":"cleanup_t_uint8","nativeSrc":"9164:86:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9189:5:17","nodeType":"YulTypedName","src":"9189:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9199:7:17","nodeType":"YulTypedName","src":"9199:7:17","type":""}],"src":"9164:86:17"},{"body":{"nativeSrc":"9320:217:17","nodeType":"YulBlock","src":"9320:217:17","statements":[{"nativeSrc":"9330:31:17","nodeType":"YulAssignment","src":"9330:31:17","value":{"arguments":[{"name":"base","nativeSrc":"9356:4:17","nodeType":"YulIdentifier","src":"9356:4:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9338:17:17","nodeType":"YulIdentifier","src":"9338:17:17"},"nativeSrc":"9338:23:17","nodeType":"YulFunctionCall","src":"9338:23:17"},"variableNames":[{"name":"base","nativeSrc":"9330:4:17","nodeType":"YulIdentifier","src":"9330:4:17"}]},{"nativeSrc":"9370:37:17","nodeType":"YulAssignment","src":"9370:37:17","value":{"arguments":[{"name":"exponent","nativeSrc":"9398:8:17","nodeType":"YulIdentifier","src":"9398:8:17"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"9382:15:17","nodeType":"YulIdentifier","src":"9382:15:17"},"nativeSrc":"9382:25:17","nodeType":"YulFunctionCall","src":"9382:25:17"},"variableNames":[{"name":"exponent","nativeSrc":"9370:8:17","nodeType":"YulIdentifier","src":"9370:8:17"}]},{"nativeSrc":"9417:113:17","nodeType":"YulAssignment","src":"9417:113:17","value":{"arguments":[{"name":"base","nativeSrc":"9447:4:17","nodeType":"YulIdentifier","src":"9447:4:17"},{"name":"exponent","nativeSrc":"9453:8:17","nodeType":"YulIdentifier","src":"9453:8:17"},{"kind":"number","nativeSrc":"9463:66:17","nodeType":"YulLiteral","src":"9463:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"9426:20:17","nodeType":"YulIdentifier","src":"9426:20:17"},"nativeSrc":"9426:104:17","nodeType":"YulFunctionCall","src":"9426:104:17"},"variableNames":[{"name":"power","nativeSrc":"9417:5:17","nodeType":"YulIdentifier","src":"9417:5:17"}]}]},"name":"checked_exp_t_uint256_t_uint8","nativeSrc":"9256:281:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"9295:4:17","nodeType":"YulTypedName","src":"9295:4:17","type":""},{"name":"exponent","nativeSrc":"9301:8:17","nodeType":"YulTypedName","src":"9301:8:17","type":""}],"returnVariables":[{"name":"power","nativeSrc":"9314:5:17","nodeType":"YulTypedName","src":"9314:5:17","type":""}],"src":"9256:281:17"},{"body":{"nativeSrc":"9591:362:17","nodeType":"YulBlock","src":"9591:362:17","statements":[{"nativeSrc":"9601:25:17","nodeType":"YulAssignment","src":"9601:25:17","value":{"arguments":[{"name":"x","nativeSrc":"9624:1:17","nodeType":"YulIdentifier","src":"9624:1:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9606:17:17","nodeType":"YulIdentifier","src":"9606:17:17"},"nativeSrc":"9606:20:17","nodeType":"YulFunctionCall","src":"9606:20:17"},"variableNames":[{"name":"x","nativeSrc":"9601:1:17","nodeType":"YulIdentifier","src":"9601:1:17"}]},{"nativeSrc":"9635:25:17","nodeType":"YulAssignment","src":"9635:25:17","value":{"arguments":[{"name":"y","nativeSrc":"9658:1:17","nodeType":"YulIdentifier","src":"9658:1:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9640:17:17","nodeType":"YulIdentifier","src":"9640:17:17"},"nativeSrc":"9640:20:17","nodeType":"YulFunctionCall","src":"9640:20:17"},"variableNames":[{"name":"y","nativeSrc":"9635:1:17","nodeType":"YulIdentifier","src":"9635:1:17"}]},{"nativeSrc":"9669:28:17","nodeType":"YulVariableDeclaration","src":"9669:28:17","value":{"arguments":[{"name":"x","nativeSrc":"9692:1:17","nodeType":"YulIdentifier","src":"9692:1:17"},{"name":"y","nativeSrc":"9695:1:17","nodeType":"YulIdentifier","src":"9695:1:17"}],"functionName":{"name":"mul","nativeSrc":"9688:3:17","nodeType":"YulIdentifier","src":"9688:3:17"},"nativeSrc":"9688:9:17","nodeType":"YulFunctionCall","src":"9688:9:17"},"variables":[{"name":"product_raw","nativeSrc":"9673:11:17","nodeType":"YulTypedName","src":"9673:11:17","type":""}]},{"nativeSrc":"9706:41:17","nodeType":"YulAssignment","src":"9706:41:17","value":{"arguments":[{"name":"product_raw","nativeSrc":"9735:11:17","nodeType":"YulIdentifier","src":"9735:11:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9717:17:17","nodeType":"YulIdentifier","src":"9717:17:17"},"nativeSrc":"9717:30:17","nodeType":"YulFunctionCall","src":"9717:30:17"},"variableNames":[{"name":"product","nativeSrc":"9706:7:17","nodeType":"YulIdentifier","src":"9706:7:17"}]},{"body":{"nativeSrc":"9924:22:17","nodeType":"YulBlock","src":"9924:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9926:16:17","nodeType":"YulIdentifier","src":"9926:16:17"},"nativeSrc":"9926:18:17","nodeType":"YulFunctionCall","src":"9926:18:17"},"nativeSrc":"9926:18:17","nodeType":"YulExpressionStatement","src":"9926:18:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"9857:1:17","nodeType":"YulIdentifier","src":"9857:1:17"}],"functionName":{"name":"iszero","nativeSrc":"9850:6:17","nodeType":"YulIdentifier","src":"9850:6:17"},"nativeSrc":"9850:9:17","nodeType":"YulFunctionCall","src":"9850:9:17"},{"arguments":[{"name":"y","nativeSrc":"9880:1:17","nodeType":"YulIdentifier","src":"9880:1:17"},{"arguments":[{"name":"product","nativeSrc":"9887:7:17","nodeType":"YulIdentifier","src":"9887:7:17"},{"name":"x","nativeSrc":"9896:1:17","nodeType":"YulIdentifier","src":"9896:1:17"}],"functionName":{"name":"div","nativeSrc":"9883:3:17","nodeType":"YulIdentifier","src":"9883:3:17"},"nativeSrc":"9883:15:17","nodeType":"YulFunctionCall","src":"9883:15:17"}],"functionName":{"name":"eq","nativeSrc":"9877:2:17","nodeType":"YulIdentifier","src":"9877:2:17"},"nativeSrc":"9877:22:17","nodeType":"YulFunctionCall","src":"9877:22:17"}],"functionName":{"name":"or","nativeSrc":"9830:2:17","nodeType":"YulIdentifier","src":"9830:2:17"},"nativeSrc":"9830:83:17","nodeType":"YulFunctionCall","src":"9830:83:17"}],"functionName":{"name":"iszero","nativeSrc":"9810:6:17","nodeType":"YulIdentifier","src":"9810:6:17"},"nativeSrc":"9810:113:17","nodeType":"YulFunctionCall","src":"9810:113:17"},"nativeSrc":"9807:139:17","nodeType":"YulIf","src":"9807:139:17"}]},"name":"checked_mul_t_uint256","nativeSrc":"9543:410:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9574:1:17","nodeType":"YulTypedName","src":"9574:1:17","type":""},{"name":"y","nativeSrc":"9577:1:17","nodeType":"YulTypedName","src":"9577:1:17","type":""}],"returnVariables":[{"name":"product","nativeSrc":"9583:7:17","nodeType":"YulTypedName","src":"9583:7:17","type":""}],"src":"9543:410:17"},{"body":{"nativeSrc":"10003:147:17","nodeType":"YulBlock","src":"10003:147:17","statements":[{"nativeSrc":"10013:25:17","nodeType":"YulAssignment","src":"10013:25:17","value":{"arguments":[{"name":"x","nativeSrc":"10036:1:17","nodeType":"YulIdentifier","src":"10036:1:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10018:17:17","nodeType":"YulIdentifier","src":"10018:17:17"},"nativeSrc":"10018:20:17","nodeType":"YulFunctionCall","src":"10018:20:17"},"variableNames":[{"name":"x","nativeSrc":"10013:1:17","nodeType":"YulIdentifier","src":"10013:1:17"}]},{"nativeSrc":"10047:25:17","nodeType":"YulAssignment","src":"10047:25:17","value":{"arguments":[{"name":"y","nativeSrc":"10070:1:17","nodeType":"YulIdentifier","src":"10070:1:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10052:17:17","nodeType":"YulIdentifier","src":"10052:17:17"},"nativeSrc":"10052:20:17","nodeType":"YulFunctionCall","src":"10052:20:17"},"variableNames":[{"name":"y","nativeSrc":"10047:1:17","nodeType":"YulIdentifier","src":"10047:1:17"}]},{"nativeSrc":"10081:16:17","nodeType":"YulAssignment","src":"10081:16:17","value":{"arguments":[{"name":"x","nativeSrc":"10092:1:17","nodeType":"YulIdentifier","src":"10092:1:17"},{"name":"y","nativeSrc":"10095:1:17","nodeType":"YulIdentifier","src":"10095:1:17"}],"functionName":{"name":"add","nativeSrc":"10088:3:17","nodeType":"YulIdentifier","src":"10088:3:17"},"nativeSrc":"10088:9:17","nodeType":"YulFunctionCall","src":"10088:9:17"},"variableNames":[{"name":"sum","nativeSrc":"10081:3:17","nodeType":"YulIdentifier","src":"10081:3:17"}]},{"body":{"nativeSrc":"10121:22:17","nodeType":"YulBlock","src":"10121:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10123:16:17","nodeType":"YulIdentifier","src":"10123:16:17"},"nativeSrc":"10123:18:17","nodeType":"YulFunctionCall","src":"10123:18:17"},"nativeSrc":"10123:18:17","nodeType":"YulExpressionStatement","src":"10123:18:17"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"10113:1:17","nodeType":"YulIdentifier","src":"10113:1:17"},{"name":"sum","nativeSrc":"10116:3:17","nodeType":"YulIdentifier","src":"10116:3:17"}],"functionName":{"name":"gt","nativeSrc":"10110:2:17","nodeType":"YulIdentifier","src":"10110:2:17"},"nativeSrc":"10110:10:17","nodeType":"YulFunctionCall","src":"10110:10:17"},"nativeSrc":"10107:36:17","nodeType":"YulIf","src":"10107:36:17"}]},"name":"checked_add_t_uint256","nativeSrc":"9959:191:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9990:1:17","nodeType":"YulTypedName","src":"9990:1:17","type":""},{"name":"y","nativeSrc":"9993:1:17","nodeType":"YulTypedName","src":"9993:1:17","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"9999:3:17","nodeType":"YulTypedName","src":"9999:3:17","type":""}],"src":"9959:191:17"},{"body":{"nativeSrc":"10221:53:17","nodeType":"YulBlock","src":"10221:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10238:3:17","nodeType":"YulIdentifier","src":"10238:3:17"},{"arguments":[{"name":"value","nativeSrc":"10261:5:17","nodeType":"YulIdentifier","src":"10261:5:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10243:17:17","nodeType":"YulIdentifier","src":"10243:17:17"},"nativeSrc":"10243:24:17","nodeType":"YulFunctionCall","src":"10243:24:17"}],"functionName":{"name":"mstore","nativeSrc":"10231:6:17","nodeType":"YulIdentifier","src":"10231:6:17"},"nativeSrc":"10231:37:17","nodeType":"YulFunctionCall","src":"10231:37:17"},"nativeSrc":"10231:37:17","nodeType":"YulExpressionStatement","src":"10231:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10156:118:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10209:5:17","nodeType":"YulTypedName","src":"10209:5:17","type":""},{"name":"pos","nativeSrc":"10216:3:17","nodeType":"YulTypedName","src":"10216:3:17","type":""}],"src":"10156:118:17"},{"body":{"nativeSrc":"10434:288:17","nodeType":"YulBlock","src":"10434:288:17","statements":[{"nativeSrc":"10444:26:17","nodeType":"YulAssignment","src":"10444:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"10456:9:17","nodeType":"YulIdentifier","src":"10456:9:17"},{"kind":"number","nativeSrc":"10467:2:17","nodeType":"YulLiteral","src":"10467:2:17","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10452:3:17","nodeType":"YulIdentifier","src":"10452:3:17"},"nativeSrc":"10452:18:17","nodeType":"YulFunctionCall","src":"10452:18:17"},"variableNames":[{"name":"tail","nativeSrc":"10444:4:17","nodeType":"YulIdentifier","src":"10444:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10524:6:17","nodeType":"YulIdentifier","src":"10524:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"10537:9:17","nodeType":"YulIdentifier","src":"10537:9:17"},{"kind":"number","nativeSrc":"10548:1:17","nodeType":"YulLiteral","src":"10548:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10533:3:17","nodeType":"YulIdentifier","src":"10533:3:17"},"nativeSrc":"10533:17:17","nodeType":"YulFunctionCall","src":"10533:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10480:43:17","nodeType":"YulIdentifier","src":"10480:43:17"},"nativeSrc":"10480:71:17","nodeType":"YulFunctionCall","src":"10480:71:17"},"nativeSrc":"10480:71:17","nodeType":"YulExpressionStatement","src":"10480:71:17"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10605:6:17","nodeType":"YulIdentifier","src":"10605:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"10618:9:17","nodeType":"YulIdentifier","src":"10618:9:17"},{"kind":"number","nativeSrc":"10629:2:17","nodeType":"YulLiteral","src":"10629:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10614:3:17","nodeType":"YulIdentifier","src":"10614:3:17"},"nativeSrc":"10614:18:17","nodeType":"YulFunctionCall","src":"10614:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10561:43:17","nodeType":"YulIdentifier","src":"10561:43:17"},"nativeSrc":"10561:72:17","nodeType":"YulFunctionCall","src":"10561:72:17"},"nativeSrc":"10561:72:17","nodeType":"YulExpressionStatement","src":"10561:72:17"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"10687:6:17","nodeType":"YulIdentifier","src":"10687:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"10700:9:17","nodeType":"YulIdentifier","src":"10700:9:17"},{"kind":"number","nativeSrc":"10711:2:17","nodeType":"YulLiteral","src":"10711:2:17","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10696:3:17","nodeType":"YulIdentifier","src":"10696:3:17"},"nativeSrc":"10696:18:17","nodeType":"YulFunctionCall","src":"10696:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10643:43:17","nodeType":"YulIdentifier","src":"10643:43:17"},"nativeSrc":"10643:72:17","nodeType":"YulFunctionCall","src":"10643:72:17"},"nativeSrc":"10643:72:17","nodeType":"YulExpressionStatement","src":"10643:72:17"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"10280:442:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10390:9:17","nodeType":"YulTypedName","src":"10390:9:17","type":""},{"name":"value2","nativeSrc":"10402:6:17","nodeType":"YulTypedName","src":"10402:6:17","type":""},{"name":"value1","nativeSrc":"10410:6:17","nodeType":"YulTypedName","src":"10410:6:17","type":""},{"name":"value0","nativeSrc":"10418:6:17","nodeType":"YulTypedName","src":"10418:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10429:4:17","nodeType":"YulTypedName","src":"10429:4:17","type":""}],"src":"10280:442:17"},{"body":{"nativeSrc":"10826:124:17","nodeType":"YulBlock","src":"10826:124:17","statements":[{"nativeSrc":"10836:26:17","nodeType":"YulAssignment","src":"10836:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"10848:9:17","nodeType":"YulIdentifier","src":"10848:9:17"},{"kind":"number","nativeSrc":"10859:2:17","nodeType":"YulLiteral","src":"10859:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10844:3:17","nodeType":"YulIdentifier","src":"10844:3:17"},"nativeSrc":"10844:18:17","nodeType":"YulFunctionCall","src":"10844:18:17"},"variableNames":[{"name":"tail","nativeSrc":"10836:4:17","nodeType":"YulIdentifier","src":"10836:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10916:6:17","nodeType":"YulIdentifier","src":"10916:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"10929:9:17","nodeType":"YulIdentifier","src":"10929:9:17"},{"kind":"number","nativeSrc":"10940:1:17","nodeType":"YulLiteral","src":"10940:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10925:3:17","nodeType":"YulIdentifier","src":"10925:3:17"},"nativeSrc":"10925:17:17","nodeType":"YulFunctionCall","src":"10925:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10872:43:17","nodeType":"YulIdentifier","src":"10872:43:17"},"nativeSrc":"10872:71:17","nodeType":"YulFunctionCall","src":"10872:71:17"},"nativeSrc":"10872:71:17","nodeType":"YulExpressionStatement","src":"10872:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"10728:222:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10798:9:17","nodeType":"YulTypedName","src":"10798:9:17","type":""},{"name":"value0","nativeSrc":"10810:6:17","nodeType":"YulTypedName","src":"10810:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10821:4:17","nodeType":"YulTypedName","src":"10821:4:17","type":""}],"src":"10728:222:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051611d2c380380611d2c83398181016040528101906100329190610565565b806040518060400160405280600681526020017f746f6b656e4100000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f544f4b410000000000000000000000000000000000000000000000000000000081525081600390816100ae91906107f5565b5080600490816100be91906107f5565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101335760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012a91906108d6565b60405180910390fd5b6101428161018660201b60201c565b5061017f8261015561024c60201b60201c565b600a6101619190610a60565b670de0b6b3a76400006101749190610aab565b61025560201b60201c565b5050610b82565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102c75760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102be91906108d6565b60405180910390fd5b6102d9600083836102dd60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361032f5780600260008282546103239190610aed565b92505081905550610402565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156103bb578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016103b293929190610b30565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361044b5780600260008282540392505081905550610498565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104f59190610b67565b60405180910390a3505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061053282610507565b9050919050565b61054281610527565b811461054d57600080fd5b50565b60008151905061055f81610539565b92915050565b6000806040838503121561057c5761057b610502565b5b600061058a85828601610550565b925050602061059b85828601610550565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061062657607f821691505b602082108103610639576106386105df565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026106a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610664565b6106ab8683610664565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006106f26106ed6106e8846106c3565b6106cd565b6106c3565b9050919050565b6000819050919050565b61070c836106d7565b610720610718826106f9565b848454610671565b825550505050565b600090565b610735610728565b610740818484610703565b505050565b5b818110156107645761075960008261072d565b600181019050610746565b5050565b601f8211156107a95761077a8161063f565b61078384610654565b81016020851015610792578190505b6107a661079e85610654565b830182610745565b50505b505050565b600082821c905092915050565b60006107cc600019846008026107ae565b1980831691505092915050565b60006107e583836107bb565b9150826002028217905092915050565b6107fe826105a5565b67ffffffffffffffff811115610817576108166105b0565b5b610821825461060e565b61082c828285610768565b600060209050601f83116001811461085f576000841561084d578287015190505b61085785826107d9565b8655506108bf565b601f19841661086d8661063f565b60005b8281101561089557848901518255600182019150602085019450602081019050610870565b868310156108b257848901516108ae601f8916826107bb565b8355505b6001600288020188555050505b505050505050565b6108d081610527565b82525050565b60006020820190506108eb60008301846108c7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111561097757808604811115610953576109526108f1565b5b60018516156109625780820291505b808102905061097085610920565b9450610937565b94509492505050565b6000826109905760019050610a4c565b8161099e5760009050610a4c565b81600181146109b457600281146109be576109ed565b6001915050610a4c565b60ff8411156109d0576109cf6108f1565b5b8360020a9150848211156109e7576109e66108f1565b5b50610a4c565b5060208310610133831016604e8410600b8410161715610a225782820a905083811115610a1d57610a1c6108f1565b5b610a4c565b610a2f848484600161092d565b92509050818404811115610a4657610a456108f1565b5b81810290505b9392505050565b600060ff82169050919050565b6000610a6b826106c3565b9150610a7683610a53565b9250610aa37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610980565b905092915050565b6000610ab6826106c3565b9150610ac1836106c3565b9250828202610acf816106c3565b91508282048414831517610ae657610ae56108f1565b5b5092915050565b6000610af8826106c3565b9150610b03836106c3565b9250828201905080821115610b1b57610b1a6108f1565b5b92915050565b610b2a816106c3565b82525050565b6000606082019050610b4560008301866108c7565b610b526020830185610b21565b610b5f6040830184610b21565b949350505050565b6000602082019050610b7c6000830184610b21565b92915050565b61119b80610b916000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610202578063a9059cbb14610220578063dd62ed3e14610250578063f2fde38b14610280576100cf565b806370a08231146101aa578063715018a6146101da5780638da5cb5b146101e4576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806340c10f191461018e575b600080fd5b6100dc61029c565b6040516100e99190610def565b60405180910390f35b61010c60048036038101906101079190610eaa565b61032e565b6040516101199190610f05565b60405180910390f35b61012a610351565b6040516101379190610f2f565b60405180910390f35b61015a60048036038101906101559190610f4a565b61035b565b6040516101679190610f05565b60405180910390f35b61017861038a565b6040516101859190610fb9565b60405180910390f35b6101a860048036038101906101a39190610eaa565b610393565b005b6101c460048036038101906101bf9190610fd4565b6103a9565b6040516101d19190610f2f565b60405180910390f35b6101e26103f1565b005b6101ec610405565b6040516101f99190611010565b60405180910390f35b61020a61042f565b6040516102179190610def565b60405180910390f35b61023a60048036038101906102359190610eaa565b6104c1565b6040516102479190610f05565b60405180910390f35b61026a6004803603810190610265919061102b565b6104e4565b6040516102779190610f2f565b60405180910390f35b61029a60048036038101906102959190610fd4565b61056b565b005b6060600380546102ab9061109a565b80601f01602080910402602001604051908101604052809291908181526020018280546102d79061109a565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b6000806103396105f1565b90506103468185856105f9565b600191505092915050565b6000600254905090565b6000806103666105f1565b905061037385828561060b565b61037e8585856106a0565b60019150509392505050565b60006012905090565b61039b610794565b6103a5828261081b565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103f9610794565b610403600061089d565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461043e9061109a565b80601f016020809104026020016040519081016040528092919081815260200182805461046a9061109a565b80156104b75780601f1061048c576101008083540402835291602001916104b7565b820191906000526020600020905b81548152906001019060200180831161049a57829003601f168201915b5050505050905090565b6000806104cc6105f1565b90506104d98185856106a0565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610573610794565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105e55760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105dc9190611010565b60405180910390fd5b6105ee8161089d565b50565b600033905090565b6106068383836001610963565b505050565b600061061784846104e4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561069a578181101561068a578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610681939291906110cb565b60405180910390fd5b61069984848484036000610963565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107125760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107099190611010565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107845760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161077b9190611010565b60405180910390fd5b61078f838383610b3a565b505050565b61079c6105f1565b73ffffffffffffffffffffffffffffffffffffffff166107ba610405565b73ffffffffffffffffffffffffffffffffffffffff1614610819576107dd6105f1565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108109190611010565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361088d5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108849190611010565b60405180910390fd5b61089960008383610b3a565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109d55760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109cc9190611010565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a475760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a3e9190611010565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b34578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b2b9190610f2f565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b8c578060026000828254610b809190611131565b92505081905550610c5f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c18578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c0f939291906110cb565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ca85780600260008282540392505081905550610cf5565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d529190610f2f565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d99578082015181840152602081019050610d7e565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dc182610d5f565b610dcb8185610d6a565b9350610ddb818560208601610d7b565b610de481610da5565b840191505092915050565b60006020820190508181036000830152610e098184610db6565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4182610e16565b9050919050565b610e5181610e36565b8114610e5c57600080fd5b50565b600081359050610e6e81610e48565b92915050565b6000819050919050565b610e8781610e74565b8114610e9257600080fd5b50565b600081359050610ea481610e7e565b92915050565b60008060408385031215610ec157610ec0610e11565b5b6000610ecf85828601610e5f565b9250506020610ee085828601610e95565b9150509250929050565b60008115159050919050565b610eff81610eea565b82525050565b6000602082019050610f1a6000830184610ef6565b92915050565b610f2981610e74565b82525050565b6000602082019050610f446000830184610f20565b92915050565b600080600060608486031215610f6357610f62610e11565b5b6000610f7186828701610e5f565b9350506020610f8286828701610e5f565b9250506040610f9386828701610e95565b9150509250925092565b600060ff82169050919050565b610fb381610f9d565b82525050565b6000602082019050610fce6000830184610faa565b92915050565b600060208284031215610fea57610fe9610e11565b5b6000610ff884828501610e5f565b91505092915050565b61100a81610e36565b82525050565b60006020820190506110256000830184611001565b92915050565b6000806040838503121561104257611041610e11565b5b600061105085828601610e5f565b925050602061106185828601610e5f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110b257607f821691505b6020821081036110c5576110c461106b565b5b50919050565b60006060820190506110e06000830186611001565b6110ed6020830185610f20565b6110fa6040830184610f20565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061113c82610e74565b915061114783610e74565b925082820190508082111561115f5761115e611102565b5b9291505056fea2646970667358221220b39386468fe18254a3afd14a99a799efbd238f24383ab44b1ff37c68a618f76c64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1D2C CODESIZE SUB DUP1 PUSH2 0x1D2C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x565 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x746F6B656E410000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x544F4B4100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x7F5 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x7F5 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x133 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x186 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x17F DUP3 PUSH2 0x155 PUSH2 0x24C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x161 SWAP2 SWAP1 PUSH2 0xA60 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH2 0x255 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2C7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D9 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2DD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x32F JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0xAED JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x402 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3BB JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x44B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x498 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4F5 SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x532 DUP3 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x542 DUP2 PUSH2 0x527 JUMP JUMPDEST DUP2 EQ PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x55F DUP2 PUSH2 0x539 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x57C JUMPI PUSH2 0x57B PUSH2 0x502 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x58A DUP6 DUP3 DUP7 ADD PUSH2 0x550 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x59B DUP6 DUP3 DUP7 ADD PUSH2 0x550 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x626 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x639 JUMPI PUSH2 0x638 PUSH2 0x5DF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x6A1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x664 JUMP JUMPDEST PUSH2 0x6AB DUP7 DUP4 PUSH2 0x664 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F2 PUSH2 0x6ED PUSH2 0x6E8 DUP5 PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x6C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x70C DUP4 PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x720 PUSH2 0x718 DUP3 PUSH2 0x6F9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x671 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x735 PUSH2 0x728 JUMP JUMPDEST PUSH2 0x740 DUP2 DUP5 DUP5 PUSH2 0x703 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x764 JUMPI PUSH2 0x759 PUSH1 0x0 DUP3 PUSH2 0x72D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x746 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7A9 JUMPI PUSH2 0x77A DUP2 PUSH2 0x63F JUMP JUMPDEST PUSH2 0x783 DUP5 PUSH2 0x654 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x792 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x7A6 PUSH2 0x79E DUP6 PUSH2 0x654 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x745 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CC PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x7AE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7E5 DUP4 DUP4 PUSH2 0x7BB JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7FE DUP3 PUSH2 0x5A5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x817 JUMPI PUSH2 0x816 PUSH2 0x5B0 JUMP JUMPDEST JUMPDEST PUSH2 0x821 DUP3 SLOAD PUSH2 0x60E JUMP JUMPDEST PUSH2 0x82C DUP3 DUP3 DUP6 PUSH2 0x768 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x85F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x84D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x857 DUP6 DUP3 PUSH2 0x7D9 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x86D DUP7 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x895 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x870 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x8B2 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x8AE PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x7BB JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8D0 DUP2 PUSH2 0x527 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8EB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x977 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x953 JUMPI PUSH2 0x952 PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x962 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x970 DUP6 PUSH2 0x920 JUMP JUMPDEST SWAP5 POP PUSH2 0x937 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x990 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xA4C JUMP JUMPDEST DUP2 PUSH2 0x99E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xA4C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x9B4 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x9BE JUMPI PUSH2 0x9ED JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xA4C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x9D0 JUMPI PUSH2 0x9CF PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x9E7 JUMPI PUSH2 0x9E6 PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST POP PUSH2 0xA4C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xA22 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xA1D JUMPI PUSH2 0xA1C PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST PUSH2 0xA4C JUMP JUMPDEST PUSH2 0xA2F DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x92D JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xA46 JUMPI PUSH2 0xA45 PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6B DUP3 PUSH2 0x6C3 JUMP JUMPDEST SWAP2 POP PUSH2 0xA76 DUP4 PUSH2 0xA53 JUMP JUMPDEST SWAP3 POP PUSH2 0xAA3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x980 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB6 DUP3 PUSH2 0x6C3 JUMP JUMPDEST SWAP2 POP PUSH2 0xAC1 DUP4 PUSH2 0x6C3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xACF DUP2 PUSH2 0x6C3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xAE6 JUMPI PUSH2 0xAE5 PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF8 DUP3 PUSH2 0x6C3 JUMP JUMPDEST SWAP2 POP PUSH2 0xB03 DUP4 PUSH2 0x6C3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB1B JUMPI PUSH2 0xB1A PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB2A DUP2 PUSH2 0x6C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB45 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0xB52 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB21 JUMP JUMPDEST PUSH2 0xB5F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB21 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB7C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x119B DUP1 PUSH2 0xB91 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x280 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E4 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x3F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x339 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x346 DUP2 DUP6 DUP6 PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x366 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x373 DUP6 DUP3 DUP6 PUSH2 0x60B JUMP JUMPDEST PUSH2 0x37E DUP6 DUP6 DUP6 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x794 JUMP JUMPDEST PUSH2 0x3A5 DUP3 DUP3 PUSH2 0x81B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x794 JUMP JUMPDEST PUSH2 0x403 PUSH1 0x0 PUSH2 0x89D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x43E SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4CC PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D9 DUP2 DUP6 DUP6 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x573 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5E5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5EE DUP2 PUSH2 0x89D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x606 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x963 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x617 DUP5 DUP5 PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x69A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x68A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x681 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x699 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x963 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x712 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x709 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x784 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78F DUP4 DUP4 DUP4 PUSH2 0xB3A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x79C PUSH2 0x5F1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7BA PUSH2 0x405 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x819 JUMPI PUSH2 0x7DD PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x810 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x88D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x884 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x899 PUSH1 0x0 DUP4 DUP4 PUSH2 0xB3A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CC SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA47 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB34 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB2B SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x1131 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC18 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA8 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCF5 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD52 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD99 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC1 DUP3 PUSH2 0xD5F JUMP JUMPDEST PUSH2 0xDCB DUP2 DUP6 PUSH2 0xD6A JUMP JUMPDEST SWAP4 POP PUSH2 0xDDB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xDE4 DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE09 DUP2 DUP5 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE41 DUP3 PUSH2 0xE16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE51 DUP2 PUSH2 0xE36 JUMP JUMPDEST DUP2 EQ PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE6E DUP2 PUSH2 0xE48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE87 DUP2 PUSH2 0xE74 JUMP JUMPDEST DUP2 EQ PUSH2 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEA4 DUP2 PUSH2 0xE7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH2 0xEC0 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xECF DUP6 DUP3 DUP7 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEE0 DUP6 DUP3 DUP7 ADD PUSH2 0xE95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEFF DUP2 PUSH2 0xEEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF29 DUP2 PUSH2 0xE74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF44 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF63 JUMPI PUSH2 0xF62 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF71 DUP7 DUP3 DUP8 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF82 DUP7 DUP3 DUP8 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF93 DUP7 DUP3 DUP8 ADD PUSH2 0xE95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB3 DUP2 PUSH2 0xF9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFCE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFEA JUMPI PUSH2 0xFE9 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF8 DUP5 DUP3 DUP6 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100A DUP2 PUSH2 0xE36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1025 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1001 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1042 JUMPI PUSH2 0x1041 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1050 DUP6 DUP3 DUP7 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1061 DUP6 DUP3 DUP7 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10B2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10C5 JUMPI PUSH2 0x10C4 PUSH2 0x106B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10E0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x10ED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x10FA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF20 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x113C DUP3 PUSH2 0xE74 JUMP JUMPDEST SWAP2 POP PUSH2 0x1147 DUP4 PUSH2 0xE74 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x115F JUMPI PUSH2 0x115E PUSH2 0x1102 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 SWAP4 DUP7 CHAINID DUP16 0xE1 DUP3 SLOAD LOG3 0xAF 0xD1 BLOBBASEFEE SWAP10 0xA7 SWAP10 0xEF 0xBD 0x23 DUP16 0x24 CODESIZE GASPRICE 0xB4 0x4B 0x1F RETURN PUSH29 0x68A618F76C64736F6C634300081C003300000000000000000000000000 ","sourceMap":"536:1023:15:-:0;;;807:368;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;948:12;1582:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1112:56:15::2;1118:9;1157:10;:8;;;:10;;:::i;:::-;1151:2;:16;;;;:::i;:::-;1129:19;:38;;;;:::i;:::-;1112:5;;;:56;;:::i;:::-;807:368:::0;;536:1023;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2688:82:5:-;2737:5;2761:2;2754:9;;2688:82;:::o;7439:208::-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;88:117:17:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;6585:118::-;6672:24;6690:5;6672:24;:::i;:::-;6667:3;6660:37;6585:118;;:::o;6709:222::-;6802:4;6840:2;6829:9;6825:18;6817:26;;6853:71;6921:1;6910:9;6906:17;6897:6;6853:71;:::i;:::-;6709:222;;;;:::o;6937:180::-;6985:77;6982:1;6975:88;7082:4;7079:1;7072:15;7106:4;7103:1;7096:15;7123:102;7165:8;7212:5;7209:1;7205:13;7184:34;;7123:102;;;:::o;7231:848::-;7292:5;7299:4;7323:6;7314:15;;7347:5;7338:14;;7361:712;7382:1;7372:8;7369:15;7361:712;;;7477:4;7472:3;7468:14;7462:4;7459:24;7456:50;;;7486:18;;:::i;:::-;7456:50;7536:1;7526:8;7522:16;7519:451;;;7951:4;7944:5;7940:16;7931:25;;7519:451;8001:4;7995;7991:15;7983:23;;8031:32;8054:8;8031:32;:::i;:::-;8019:44;;7361:712;;;7231:848;;;;;;;:::o;8085:1073::-;8139:5;8330:8;8320:40;;8351:1;8342:10;;8353:5;;8320:40;8379:4;8369:36;;8396:1;8387:10;;8398:5;;8369:36;8465:4;8513:1;8508:27;;;;8549:1;8544:191;;;;8458:277;;8508:27;8526:1;8517:10;;8528:5;;;8544:191;8589:3;8579:8;8576:17;8573:43;;;8596:18;;:::i;:::-;8573:43;8645:8;8642:1;8638:16;8629:25;;8680:3;8673:5;8670:14;8667:40;;;8687:18;;:::i;:::-;8667:40;8720:5;;;8458:277;;8844:2;8834:8;8831:16;8825:3;8819:4;8816:13;8812:36;8794:2;8784:8;8781:16;8776:2;8770:4;8767:12;8763:35;8747:111;8744:246;;;8900:8;8894:4;8890:19;8881:28;;8935:3;8928:5;8925:14;8922:40;;;8942:18;;:::i;:::-;8922:40;8975:5;;8744:246;9015:42;9053:3;9043:8;9037:4;9034:1;9015:42;:::i;:::-;9000:57;;;;9089:4;9084:3;9080:14;9073:5;9070:25;9067:51;;;9098:18;;:::i;:::-;9067:51;9147:4;9140:5;9136:16;9127:25;;8085:1073;;;;;;:::o;9164:86::-;9199:7;9239:4;9232:5;9228:16;9217:27;;9164:86;;;:::o;9256:281::-;9314:5;9338:23;9356:4;9338:23;:::i;:::-;9330:31;;9382:25;9398:8;9382:25;:::i;:::-;9370:37;;9426:104;9463:66;9453:8;9447:4;9426:104;:::i;:::-;9417:113;;9256:281;;;;:::o;9543:410::-;9583:7;9606:20;9624:1;9606:20;:::i;:::-;9601:25;;9640:20;9658:1;9640:20;:::i;:::-;9635:25;;9695:1;9692;9688:9;9717:30;9735:11;9717:30;:::i;:::-;9706:41;;9896:1;9887:7;9883:15;9880:1;9877:22;9857:1;9850:9;9830:83;9807:139;;9926:18;;:::i;:::-;9807:139;9591:362;9543:410;;;;:::o;9959:191::-;9999:3;10018:20;10036:1;10018:20;:::i;:::-;10013:25;;10052:20;10070:1;10052:20;:::i;:::-;10047:25;;10095:1;10092;10088:9;10081:16;;10116:3;10113:1;10110:10;10107:36;;;10123:18;;:::i;:::-;10107:36;9959:191;;;;:::o;10156:118::-;10243:24;10261:5;10243:24;:::i;:::-;10238:3;10231:37;10156:118;;:::o;10280:442::-;10429:4;10467:2;10456:9;10452:18;10444:26;;10480:71;10548:1;10537:9;10533:17;10524:6;10480:71;:::i;:::-;10561:72;10629:2;10618:9;10614:18;10605:6;10561:72;:::i;:::-;10643;10711:2;10700:9;10696:18;10687:6;10643:72;:::i;:::-;10280:442;;;;;;:::o;10728:222::-;10821:4;10859:2;10848:9;10844:18;10836:26;;10872:71;10940:1;10929:9;10925:17;10916:6;10872:71;:::i;:::-;10728:222;;;;:::o;536:1023:15:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_780":{"entryPoint":1529,"id":780,"parameterSlots":3,"returnSlots":0},"@_approve_840":{"entryPoint":2403,"id":840,"parameterSlots":4,"returnSlots":0},"@_checkOwner_84":{"entryPoint":1940,"id":84,"parameterSlots":0,"returnSlots":0},"@_mint_729":{"entryPoint":2075,"id":729,"parameterSlots":2,"returnSlots":0},"@_msgSender_1469":{"entryPoint":1521,"id":1469,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_888":{"entryPoint":1547,"id":888,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2205,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_619":{"entryPoint":1696,"id":619,"parameterSlots":3,"returnSlots":0},"@_update_696":{"entryPoint":2874,"id":696,"parameterSlots":3,"returnSlots":0},"@allowance_516":{"entryPoint":1252,"id":516,"parameterSlots":2,"returnSlots":1},"@approve_540":{"entryPoint":814,"id":540,"parameterSlots":2,"returnSlots":1},"@balanceOf_475":{"entryPoint":937,"id":475,"parameterSlots":1,"returnSlots":1},"@decimals_453":{"entryPoint":906,"id":453,"parameterSlots":0,"returnSlots":1},"@mint_5898":{"entryPoint":915,"id":5898,"parameterSlots":2,"returnSlots":0},"@name_435":{"entryPoint":668,"id":435,"parameterSlots":0,"returnSlots":1},"@owner_67":{"entryPoint":1029,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1009,"id":98,"parameterSlots":0,"returnSlots":0},"@symbol_444":{"entryPoint":1071,"id":444,"parameterSlots":0,"returnSlots":1},"@totalSupply_462":{"entryPoint":849,"id":462,"parameterSlots":0,"returnSlots":1},"@transferFrom_572":{"entryPoint":859,"id":572,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":1387,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_499":{"entryPoint":1217,"id":499,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3679,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3733,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4052,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4139,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3914,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3754,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4097,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3830,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3510,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3872,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":4010,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4112,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4299,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3845,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3567,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3887,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":4025,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3423,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3434,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4401,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3638,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3818,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3606,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3700,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3997,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3451,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4250,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4354,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4203,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3601,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3493,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":3656,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3710,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:7362:17","nodeType":"YulBlock","src":"0:7362:17","statements":[{"body":{"nativeSrc":"66:40:17","nodeType":"YulBlock","src":"66:40:17","statements":[{"nativeSrc":"77:22:17","nodeType":"YulAssignment","src":"77:22:17","value":{"arguments":[{"name":"value","nativeSrc":"93:5:17","nodeType":"YulIdentifier","src":"93:5:17"}],"functionName":{"name":"mload","nativeSrc":"87:5:17","nodeType":"YulIdentifier","src":"87:5:17"},"nativeSrc":"87:12:17","nodeType":"YulFunctionCall","src":"87:12:17"},"variableNames":[{"name":"length","nativeSrc":"77:6:17","nodeType":"YulIdentifier","src":"77:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:17","nodeType":"YulTypedName","src":"49:5:17","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:17","nodeType":"YulTypedName","src":"59:6:17","type":""}],"src":"7:99:17"},{"body":{"nativeSrc":"208:73:17","nodeType":"YulBlock","src":"208:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:17","nodeType":"YulIdentifier","src":"225:3:17"},{"name":"length","nativeSrc":"230:6:17","nodeType":"YulIdentifier","src":"230:6:17"}],"functionName":{"name":"mstore","nativeSrc":"218:6:17","nodeType":"YulIdentifier","src":"218:6:17"},"nativeSrc":"218:19:17","nodeType":"YulFunctionCall","src":"218:19:17"},"nativeSrc":"218:19:17","nodeType":"YulExpressionStatement","src":"218:19:17"},{"nativeSrc":"246:29:17","nodeType":"YulAssignment","src":"246:29:17","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:17","nodeType":"YulIdentifier","src":"265:3:17"},{"kind":"number","nativeSrc":"270:4:17","nodeType":"YulLiteral","src":"270:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:17","nodeType":"YulIdentifier","src":"261:3:17"},"nativeSrc":"261:14:17","nodeType":"YulFunctionCall","src":"261:14:17"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:17","nodeType":"YulIdentifier","src":"246:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:17","nodeType":"YulTypedName","src":"180:3:17","type":""},{"name":"length","nativeSrc":"185:6:17","nodeType":"YulTypedName","src":"185:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:17","nodeType":"YulTypedName","src":"196:11:17","type":""}],"src":"112:169:17"},{"body":{"nativeSrc":"349:186:17","nodeType":"YulBlock","src":"349:186:17","statements":[{"nativeSrc":"360:10:17","nodeType":"YulVariableDeclaration","src":"360:10:17","value":{"kind":"number","nativeSrc":"369:1:17","nodeType":"YulLiteral","src":"369:1:17","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"364:1:17","nodeType":"YulTypedName","src":"364:1:17","type":""}]},{"body":{"nativeSrc":"429:63:17","nodeType":"YulBlock","src":"429:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"454:3:17","nodeType":"YulIdentifier","src":"454:3:17"},{"name":"i","nativeSrc":"459:1:17","nodeType":"YulIdentifier","src":"459:1:17"}],"functionName":{"name":"add","nativeSrc":"450:3:17","nodeType":"YulIdentifier","src":"450:3:17"},"nativeSrc":"450:11:17","nodeType":"YulFunctionCall","src":"450:11:17"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"473:3:17","nodeType":"YulIdentifier","src":"473:3:17"},{"name":"i","nativeSrc":"478:1:17","nodeType":"YulIdentifier","src":"478:1:17"}],"functionName":{"name":"add","nativeSrc":"469:3:17","nodeType":"YulIdentifier","src":"469:3:17"},"nativeSrc":"469:11:17","nodeType":"YulFunctionCall","src":"469:11:17"}],"functionName":{"name":"mload","nativeSrc":"463:5:17","nodeType":"YulIdentifier","src":"463:5:17"},"nativeSrc":"463:18:17","nodeType":"YulFunctionCall","src":"463:18:17"}],"functionName":{"name":"mstore","nativeSrc":"443:6:17","nodeType":"YulIdentifier","src":"443:6:17"},"nativeSrc":"443:39:17","nodeType":"YulFunctionCall","src":"443:39:17"},"nativeSrc":"443:39:17","nodeType":"YulExpressionStatement","src":"443:39:17"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"390:1:17","nodeType":"YulIdentifier","src":"390:1:17"},{"name":"length","nativeSrc":"393:6:17","nodeType":"YulIdentifier","src":"393:6:17"}],"functionName":{"name":"lt","nativeSrc":"387:2:17","nodeType":"YulIdentifier","src":"387:2:17"},"nativeSrc":"387:13:17","nodeType":"YulFunctionCall","src":"387:13:17"},"nativeSrc":"379:113:17","nodeType":"YulForLoop","post":{"nativeSrc":"401:19:17","nodeType":"YulBlock","src":"401:19:17","statements":[{"nativeSrc":"403:15:17","nodeType":"YulAssignment","src":"403:15:17","value":{"arguments":[{"name":"i","nativeSrc":"412:1:17","nodeType":"YulIdentifier","src":"412:1:17"},{"kind":"number","nativeSrc":"415:2:17","nodeType":"YulLiteral","src":"415:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"408:3:17","nodeType":"YulIdentifier","src":"408:3:17"},"nativeSrc":"408:10:17","nodeType":"YulFunctionCall","src":"408:10:17"},"variableNames":[{"name":"i","nativeSrc":"403:1:17","nodeType":"YulIdentifier","src":"403:1:17"}]}]},"pre":{"nativeSrc":"383:3:17","nodeType":"YulBlock","src":"383:3:17","statements":[]},"src":"379:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"512:3:17","nodeType":"YulIdentifier","src":"512:3:17"},{"name":"length","nativeSrc":"517:6:17","nodeType":"YulIdentifier","src":"517:6:17"}],"functionName":{"name":"add","nativeSrc":"508:3:17","nodeType":"YulIdentifier","src":"508:3:17"},"nativeSrc":"508:16:17","nodeType":"YulFunctionCall","src":"508:16:17"},{"kind":"number","nativeSrc":"526:1:17","nodeType":"YulLiteral","src":"526:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"501:6:17","nodeType":"YulIdentifier","src":"501:6:17"},"nativeSrc":"501:27:17","nodeType":"YulFunctionCall","src":"501:27:17"},"nativeSrc":"501:27:17","nodeType":"YulExpressionStatement","src":"501:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:248:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:17","nodeType":"YulTypedName","src":"331:3:17","type":""},{"name":"dst","nativeSrc":"336:3:17","nodeType":"YulTypedName","src":"336:3:17","type":""},{"name":"length","nativeSrc":"341:6:17","nodeType":"YulTypedName","src":"341:6:17","type":""}],"src":"287:248:17"},{"body":{"nativeSrc":"589:54:17","nodeType":"YulBlock","src":"589:54:17","statements":[{"nativeSrc":"599:38:17","nodeType":"YulAssignment","src":"599:38:17","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"617:5:17","nodeType":"YulIdentifier","src":"617:5:17"},{"kind":"number","nativeSrc":"624:2:17","nodeType":"YulLiteral","src":"624:2:17","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"613:3:17","nodeType":"YulIdentifier","src":"613:3:17"},"nativeSrc":"613:14:17","nodeType":"YulFunctionCall","src":"613:14:17"},{"arguments":[{"kind":"number","nativeSrc":"633:2:17","nodeType":"YulLiteral","src":"633:2:17","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"629:3:17","nodeType":"YulIdentifier","src":"629:3:17"},"nativeSrc":"629:7:17","nodeType":"YulFunctionCall","src":"629:7:17"}],"functionName":{"name":"and","nativeSrc":"609:3:17","nodeType":"YulIdentifier","src":"609:3:17"},"nativeSrc":"609:28:17","nodeType":"YulFunctionCall","src":"609:28:17"},"variableNames":[{"name":"result","nativeSrc":"599:6:17","nodeType":"YulIdentifier","src":"599:6:17"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"541:102:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"572:5:17","nodeType":"YulTypedName","src":"572:5:17","type":""}],"returnVariables":[{"name":"result","nativeSrc":"582:6:17","nodeType":"YulTypedName","src":"582:6:17","type":""}],"src":"541:102:17"},{"body":{"nativeSrc":"741:285:17","nodeType":"YulBlock","src":"741:285:17","statements":[{"nativeSrc":"751:53:17","nodeType":"YulVariableDeclaration","src":"751:53:17","value":{"arguments":[{"name":"value","nativeSrc":"798:5:17","nodeType":"YulIdentifier","src":"798:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"765:32:17","nodeType":"YulIdentifier","src":"765:32:17"},"nativeSrc":"765:39:17","nodeType":"YulFunctionCall","src":"765:39:17"},"variables":[{"name":"length","nativeSrc":"755:6:17","nodeType":"YulTypedName","src":"755:6:17","type":""}]},{"nativeSrc":"813:78:17","nodeType":"YulAssignment","src":"813:78:17","value":{"arguments":[{"name":"pos","nativeSrc":"879:3:17","nodeType":"YulIdentifier","src":"879:3:17"},{"name":"length","nativeSrc":"884:6:17","nodeType":"YulIdentifier","src":"884:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"820:58:17","nodeType":"YulIdentifier","src":"820:58:17"},"nativeSrc":"820:71:17","nodeType":"YulFunctionCall","src":"820:71:17"},"variableNames":[{"name":"pos","nativeSrc":"813:3:17","nodeType":"YulIdentifier","src":"813:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"939:5:17","nodeType":"YulIdentifier","src":"939:5:17"},{"kind":"number","nativeSrc":"946:4:17","nodeType":"YulLiteral","src":"946:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"935:3:17","nodeType":"YulIdentifier","src":"935:3:17"},"nativeSrc":"935:16:17","nodeType":"YulFunctionCall","src":"935:16:17"},{"name":"pos","nativeSrc":"953:3:17","nodeType":"YulIdentifier","src":"953:3:17"},{"name":"length","nativeSrc":"958:6:17","nodeType":"YulIdentifier","src":"958:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"900:34:17","nodeType":"YulIdentifier","src":"900:34:17"},"nativeSrc":"900:65:17","nodeType":"YulFunctionCall","src":"900:65:17"},"nativeSrc":"900:65:17","nodeType":"YulExpressionStatement","src":"900:65:17"},{"nativeSrc":"974:46:17","nodeType":"YulAssignment","src":"974:46:17","value":{"arguments":[{"name":"pos","nativeSrc":"985:3:17","nodeType":"YulIdentifier","src":"985:3:17"},{"arguments":[{"name":"length","nativeSrc":"1012:6:17","nodeType":"YulIdentifier","src":"1012:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"990:21:17","nodeType":"YulIdentifier","src":"990:21:17"},"nativeSrc":"990:29:17","nodeType":"YulFunctionCall","src":"990:29:17"}],"functionName":{"name":"add","nativeSrc":"981:3:17","nodeType":"YulIdentifier","src":"981:3:17"},"nativeSrc":"981:39:17","nodeType":"YulFunctionCall","src":"981:39:17"},"variableNames":[{"name":"end","nativeSrc":"974:3:17","nodeType":"YulIdentifier","src":"974:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"649:377:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"722:5:17","nodeType":"YulTypedName","src":"722:5:17","type":""},{"name":"pos","nativeSrc":"729:3:17","nodeType":"YulTypedName","src":"729:3:17","type":""}],"returnVariables":[{"name":"end","nativeSrc":"737:3:17","nodeType":"YulTypedName","src":"737:3:17","type":""}],"src":"649:377:17"},{"body":{"nativeSrc":"1150:195:17","nodeType":"YulBlock","src":"1150:195:17","statements":[{"nativeSrc":"1160:26:17","nodeType":"YulAssignment","src":"1160:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"1172:9:17","nodeType":"YulIdentifier","src":"1172:9:17"},{"kind":"number","nativeSrc":"1183:2:17","nodeType":"YulLiteral","src":"1183:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1168:3:17","nodeType":"YulIdentifier","src":"1168:3:17"},"nativeSrc":"1168:18:17","nodeType":"YulFunctionCall","src":"1168:18:17"},"variableNames":[{"name":"tail","nativeSrc":"1160:4:17","nodeType":"YulIdentifier","src":"1160:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1207:9:17","nodeType":"YulIdentifier","src":"1207:9:17"},{"kind":"number","nativeSrc":"1218:1:17","nodeType":"YulLiteral","src":"1218:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1203:3:17","nodeType":"YulIdentifier","src":"1203:3:17"},"nativeSrc":"1203:17:17","nodeType":"YulFunctionCall","src":"1203:17:17"},{"arguments":[{"name":"tail","nativeSrc":"1226:4:17","nodeType":"YulIdentifier","src":"1226:4:17"},{"name":"headStart","nativeSrc":"1232:9:17","nodeType":"YulIdentifier","src":"1232:9:17"}],"functionName":{"name":"sub","nativeSrc":"1222:3:17","nodeType":"YulIdentifier","src":"1222:3:17"},"nativeSrc":"1222:20:17","nodeType":"YulFunctionCall","src":"1222:20:17"}],"functionName":{"name":"mstore","nativeSrc":"1196:6:17","nodeType":"YulIdentifier","src":"1196:6:17"},"nativeSrc":"1196:47:17","nodeType":"YulFunctionCall","src":"1196:47:17"},"nativeSrc":"1196:47:17","nodeType":"YulExpressionStatement","src":"1196:47:17"},{"nativeSrc":"1252:86:17","nodeType":"YulAssignment","src":"1252:86:17","value":{"arguments":[{"name":"value0","nativeSrc":"1324:6:17","nodeType":"YulIdentifier","src":"1324:6:17"},{"name":"tail","nativeSrc":"1333:4:17","nodeType":"YulIdentifier","src":"1333:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1260:63:17","nodeType":"YulIdentifier","src":"1260:63:17"},"nativeSrc":"1260:78:17","nodeType":"YulFunctionCall","src":"1260:78:17"},"variableNames":[{"name":"tail","nativeSrc":"1252:4:17","nodeType":"YulIdentifier","src":"1252:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1032:313:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1122:9:17","nodeType":"YulTypedName","src":"1122:9:17","type":""},{"name":"value0","nativeSrc":"1134:6:17","nodeType":"YulTypedName","src":"1134:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1145:4:17","nodeType":"YulTypedName","src":"1145:4:17","type":""}],"src":"1032:313:17"},{"body":{"nativeSrc":"1391:35:17","nodeType":"YulBlock","src":"1391:35:17","statements":[{"nativeSrc":"1401:19:17","nodeType":"YulAssignment","src":"1401:19:17","value":{"arguments":[{"kind":"number","nativeSrc":"1417:2:17","nodeType":"YulLiteral","src":"1417:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1411:5:17","nodeType":"YulIdentifier","src":"1411:5:17"},"nativeSrc":"1411:9:17","nodeType":"YulFunctionCall","src":"1411:9:17"},"variableNames":[{"name":"memPtr","nativeSrc":"1401:6:17","nodeType":"YulIdentifier","src":"1401:6:17"}]}]},"name":"allocate_unbounded","nativeSrc":"1351:75:17","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1384:6:17","nodeType":"YulTypedName","src":"1384:6:17","type":""}],"src":"1351:75:17"},{"body":{"nativeSrc":"1521:28:17","nodeType":"YulBlock","src":"1521:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1538:1:17","nodeType":"YulLiteral","src":"1538:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"1541:1:17","nodeType":"YulLiteral","src":"1541:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1531:6:17","nodeType":"YulIdentifier","src":"1531:6:17"},"nativeSrc":"1531:12:17","nodeType":"YulFunctionCall","src":"1531:12:17"},"nativeSrc":"1531:12:17","nodeType":"YulExpressionStatement","src":"1531:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1432:117:17","nodeType":"YulFunctionDefinition","src":"1432:117:17"},{"body":{"nativeSrc":"1644:28:17","nodeType":"YulBlock","src":"1644:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1661:1:17","nodeType":"YulLiteral","src":"1661:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"1664:1:17","nodeType":"YulLiteral","src":"1664:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1654:6:17","nodeType":"YulIdentifier","src":"1654:6:17"},"nativeSrc":"1654:12:17","nodeType":"YulFunctionCall","src":"1654:12:17"},"nativeSrc":"1654:12:17","nodeType":"YulExpressionStatement","src":"1654:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1555:117:17","nodeType":"YulFunctionDefinition","src":"1555:117:17"},{"body":{"nativeSrc":"1723:81:17","nodeType":"YulBlock","src":"1723:81:17","statements":[{"nativeSrc":"1733:65:17","nodeType":"YulAssignment","src":"1733:65:17","value":{"arguments":[{"name":"value","nativeSrc":"1748:5:17","nodeType":"YulIdentifier","src":"1748:5:17"},{"kind":"number","nativeSrc":"1755:42:17","nodeType":"YulLiteral","src":"1755:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1744:3:17","nodeType":"YulIdentifier","src":"1744:3:17"},"nativeSrc":"1744:54:17","nodeType":"YulFunctionCall","src":"1744:54:17"},"variableNames":[{"name":"cleaned","nativeSrc":"1733:7:17","nodeType":"YulIdentifier","src":"1733:7:17"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1678:126:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1705:5:17","nodeType":"YulTypedName","src":"1705:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1715:7:17","nodeType":"YulTypedName","src":"1715:7:17","type":""}],"src":"1678:126:17"},{"body":{"nativeSrc":"1855:51:17","nodeType":"YulBlock","src":"1855:51:17","statements":[{"nativeSrc":"1865:35:17","nodeType":"YulAssignment","src":"1865:35:17","value":{"arguments":[{"name":"value","nativeSrc":"1894:5:17","nodeType":"YulIdentifier","src":"1894:5:17"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1876:17:17","nodeType":"YulIdentifier","src":"1876:17:17"},"nativeSrc":"1876:24:17","nodeType":"YulFunctionCall","src":"1876:24:17"},"variableNames":[{"name":"cleaned","nativeSrc":"1865:7:17","nodeType":"YulIdentifier","src":"1865:7:17"}]}]},"name":"cleanup_t_address","nativeSrc":"1810:96:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1837:5:17","nodeType":"YulTypedName","src":"1837:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1847:7:17","nodeType":"YulTypedName","src":"1847:7:17","type":""}],"src":"1810:96:17"},{"body":{"nativeSrc":"1955:79:17","nodeType":"YulBlock","src":"1955:79:17","statements":[{"body":{"nativeSrc":"2012:16:17","nodeType":"YulBlock","src":"2012:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2021:1:17","nodeType":"YulLiteral","src":"2021:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"2024:1:17","nodeType":"YulLiteral","src":"2024:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2014:6:17","nodeType":"YulIdentifier","src":"2014:6:17"},"nativeSrc":"2014:12:17","nodeType":"YulFunctionCall","src":"2014:12:17"},"nativeSrc":"2014:12:17","nodeType":"YulExpressionStatement","src":"2014:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1978:5:17","nodeType":"YulIdentifier","src":"1978:5:17"},{"arguments":[{"name":"value","nativeSrc":"2003:5:17","nodeType":"YulIdentifier","src":"2003:5:17"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1985:17:17","nodeType":"YulIdentifier","src":"1985:17:17"},"nativeSrc":"1985:24:17","nodeType":"YulFunctionCall","src":"1985:24:17"}],"functionName":{"name":"eq","nativeSrc":"1975:2:17","nodeType":"YulIdentifier","src":"1975:2:17"},"nativeSrc":"1975:35:17","nodeType":"YulFunctionCall","src":"1975:35:17"}],"functionName":{"name":"iszero","nativeSrc":"1968:6:17","nodeType":"YulIdentifier","src":"1968:6:17"},"nativeSrc":"1968:43:17","nodeType":"YulFunctionCall","src":"1968:43:17"},"nativeSrc":"1965:63:17","nodeType":"YulIf","src":"1965:63:17"}]},"name":"validator_revert_t_address","nativeSrc":"1912:122:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1948:5:17","nodeType":"YulTypedName","src":"1948:5:17","type":""}],"src":"1912:122:17"},{"body":{"nativeSrc":"2092:87:17","nodeType":"YulBlock","src":"2092:87:17","statements":[{"nativeSrc":"2102:29:17","nodeType":"YulAssignment","src":"2102:29:17","value":{"arguments":[{"name":"offset","nativeSrc":"2124:6:17","nodeType":"YulIdentifier","src":"2124:6:17"}],"functionName":{"name":"calldataload","nativeSrc":"2111:12:17","nodeType":"YulIdentifier","src":"2111:12:17"},"nativeSrc":"2111:20:17","nodeType":"YulFunctionCall","src":"2111:20:17"},"variableNames":[{"name":"value","nativeSrc":"2102:5:17","nodeType":"YulIdentifier","src":"2102:5:17"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2167:5:17","nodeType":"YulIdentifier","src":"2167:5:17"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2140:26:17","nodeType":"YulIdentifier","src":"2140:26:17"},"nativeSrc":"2140:33:17","nodeType":"YulFunctionCall","src":"2140:33:17"},"nativeSrc":"2140:33:17","nodeType":"YulExpressionStatement","src":"2140:33:17"}]},"name":"abi_decode_t_address","nativeSrc":"2040:139:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2070:6:17","nodeType":"YulTypedName","src":"2070:6:17","type":""},{"name":"end","nativeSrc":"2078:3:17","nodeType":"YulTypedName","src":"2078:3:17","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2086:5:17","nodeType":"YulTypedName","src":"2086:5:17","type":""}],"src":"2040:139:17"},{"body":{"nativeSrc":"2230:32:17","nodeType":"YulBlock","src":"2230:32:17","statements":[{"nativeSrc":"2240:16:17","nodeType":"YulAssignment","src":"2240:16:17","value":{"name":"value","nativeSrc":"2251:5:17","nodeType":"YulIdentifier","src":"2251:5:17"},"variableNames":[{"name":"cleaned","nativeSrc":"2240:7:17","nodeType":"YulIdentifier","src":"2240:7:17"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2185:77:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2212:5:17","nodeType":"YulTypedName","src":"2212:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2222:7:17","nodeType":"YulTypedName","src":"2222:7:17","type":""}],"src":"2185:77:17"},{"body":{"nativeSrc":"2311:79:17","nodeType":"YulBlock","src":"2311:79:17","statements":[{"body":{"nativeSrc":"2368:16:17","nodeType":"YulBlock","src":"2368:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2377:1:17","nodeType":"YulLiteral","src":"2377:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"2380:1:17","nodeType":"YulLiteral","src":"2380:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2370:6:17","nodeType":"YulIdentifier","src":"2370:6:17"},"nativeSrc":"2370:12:17","nodeType":"YulFunctionCall","src":"2370:12:17"},"nativeSrc":"2370:12:17","nodeType":"YulExpressionStatement","src":"2370:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2334:5:17","nodeType":"YulIdentifier","src":"2334:5:17"},{"arguments":[{"name":"value","nativeSrc":"2359:5:17","nodeType":"YulIdentifier","src":"2359:5:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2341:17:17","nodeType":"YulIdentifier","src":"2341:17:17"},"nativeSrc":"2341:24:17","nodeType":"YulFunctionCall","src":"2341:24:17"}],"functionName":{"name":"eq","nativeSrc":"2331:2:17","nodeType":"YulIdentifier","src":"2331:2:17"},"nativeSrc":"2331:35:17","nodeType":"YulFunctionCall","src":"2331:35:17"}],"functionName":{"name":"iszero","nativeSrc":"2324:6:17","nodeType":"YulIdentifier","src":"2324:6:17"},"nativeSrc":"2324:43:17","nodeType":"YulFunctionCall","src":"2324:43:17"},"nativeSrc":"2321:63:17","nodeType":"YulIf","src":"2321:63:17"}]},"name":"validator_revert_t_uint256","nativeSrc":"2268:122:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2304:5:17","nodeType":"YulTypedName","src":"2304:5:17","type":""}],"src":"2268:122:17"},{"body":{"nativeSrc":"2448:87:17","nodeType":"YulBlock","src":"2448:87:17","statements":[{"nativeSrc":"2458:29:17","nodeType":"YulAssignment","src":"2458:29:17","value":{"arguments":[{"name":"offset","nativeSrc":"2480:6:17","nodeType":"YulIdentifier","src":"2480:6:17"}],"functionName":{"name":"calldataload","nativeSrc":"2467:12:17","nodeType":"YulIdentifier","src":"2467:12:17"},"nativeSrc":"2467:20:17","nodeType":"YulFunctionCall","src":"2467:20:17"},"variableNames":[{"name":"value","nativeSrc":"2458:5:17","nodeType":"YulIdentifier","src":"2458:5:17"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2523:5:17","nodeType":"YulIdentifier","src":"2523:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2496:26:17","nodeType":"YulIdentifier","src":"2496:26:17"},"nativeSrc":"2496:33:17","nodeType":"YulFunctionCall","src":"2496:33:17"},"nativeSrc":"2496:33:17","nodeType":"YulExpressionStatement","src":"2496:33:17"}]},"name":"abi_decode_t_uint256","nativeSrc":"2396:139:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2426:6:17","nodeType":"YulTypedName","src":"2426:6:17","type":""},{"name":"end","nativeSrc":"2434:3:17","nodeType":"YulTypedName","src":"2434:3:17","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2442:5:17","nodeType":"YulTypedName","src":"2442:5:17","type":""}],"src":"2396:139:17"},{"body":{"nativeSrc":"2624:391:17","nodeType":"YulBlock","src":"2624:391:17","statements":[{"body":{"nativeSrc":"2670:83:17","nodeType":"YulBlock","src":"2670:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2672:77:17","nodeType":"YulIdentifier","src":"2672:77:17"},"nativeSrc":"2672:79:17","nodeType":"YulFunctionCall","src":"2672:79:17"},"nativeSrc":"2672:79:17","nodeType":"YulExpressionStatement","src":"2672:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2645:7:17","nodeType":"YulIdentifier","src":"2645:7:17"},{"name":"headStart","nativeSrc":"2654:9:17","nodeType":"YulIdentifier","src":"2654:9:17"}],"functionName":{"name":"sub","nativeSrc":"2641:3:17","nodeType":"YulIdentifier","src":"2641:3:17"},"nativeSrc":"2641:23:17","nodeType":"YulFunctionCall","src":"2641:23:17"},{"kind":"number","nativeSrc":"2666:2:17","nodeType":"YulLiteral","src":"2666:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2637:3:17","nodeType":"YulIdentifier","src":"2637:3:17"},"nativeSrc":"2637:32:17","nodeType":"YulFunctionCall","src":"2637:32:17"},"nativeSrc":"2634:119:17","nodeType":"YulIf","src":"2634:119:17"},{"nativeSrc":"2763:117:17","nodeType":"YulBlock","src":"2763:117:17","statements":[{"nativeSrc":"2778:15:17","nodeType":"YulVariableDeclaration","src":"2778:15:17","value":{"kind":"number","nativeSrc":"2792:1:17","nodeType":"YulLiteral","src":"2792:1:17","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2782:6:17","nodeType":"YulTypedName","src":"2782:6:17","type":""}]},{"nativeSrc":"2807:63:17","nodeType":"YulAssignment","src":"2807:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2842:9:17","nodeType":"YulIdentifier","src":"2842:9:17"},{"name":"offset","nativeSrc":"2853:6:17","nodeType":"YulIdentifier","src":"2853:6:17"}],"functionName":{"name":"add","nativeSrc":"2838:3:17","nodeType":"YulIdentifier","src":"2838:3:17"},"nativeSrc":"2838:22:17","nodeType":"YulFunctionCall","src":"2838:22:17"},{"name":"dataEnd","nativeSrc":"2862:7:17","nodeType":"YulIdentifier","src":"2862:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2817:20:17","nodeType":"YulIdentifier","src":"2817:20:17"},"nativeSrc":"2817:53:17","nodeType":"YulFunctionCall","src":"2817:53:17"},"variableNames":[{"name":"value0","nativeSrc":"2807:6:17","nodeType":"YulIdentifier","src":"2807:6:17"}]}]},{"nativeSrc":"2890:118:17","nodeType":"YulBlock","src":"2890:118:17","statements":[{"nativeSrc":"2905:16:17","nodeType":"YulVariableDeclaration","src":"2905:16:17","value":{"kind":"number","nativeSrc":"2919:2:17","nodeType":"YulLiteral","src":"2919:2:17","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2909:6:17","nodeType":"YulTypedName","src":"2909:6:17","type":""}]},{"nativeSrc":"2935:63:17","nodeType":"YulAssignment","src":"2935:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2970:9:17","nodeType":"YulIdentifier","src":"2970:9:17"},{"name":"offset","nativeSrc":"2981:6:17","nodeType":"YulIdentifier","src":"2981:6:17"}],"functionName":{"name":"add","nativeSrc":"2966:3:17","nodeType":"YulIdentifier","src":"2966:3:17"},"nativeSrc":"2966:22:17","nodeType":"YulFunctionCall","src":"2966:22:17"},{"name":"dataEnd","nativeSrc":"2990:7:17","nodeType":"YulIdentifier","src":"2990:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2945:20:17","nodeType":"YulIdentifier","src":"2945:20:17"},"nativeSrc":"2945:53:17","nodeType":"YulFunctionCall","src":"2945:53:17"},"variableNames":[{"name":"value1","nativeSrc":"2935:6:17","nodeType":"YulIdentifier","src":"2935:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2541:474:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2586:9:17","nodeType":"YulTypedName","src":"2586:9:17","type":""},{"name":"dataEnd","nativeSrc":"2597:7:17","nodeType":"YulTypedName","src":"2597:7:17","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2609:6:17","nodeType":"YulTypedName","src":"2609:6:17","type":""},{"name":"value1","nativeSrc":"2617:6:17","nodeType":"YulTypedName","src":"2617:6:17","type":""}],"src":"2541:474:17"},{"body":{"nativeSrc":"3063:48:17","nodeType":"YulBlock","src":"3063:48:17","statements":[{"nativeSrc":"3073:32:17","nodeType":"YulAssignment","src":"3073:32:17","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3098:5:17","nodeType":"YulIdentifier","src":"3098:5:17"}],"functionName":{"name":"iszero","nativeSrc":"3091:6:17","nodeType":"YulIdentifier","src":"3091:6:17"},"nativeSrc":"3091:13:17","nodeType":"YulFunctionCall","src":"3091:13:17"}],"functionName":{"name":"iszero","nativeSrc":"3084:6:17","nodeType":"YulIdentifier","src":"3084:6:17"},"nativeSrc":"3084:21:17","nodeType":"YulFunctionCall","src":"3084:21:17"},"variableNames":[{"name":"cleaned","nativeSrc":"3073:7:17","nodeType":"YulIdentifier","src":"3073:7:17"}]}]},"name":"cleanup_t_bool","nativeSrc":"3021:90:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3045:5:17","nodeType":"YulTypedName","src":"3045:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3055:7:17","nodeType":"YulTypedName","src":"3055:7:17","type":""}],"src":"3021:90:17"},{"body":{"nativeSrc":"3176:50:17","nodeType":"YulBlock","src":"3176:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3193:3:17","nodeType":"YulIdentifier","src":"3193:3:17"},{"arguments":[{"name":"value","nativeSrc":"3213:5:17","nodeType":"YulIdentifier","src":"3213:5:17"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3198:14:17","nodeType":"YulIdentifier","src":"3198:14:17"},"nativeSrc":"3198:21:17","nodeType":"YulFunctionCall","src":"3198:21:17"}],"functionName":{"name":"mstore","nativeSrc":"3186:6:17","nodeType":"YulIdentifier","src":"3186:6:17"},"nativeSrc":"3186:34:17","nodeType":"YulFunctionCall","src":"3186:34:17"},"nativeSrc":"3186:34:17","nodeType":"YulExpressionStatement","src":"3186:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3117:109:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3164:5:17","nodeType":"YulTypedName","src":"3164:5:17","type":""},{"name":"pos","nativeSrc":"3171:3:17","nodeType":"YulTypedName","src":"3171:3:17","type":""}],"src":"3117:109:17"},{"body":{"nativeSrc":"3324:118:17","nodeType":"YulBlock","src":"3324:118:17","statements":[{"nativeSrc":"3334:26:17","nodeType":"YulAssignment","src":"3334:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"3346:9:17","nodeType":"YulIdentifier","src":"3346:9:17"},{"kind":"number","nativeSrc":"3357:2:17","nodeType":"YulLiteral","src":"3357:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3342:3:17","nodeType":"YulIdentifier","src":"3342:3:17"},"nativeSrc":"3342:18:17","nodeType":"YulFunctionCall","src":"3342:18:17"},"variableNames":[{"name":"tail","nativeSrc":"3334:4:17","nodeType":"YulIdentifier","src":"3334:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3408:6:17","nodeType":"YulIdentifier","src":"3408:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"3421:9:17","nodeType":"YulIdentifier","src":"3421:9:17"},{"kind":"number","nativeSrc":"3432:1:17","nodeType":"YulLiteral","src":"3432:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3417:3:17","nodeType":"YulIdentifier","src":"3417:3:17"},"nativeSrc":"3417:17:17","nodeType":"YulFunctionCall","src":"3417:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3370:37:17","nodeType":"YulIdentifier","src":"3370:37:17"},"nativeSrc":"3370:65:17","nodeType":"YulFunctionCall","src":"3370:65:17"},"nativeSrc":"3370:65:17","nodeType":"YulExpressionStatement","src":"3370:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3232:210:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3296:9:17","nodeType":"YulTypedName","src":"3296:9:17","type":""},{"name":"value0","nativeSrc":"3308:6:17","nodeType":"YulTypedName","src":"3308:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3319:4:17","nodeType":"YulTypedName","src":"3319:4:17","type":""}],"src":"3232:210:17"},{"body":{"nativeSrc":"3513:53:17","nodeType":"YulBlock","src":"3513:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3530:3:17","nodeType":"YulIdentifier","src":"3530:3:17"},{"arguments":[{"name":"value","nativeSrc":"3553:5:17","nodeType":"YulIdentifier","src":"3553:5:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3535:17:17","nodeType":"YulIdentifier","src":"3535:17:17"},"nativeSrc":"3535:24:17","nodeType":"YulFunctionCall","src":"3535:24:17"}],"functionName":{"name":"mstore","nativeSrc":"3523:6:17","nodeType":"YulIdentifier","src":"3523:6:17"},"nativeSrc":"3523:37:17","nodeType":"YulFunctionCall","src":"3523:37:17"},"nativeSrc":"3523:37:17","nodeType":"YulExpressionStatement","src":"3523:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3448:118:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3501:5:17","nodeType":"YulTypedName","src":"3501:5:17","type":""},{"name":"pos","nativeSrc":"3508:3:17","nodeType":"YulTypedName","src":"3508:3:17","type":""}],"src":"3448:118:17"},{"body":{"nativeSrc":"3670:124:17","nodeType":"YulBlock","src":"3670:124:17","statements":[{"nativeSrc":"3680:26:17","nodeType":"YulAssignment","src":"3680:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"3692:9:17","nodeType":"YulIdentifier","src":"3692:9:17"},{"kind":"number","nativeSrc":"3703:2:17","nodeType":"YulLiteral","src":"3703:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3688:3:17","nodeType":"YulIdentifier","src":"3688:3:17"},"nativeSrc":"3688:18:17","nodeType":"YulFunctionCall","src":"3688:18:17"},"variableNames":[{"name":"tail","nativeSrc":"3680:4:17","nodeType":"YulIdentifier","src":"3680:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3760:6:17","nodeType":"YulIdentifier","src":"3760:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"3773:9:17","nodeType":"YulIdentifier","src":"3773:9:17"},{"kind":"number","nativeSrc":"3784:1:17","nodeType":"YulLiteral","src":"3784:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3769:3:17","nodeType":"YulIdentifier","src":"3769:3:17"},"nativeSrc":"3769:17:17","nodeType":"YulFunctionCall","src":"3769:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3716:43:17","nodeType":"YulIdentifier","src":"3716:43:17"},"nativeSrc":"3716:71:17","nodeType":"YulFunctionCall","src":"3716:71:17"},"nativeSrc":"3716:71:17","nodeType":"YulExpressionStatement","src":"3716:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3572:222:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3642:9:17","nodeType":"YulTypedName","src":"3642:9:17","type":""},{"name":"value0","nativeSrc":"3654:6:17","nodeType":"YulTypedName","src":"3654:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3665:4:17","nodeType":"YulTypedName","src":"3665:4:17","type":""}],"src":"3572:222:17"},{"body":{"nativeSrc":"3900:519:17","nodeType":"YulBlock","src":"3900:519:17","statements":[{"body":{"nativeSrc":"3946:83:17","nodeType":"YulBlock","src":"3946:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3948:77:17","nodeType":"YulIdentifier","src":"3948:77:17"},"nativeSrc":"3948:79:17","nodeType":"YulFunctionCall","src":"3948:79:17"},"nativeSrc":"3948:79:17","nodeType":"YulExpressionStatement","src":"3948:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3921:7:17","nodeType":"YulIdentifier","src":"3921:7:17"},{"name":"headStart","nativeSrc":"3930:9:17","nodeType":"YulIdentifier","src":"3930:9:17"}],"functionName":{"name":"sub","nativeSrc":"3917:3:17","nodeType":"YulIdentifier","src":"3917:3:17"},"nativeSrc":"3917:23:17","nodeType":"YulFunctionCall","src":"3917:23:17"},{"kind":"number","nativeSrc":"3942:2:17","nodeType":"YulLiteral","src":"3942:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3913:3:17","nodeType":"YulIdentifier","src":"3913:3:17"},"nativeSrc":"3913:32:17","nodeType":"YulFunctionCall","src":"3913:32:17"},"nativeSrc":"3910:119:17","nodeType":"YulIf","src":"3910:119:17"},{"nativeSrc":"4039:117:17","nodeType":"YulBlock","src":"4039:117:17","statements":[{"nativeSrc":"4054:15:17","nodeType":"YulVariableDeclaration","src":"4054:15:17","value":{"kind":"number","nativeSrc":"4068:1:17","nodeType":"YulLiteral","src":"4068:1:17","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4058:6:17","nodeType":"YulTypedName","src":"4058:6:17","type":""}]},{"nativeSrc":"4083:63:17","nodeType":"YulAssignment","src":"4083:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4118:9:17","nodeType":"YulIdentifier","src":"4118:9:17"},{"name":"offset","nativeSrc":"4129:6:17","nodeType":"YulIdentifier","src":"4129:6:17"}],"functionName":{"name":"add","nativeSrc":"4114:3:17","nodeType":"YulIdentifier","src":"4114:3:17"},"nativeSrc":"4114:22:17","nodeType":"YulFunctionCall","src":"4114:22:17"},{"name":"dataEnd","nativeSrc":"4138:7:17","nodeType":"YulIdentifier","src":"4138:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4093:20:17","nodeType":"YulIdentifier","src":"4093:20:17"},"nativeSrc":"4093:53:17","nodeType":"YulFunctionCall","src":"4093:53:17"},"variableNames":[{"name":"value0","nativeSrc":"4083:6:17","nodeType":"YulIdentifier","src":"4083:6:17"}]}]},{"nativeSrc":"4166:118:17","nodeType":"YulBlock","src":"4166:118:17","statements":[{"nativeSrc":"4181:16:17","nodeType":"YulVariableDeclaration","src":"4181:16:17","value":{"kind":"number","nativeSrc":"4195:2:17","nodeType":"YulLiteral","src":"4195:2:17","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4185:6:17","nodeType":"YulTypedName","src":"4185:6:17","type":""}]},{"nativeSrc":"4211:63:17","nodeType":"YulAssignment","src":"4211:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4246:9:17","nodeType":"YulIdentifier","src":"4246:9:17"},{"name":"offset","nativeSrc":"4257:6:17","nodeType":"YulIdentifier","src":"4257:6:17"}],"functionName":{"name":"add","nativeSrc":"4242:3:17","nodeType":"YulIdentifier","src":"4242:3:17"},"nativeSrc":"4242:22:17","nodeType":"YulFunctionCall","src":"4242:22:17"},{"name":"dataEnd","nativeSrc":"4266:7:17","nodeType":"YulIdentifier","src":"4266:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4221:20:17","nodeType":"YulIdentifier","src":"4221:20:17"},"nativeSrc":"4221:53:17","nodeType":"YulFunctionCall","src":"4221:53:17"},"variableNames":[{"name":"value1","nativeSrc":"4211:6:17","nodeType":"YulIdentifier","src":"4211:6:17"}]}]},{"nativeSrc":"4294:118:17","nodeType":"YulBlock","src":"4294:118:17","statements":[{"nativeSrc":"4309:16:17","nodeType":"YulVariableDeclaration","src":"4309:16:17","value":{"kind":"number","nativeSrc":"4323:2:17","nodeType":"YulLiteral","src":"4323:2:17","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4313:6:17","nodeType":"YulTypedName","src":"4313:6:17","type":""}]},{"nativeSrc":"4339:63:17","nodeType":"YulAssignment","src":"4339:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4374:9:17","nodeType":"YulIdentifier","src":"4374:9:17"},{"name":"offset","nativeSrc":"4385:6:17","nodeType":"YulIdentifier","src":"4385:6:17"}],"functionName":{"name":"add","nativeSrc":"4370:3:17","nodeType":"YulIdentifier","src":"4370:3:17"},"nativeSrc":"4370:22:17","nodeType":"YulFunctionCall","src":"4370:22:17"},{"name":"dataEnd","nativeSrc":"4394:7:17","nodeType":"YulIdentifier","src":"4394:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4349:20:17","nodeType":"YulIdentifier","src":"4349:20:17"},"nativeSrc":"4349:53:17","nodeType":"YulFunctionCall","src":"4349:53:17"},"variableNames":[{"name":"value2","nativeSrc":"4339:6:17","nodeType":"YulIdentifier","src":"4339:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3800:619:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3854:9:17","nodeType":"YulTypedName","src":"3854:9:17","type":""},{"name":"dataEnd","nativeSrc":"3865:7:17","nodeType":"YulTypedName","src":"3865:7:17","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3877:6:17","nodeType":"YulTypedName","src":"3877:6:17","type":""},{"name":"value1","nativeSrc":"3885:6:17","nodeType":"YulTypedName","src":"3885:6:17","type":""},{"name":"value2","nativeSrc":"3893:6:17","nodeType":"YulTypedName","src":"3893:6:17","type":""}],"src":"3800:619:17"},{"body":{"nativeSrc":"4468:43:17","nodeType":"YulBlock","src":"4468:43:17","statements":[{"nativeSrc":"4478:27:17","nodeType":"YulAssignment","src":"4478:27:17","value":{"arguments":[{"name":"value","nativeSrc":"4493:5:17","nodeType":"YulIdentifier","src":"4493:5:17"},{"kind":"number","nativeSrc":"4500:4:17","nodeType":"YulLiteral","src":"4500:4:17","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4489:3:17","nodeType":"YulIdentifier","src":"4489:3:17"},"nativeSrc":"4489:16:17","nodeType":"YulFunctionCall","src":"4489:16:17"},"variableNames":[{"name":"cleaned","nativeSrc":"4478:7:17","nodeType":"YulIdentifier","src":"4478:7:17"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4425:86:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4450:5:17","nodeType":"YulTypedName","src":"4450:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4460:7:17","nodeType":"YulTypedName","src":"4460:7:17","type":""}],"src":"4425:86:17"},{"body":{"nativeSrc":"4578:51:17","nodeType":"YulBlock","src":"4578:51:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4595:3:17","nodeType":"YulIdentifier","src":"4595:3:17"},{"arguments":[{"name":"value","nativeSrc":"4616:5:17","nodeType":"YulIdentifier","src":"4616:5:17"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4600:15:17","nodeType":"YulIdentifier","src":"4600:15:17"},"nativeSrc":"4600:22:17","nodeType":"YulFunctionCall","src":"4600:22:17"}],"functionName":{"name":"mstore","nativeSrc":"4588:6:17","nodeType":"YulIdentifier","src":"4588:6:17"},"nativeSrc":"4588:35:17","nodeType":"YulFunctionCall","src":"4588:35:17"},"nativeSrc":"4588:35:17","nodeType":"YulExpressionStatement","src":"4588:35:17"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4517:112:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4566:5:17","nodeType":"YulTypedName","src":"4566:5:17","type":""},{"name":"pos","nativeSrc":"4573:3:17","nodeType":"YulTypedName","src":"4573:3:17","type":""}],"src":"4517:112:17"},{"body":{"nativeSrc":"4729:120:17","nodeType":"YulBlock","src":"4729:120:17","statements":[{"nativeSrc":"4739:26:17","nodeType":"YulAssignment","src":"4739:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"4751:9:17","nodeType":"YulIdentifier","src":"4751:9:17"},{"kind":"number","nativeSrc":"4762:2:17","nodeType":"YulLiteral","src":"4762:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4747:3:17","nodeType":"YulIdentifier","src":"4747:3:17"},"nativeSrc":"4747:18:17","nodeType":"YulFunctionCall","src":"4747:18:17"},"variableNames":[{"name":"tail","nativeSrc":"4739:4:17","nodeType":"YulIdentifier","src":"4739:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4815:6:17","nodeType":"YulIdentifier","src":"4815:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"4828:9:17","nodeType":"YulIdentifier","src":"4828:9:17"},{"kind":"number","nativeSrc":"4839:1:17","nodeType":"YulLiteral","src":"4839:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4824:3:17","nodeType":"YulIdentifier","src":"4824:3:17"},"nativeSrc":"4824:17:17","nodeType":"YulFunctionCall","src":"4824:17:17"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4775:39:17","nodeType":"YulIdentifier","src":"4775:39:17"},"nativeSrc":"4775:67:17","nodeType":"YulFunctionCall","src":"4775:67:17"},"nativeSrc":"4775:67:17","nodeType":"YulExpressionStatement","src":"4775:67:17"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4635:214:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4701:9:17","nodeType":"YulTypedName","src":"4701:9:17","type":""},{"name":"value0","nativeSrc":"4713:6:17","nodeType":"YulTypedName","src":"4713:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4724:4:17","nodeType":"YulTypedName","src":"4724:4:17","type":""}],"src":"4635:214:17"},{"body":{"nativeSrc":"4921:263:17","nodeType":"YulBlock","src":"4921:263:17","statements":[{"body":{"nativeSrc":"4967:83:17","nodeType":"YulBlock","src":"4967:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4969:77:17","nodeType":"YulIdentifier","src":"4969:77:17"},"nativeSrc":"4969:79:17","nodeType":"YulFunctionCall","src":"4969:79:17"},"nativeSrc":"4969:79:17","nodeType":"YulExpressionStatement","src":"4969:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4942:7:17","nodeType":"YulIdentifier","src":"4942:7:17"},{"name":"headStart","nativeSrc":"4951:9:17","nodeType":"YulIdentifier","src":"4951:9:17"}],"functionName":{"name":"sub","nativeSrc":"4938:3:17","nodeType":"YulIdentifier","src":"4938:3:17"},"nativeSrc":"4938:23:17","nodeType":"YulFunctionCall","src":"4938:23:17"},{"kind":"number","nativeSrc":"4963:2:17","nodeType":"YulLiteral","src":"4963:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4934:3:17","nodeType":"YulIdentifier","src":"4934:3:17"},"nativeSrc":"4934:32:17","nodeType":"YulFunctionCall","src":"4934:32:17"},"nativeSrc":"4931:119:17","nodeType":"YulIf","src":"4931:119:17"},{"nativeSrc":"5060:117:17","nodeType":"YulBlock","src":"5060:117:17","statements":[{"nativeSrc":"5075:15:17","nodeType":"YulVariableDeclaration","src":"5075:15:17","value":{"kind":"number","nativeSrc":"5089:1:17","nodeType":"YulLiteral","src":"5089:1:17","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5079:6:17","nodeType":"YulTypedName","src":"5079:6:17","type":""}]},{"nativeSrc":"5104:63:17","nodeType":"YulAssignment","src":"5104:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5139:9:17","nodeType":"YulIdentifier","src":"5139:9:17"},{"name":"offset","nativeSrc":"5150:6:17","nodeType":"YulIdentifier","src":"5150:6:17"}],"functionName":{"name":"add","nativeSrc":"5135:3:17","nodeType":"YulIdentifier","src":"5135:3:17"},"nativeSrc":"5135:22:17","nodeType":"YulFunctionCall","src":"5135:22:17"},{"name":"dataEnd","nativeSrc":"5159:7:17","nodeType":"YulIdentifier","src":"5159:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5114:20:17","nodeType":"YulIdentifier","src":"5114:20:17"},"nativeSrc":"5114:53:17","nodeType":"YulFunctionCall","src":"5114:53:17"},"variableNames":[{"name":"value0","nativeSrc":"5104:6:17","nodeType":"YulIdentifier","src":"5104:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"4855:329:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4891:9:17","nodeType":"YulTypedName","src":"4891:9:17","type":""},{"name":"dataEnd","nativeSrc":"4902:7:17","nodeType":"YulTypedName","src":"4902:7:17","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4914:6:17","nodeType":"YulTypedName","src":"4914:6:17","type":""}],"src":"4855:329:17"},{"body":{"nativeSrc":"5255:53:17","nodeType":"YulBlock","src":"5255:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5272:3:17","nodeType":"YulIdentifier","src":"5272:3:17"},{"arguments":[{"name":"value","nativeSrc":"5295:5:17","nodeType":"YulIdentifier","src":"5295:5:17"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5277:17:17","nodeType":"YulIdentifier","src":"5277:17:17"},"nativeSrc":"5277:24:17","nodeType":"YulFunctionCall","src":"5277:24:17"}],"functionName":{"name":"mstore","nativeSrc":"5265:6:17","nodeType":"YulIdentifier","src":"5265:6:17"},"nativeSrc":"5265:37:17","nodeType":"YulFunctionCall","src":"5265:37:17"},"nativeSrc":"5265:37:17","nodeType":"YulExpressionStatement","src":"5265:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5190:118:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5243:5:17","nodeType":"YulTypedName","src":"5243:5:17","type":""},{"name":"pos","nativeSrc":"5250:3:17","nodeType":"YulTypedName","src":"5250:3:17","type":""}],"src":"5190:118:17"},{"body":{"nativeSrc":"5412:124:17","nodeType":"YulBlock","src":"5412:124:17","statements":[{"nativeSrc":"5422:26:17","nodeType":"YulAssignment","src":"5422:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"5434:9:17","nodeType":"YulIdentifier","src":"5434:9:17"},{"kind":"number","nativeSrc":"5445:2:17","nodeType":"YulLiteral","src":"5445:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5430:3:17","nodeType":"YulIdentifier","src":"5430:3:17"},"nativeSrc":"5430:18:17","nodeType":"YulFunctionCall","src":"5430:18:17"},"variableNames":[{"name":"tail","nativeSrc":"5422:4:17","nodeType":"YulIdentifier","src":"5422:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5502:6:17","nodeType":"YulIdentifier","src":"5502:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"5515:9:17","nodeType":"YulIdentifier","src":"5515:9:17"},{"kind":"number","nativeSrc":"5526:1:17","nodeType":"YulLiteral","src":"5526:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5511:3:17","nodeType":"YulIdentifier","src":"5511:3:17"},"nativeSrc":"5511:17:17","nodeType":"YulFunctionCall","src":"5511:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5458:43:17","nodeType":"YulIdentifier","src":"5458:43:17"},"nativeSrc":"5458:71:17","nodeType":"YulFunctionCall","src":"5458:71:17"},"nativeSrc":"5458:71:17","nodeType":"YulExpressionStatement","src":"5458:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5314:222:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5384:9:17","nodeType":"YulTypedName","src":"5384:9:17","type":""},{"name":"value0","nativeSrc":"5396:6:17","nodeType":"YulTypedName","src":"5396:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5407:4:17","nodeType":"YulTypedName","src":"5407:4:17","type":""}],"src":"5314:222:17"},{"body":{"nativeSrc":"5625:391:17","nodeType":"YulBlock","src":"5625:391:17","statements":[{"body":{"nativeSrc":"5671:83:17","nodeType":"YulBlock","src":"5671:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5673:77:17","nodeType":"YulIdentifier","src":"5673:77:17"},"nativeSrc":"5673:79:17","nodeType":"YulFunctionCall","src":"5673:79:17"},"nativeSrc":"5673:79:17","nodeType":"YulExpressionStatement","src":"5673:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5646:7:17","nodeType":"YulIdentifier","src":"5646:7:17"},{"name":"headStart","nativeSrc":"5655:9:17","nodeType":"YulIdentifier","src":"5655:9:17"}],"functionName":{"name":"sub","nativeSrc":"5642:3:17","nodeType":"YulIdentifier","src":"5642:3:17"},"nativeSrc":"5642:23:17","nodeType":"YulFunctionCall","src":"5642:23:17"},{"kind":"number","nativeSrc":"5667:2:17","nodeType":"YulLiteral","src":"5667:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5638:3:17","nodeType":"YulIdentifier","src":"5638:3:17"},"nativeSrc":"5638:32:17","nodeType":"YulFunctionCall","src":"5638:32:17"},"nativeSrc":"5635:119:17","nodeType":"YulIf","src":"5635:119:17"},{"nativeSrc":"5764:117:17","nodeType":"YulBlock","src":"5764:117:17","statements":[{"nativeSrc":"5779:15:17","nodeType":"YulVariableDeclaration","src":"5779:15:17","value":{"kind":"number","nativeSrc":"5793:1:17","nodeType":"YulLiteral","src":"5793:1:17","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5783:6:17","nodeType":"YulTypedName","src":"5783:6:17","type":""}]},{"nativeSrc":"5808:63:17","nodeType":"YulAssignment","src":"5808:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5843:9:17","nodeType":"YulIdentifier","src":"5843:9:17"},{"name":"offset","nativeSrc":"5854:6:17","nodeType":"YulIdentifier","src":"5854:6:17"}],"functionName":{"name":"add","nativeSrc":"5839:3:17","nodeType":"YulIdentifier","src":"5839:3:17"},"nativeSrc":"5839:22:17","nodeType":"YulFunctionCall","src":"5839:22:17"},{"name":"dataEnd","nativeSrc":"5863:7:17","nodeType":"YulIdentifier","src":"5863:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5818:20:17","nodeType":"YulIdentifier","src":"5818:20:17"},"nativeSrc":"5818:53:17","nodeType":"YulFunctionCall","src":"5818:53:17"},"variableNames":[{"name":"value0","nativeSrc":"5808:6:17","nodeType":"YulIdentifier","src":"5808:6:17"}]}]},{"nativeSrc":"5891:118:17","nodeType":"YulBlock","src":"5891:118:17","statements":[{"nativeSrc":"5906:16:17","nodeType":"YulVariableDeclaration","src":"5906:16:17","value":{"kind":"number","nativeSrc":"5920:2:17","nodeType":"YulLiteral","src":"5920:2:17","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5910:6:17","nodeType":"YulTypedName","src":"5910:6:17","type":""}]},{"nativeSrc":"5936:63:17","nodeType":"YulAssignment","src":"5936:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5971:9:17","nodeType":"YulIdentifier","src":"5971:9:17"},{"name":"offset","nativeSrc":"5982:6:17","nodeType":"YulIdentifier","src":"5982:6:17"}],"functionName":{"name":"add","nativeSrc":"5967:3:17","nodeType":"YulIdentifier","src":"5967:3:17"},"nativeSrc":"5967:22:17","nodeType":"YulFunctionCall","src":"5967:22:17"},{"name":"dataEnd","nativeSrc":"5991:7:17","nodeType":"YulIdentifier","src":"5991:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5946:20:17","nodeType":"YulIdentifier","src":"5946:20:17"},"nativeSrc":"5946:53:17","nodeType":"YulFunctionCall","src":"5946:53:17"},"variableNames":[{"name":"value1","nativeSrc":"5936:6:17","nodeType":"YulIdentifier","src":"5936:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"5542:474:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5587:9:17","nodeType":"YulTypedName","src":"5587:9:17","type":""},{"name":"dataEnd","nativeSrc":"5598:7:17","nodeType":"YulTypedName","src":"5598:7:17","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5610:6:17","nodeType":"YulTypedName","src":"5610:6:17","type":""},{"name":"value1","nativeSrc":"5618:6:17","nodeType":"YulTypedName","src":"5618:6:17","type":""}],"src":"5542:474:17"},{"body":{"nativeSrc":"6050:152:17","nodeType":"YulBlock","src":"6050:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6067:1:17","nodeType":"YulLiteral","src":"6067:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"6070:77:17","nodeType":"YulLiteral","src":"6070:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6060:6:17","nodeType":"YulIdentifier","src":"6060:6:17"},"nativeSrc":"6060:88:17","nodeType":"YulFunctionCall","src":"6060:88:17"},"nativeSrc":"6060:88:17","nodeType":"YulExpressionStatement","src":"6060:88:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6164:1:17","nodeType":"YulLiteral","src":"6164:1:17","type":"","value":"4"},{"kind":"number","nativeSrc":"6167:4:17","nodeType":"YulLiteral","src":"6167:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"6157:6:17","nodeType":"YulIdentifier","src":"6157:6:17"},"nativeSrc":"6157:15:17","nodeType":"YulFunctionCall","src":"6157:15:17"},"nativeSrc":"6157:15:17","nodeType":"YulExpressionStatement","src":"6157:15:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6188:1:17","nodeType":"YulLiteral","src":"6188:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"6191:4:17","nodeType":"YulLiteral","src":"6191:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6181:6:17","nodeType":"YulIdentifier","src":"6181:6:17"},"nativeSrc":"6181:15:17","nodeType":"YulFunctionCall","src":"6181:15:17"},"nativeSrc":"6181:15:17","nodeType":"YulExpressionStatement","src":"6181:15:17"}]},"name":"panic_error_0x22","nativeSrc":"6022:180:17","nodeType":"YulFunctionDefinition","src":"6022:180:17"},{"body":{"nativeSrc":"6259:269:17","nodeType":"YulBlock","src":"6259:269:17","statements":[{"nativeSrc":"6269:22:17","nodeType":"YulAssignment","src":"6269:22:17","value":{"arguments":[{"name":"data","nativeSrc":"6283:4:17","nodeType":"YulIdentifier","src":"6283:4:17"},{"kind":"number","nativeSrc":"6289:1:17","nodeType":"YulLiteral","src":"6289:1:17","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"6279:3:17","nodeType":"YulIdentifier","src":"6279:3:17"},"nativeSrc":"6279:12:17","nodeType":"YulFunctionCall","src":"6279:12:17"},"variableNames":[{"name":"length","nativeSrc":"6269:6:17","nodeType":"YulIdentifier","src":"6269:6:17"}]},{"nativeSrc":"6300:38:17","nodeType":"YulVariableDeclaration","src":"6300:38:17","value":{"arguments":[{"name":"data","nativeSrc":"6330:4:17","nodeType":"YulIdentifier","src":"6330:4:17"},{"kind":"number","nativeSrc":"6336:1:17","nodeType":"YulLiteral","src":"6336:1:17","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"6326:3:17","nodeType":"YulIdentifier","src":"6326:3:17"},"nativeSrc":"6326:12:17","nodeType":"YulFunctionCall","src":"6326:12:17"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"6304:18:17","nodeType":"YulTypedName","src":"6304:18:17","type":""}]},{"body":{"nativeSrc":"6377:51:17","nodeType":"YulBlock","src":"6377:51:17","statements":[{"nativeSrc":"6391:27:17","nodeType":"YulAssignment","src":"6391:27:17","value":{"arguments":[{"name":"length","nativeSrc":"6405:6:17","nodeType":"YulIdentifier","src":"6405:6:17"},{"kind":"number","nativeSrc":"6413:4:17","nodeType":"YulLiteral","src":"6413:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"6401:3:17","nodeType":"YulIdentifier","src":"6401:3:17"},"nativeSrc":"6401:17:17","nodeType":"YulFunctionCall","src":"6401:17:17"},"variableNames":[{"name":"length","nativeSrc":"6391:6:17","nodeType":"YulIdentifier","src":"6391:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6357:18:17","nodeType":"YulIdentifier","src":"6357:18:17"}],"functionName":{"name":"iszero","nativeSrc":"6350:6:17","nodeType":"YulIdentifier","src":"6350:6:17"},"nativeSrc":"6350:26:17","nodeType":"YulFunctionCall","src":"6350:26:17"},"nativeSrc":"6347:81:17","nodeType":"YulIf","src":"6347:81:17"},{"body":{"nativeSrc":"6480:42:17","nodeType":"YulBlock","src":"6480:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"6494:16:17","nodeType":"YulIdentifier","src":"6494:16:17"},"nativeSrc":"6494:18:17","nodeType":"YulFunctionCall","src":"6494:18:17"},"nativeSrc":"6494:18:17","nodeType":"YulExpressionStatement","src":"6494:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6444:18:17","nodeType":"YulIdentifier","src":"6444:18:17"},{"arguments":[{"name":"length","nativeSrc":"6467:6:17","nodeType":"YulIdentifier","src":"6467:6:17"},{"kind":"number","nativeSrc":"6475:2:17","nodeType":"YulLiteral","src":"6475:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6464:2:17","nodeType":"YulIdentifier","src":"6464:2:17"},"nativeSrc":"6464:14:17","nodeType":"YulFunctionCall","src":"6464:14:17"}],"functionName":{"name":"eq","nativeSrc":"6441:2:17","nodeType":"YulIdentifier","src":"6441:2:17"},"nativeSrc":"6441:38:17","nodeType":"YulFunctionCall","src":"6441:38:17"},"nativeSrc":"6438:84:17","nodeType":"YulIf","src":"6438:84:17"}]},"name":"extract_byte_array_length","nativeSrc":"6208:320:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"6243:4:17","nodeType":"YulTypedName","src":"6243:4:17","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6252:6:17","nodeType":"YulTypedName","src":"6252:6:17","type":""}],"src":"6208:320:17"},{"body":{"nativeSrc":"6688:288:17","nodeType":"YulBlock","src":"6688:288:17","statements":[{"nativeSrc":"6698:26:17","nodeType":"YulAssignment","src":"6698:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"6710:9:17","nodeType":"YulIdentifier","src":"6710:9:17"},{"kind":"number","nativeSrc":"6721:2:17","nodeType":"YulLiteral","src":"6721:2:17","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6706:3:17","nodeType":"YulIdentifier","src":"6706:3:17"},"nativeSrc":"6706:18:17","nodeType":"YulFunctionCall","src":"6706:18:17"},"variableNames":[{"name":"tail","nativeSrc":"6698:4:17","nodeType":"YulIdentifier","src":"6698:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6778:6:17","nodeType":"YulIdentifier","src":"6778:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"6791:9:17","nodeType":"YulIdentifier","src":"6791:9:17"},{"kind":"number","nativeSrc":"6802:1:17","nodeType":"YulLiteral","src":"6802:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6787:3:17","nodeType":"YulIdentifier","src":"6787:3:17"},"nativeSrc":"6787:17:17","nodeType":"YulFunctionCall","src":"6787:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6734:43:17","nodeType":"YulIdentifier","src":"6734:43:17"},"nativeSrc":"6734:71:17","nodeType":"YulFunctionCall","src":"6734:71:17"},"nativeSrc":"6734:71:17","nodeType":"YulExpressionStatement","src":"6734:71:17"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"6859:6:17","nodeType":"YulIdentifier","src":"6859:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"6872:9:17","nodeType":"YulIdentifier","src":"6872:9:17"},{"kind":"number","nativeSrc":"6883:2:17","nodeType":"YulLiteral","src":"6883:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6868:3:17","nodeType":"YulIdentifier","src":"6868:3:17"},"nativeSrc":"6868:18:17","nodeType":"YulFunctionCall","src":"6868:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6815:43:17","nodeType":"YulIdentifier","src":"6815:43:17"},"nativeSrc":"6815:72:17","nodeType":"YulFunctionCall","src":"6815:72:17"},"nativeSrc":"6815:72:17","nodeType":"YulExpressionStatement","src":"6815:72:17"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"6941:6:17","nodeType":"YulIdentifier","src":"6941:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"6954:9:17","nodeType":"YulIdentifier","src":"6954:9:17"},{"kind":"number","nativeSrc":"6965:2:17","nodeType":"YulLiteral","src":"6965:2:17","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6950:3:17","nodeType":"YulIdentifier","src":"6950:3:17"},"nativeSrc":"6950:18:17","nodeType":"YulFunctionCall","src":"6950:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6897:43:17","nodeType":"YulIdentifier","src":"6897:43:17"},"nativeSrc":"6897:72:17","nodeType":"YulFunctionCall","src":"6897:72:17"},"nativeSrc":"6897:72:17","nodeType":"YulExpressionStatement","src":"6897:72:17"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"6534:442:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6644:9:17","nodeType":"YulTypedName","src":"6644:9:17","type":""},{"name":"value2","nativeSrc":"6656:6:17","nodeType":"YulTypedName","src":"6656:6:17","type":""},{"name":"value1","nativeSrc":"6664:6:17","nodeType":"YulTypedName","src":"6664:6:17","type":""},{"name":"value0","nativeSrc":"6672:6:17","nodeType":"YulTypedName","src":"6672:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6683:4:17","nodeType":"YulTypedName","src":"6683:4:17","type":""}],"src":"6534:442:17"},{"body":{"nativeSrc":"7010:152:17","nodeType":"YulBlock","src":"7010:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7027:1:17","nodeType":"YulLiteral","src":"7027:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"7030:77:17","nodeType":"YulLiteral","src":"7030:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7020:6:17","nodeType":"YulIdentifier","src":"7020:6:17"},"nativeSrc":"7020:88:17","nodeType":"YulFunctionCall","src":"7020:88:17"},"nativeSrc":"7020:88:17","nodeType":"YulExpressionStatement","src":"7020:88:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7124:1:17","nodeType":"YulLiteral","src":"7124:1:17","type":"","value":"4"},{"kind":"number","nativeSrc":"7127:4:17","nodeType":"YulLiteral","src":"7127:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7117:6:17","nodeType":"YulIdentifier","src":"7117:6:17"},"nativeSrc":"7117:15:17","nodeType":"YulFunctionCall","src":"7117:15:17"},"nativeSrc":"7117:15:17","nodeType":"YulExpressionStatement","src":"7117:15:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7148:1:17","nodeType":"YulLiteral","src":"7148:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"7151:4:17","nodeType":"YulLiteral","src":"7151:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7141:6:17","nodeType":"YulIdentifier","src":"7141:6:17"},"nativeSrc":"7141:15:17","nodeType":"YulFunctionCall","src":"7141:15:17"},"nativeSrc":"7141:15:17","nodeType":"YulExpressionStatement","src":"7141:15:17"}]},"name":"panic_error_0x11","nativeSrc":"6982:180:17","nodeType":"YulFunctionDefinition","src":"6982:180:17"},{"body":{"nativeSrc":"7212:147:17","nodeType":"YulBlock","src":"7212:147:17","statements":[{"nativeSrc":"7222:25:17","nodeType":"YulAssignment","src":"7222:25:17","value":{"arguments":[{"name":"x","nativeSrc":"7245:1:17","nodeType":"YulIdentifier","src":"7245:1:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7227:17:17","nodeType":"YulIdentifier","src":"7227:17:17"},"nativeSrc":"7227:20:17","nodeType":"YulFunctionCall","src":"7227:20:17"},"variableNames":[{"name":"x","nativeSrc":"7222:1:17","nodeType":"YulIdentifier","src":"7222:1:17"}]},{"nativeSrc":"7256:25:17","nodeType":"YulAssignment","src":"7256:25:17","value":{"arguments":[{"name":"y","nativeSrc":"7279:1:17","nodeType":"YulIdentifier","src":"7279:1:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7261:17:17","nodeType":"YulIdentifier","src":"7261:17:17"},"nativeSrc":"7261:20:17","nodeType":"YulFunctionCall","src":"7261:20:17"},"variableNames":[{"name":"y","nativeSrc":"7256:1:17","nodeType":"YulIdentifier","src":"7256:1:17"}]},{"nativeSrc":"7290:16:17","nodeType":"YulAssignment","src":"7290:16:17","value":{"arguments":[{"name":"x","nativeSrc":"7301:1:17","nodeType":"YulIdentifier","src":"7301:1:17"},{"name":"y","nativeSrc":"7304:1:17","nodeType":"YulIdentifier","src":"7304:1:17"}],"functionName":{"name":"add","nativeSrc":"7297:3:17","nodeType":"YulIdentifier","src":"7297:3:17"},"nativeSrc":"7297:9:17","nodeType":"YulFunctionCall","src":"7297:9:17"},"variableNames":[{"name":"sum","nativeSrc":"7290:3:17","nodeType":"YulIdentifier","src":"7290:3:17"}]},{"body":{"nativeSrc":"7330:22:17","nodeType":"YulBlock","src":"7330:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7332:16:17","nodeType":"YulIdentifier","src":"7332:16:17"},"nativeSrc":"7332:18:17","nodeType":"YulFunctionCall","src":"7332:18:17"},"nativeSrc":"7332:18:17","nodeType":"YulExpressionStatement","src":"7332:18:17"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"7322:1:17","nodeType":"YulIdentifier","src":"7322:1:17"},{"name":"sum","nativeSrc":"7325:3:17","nodeType":"YulIdentifier","src":"7325:3:17"}],"functionName":{"name":"gt","nativeSrc":"7319:2:17","nodeType":"YulIdentifier","src":"7319:2:17"},"nativeSrc":"7319:10:17","nodeType":"YulFunctionCall","src":"7319:10:17"},"nativeSrc":"7316:36:17","nodeType":"YulIf","src":"7316:36:17"}]},"name":"checked_add_t_uint256","nativeSrc":"7168:191:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7199:1:17","nodeType":"YulTypedName","src":"7199:1:17","type":""},{"name":"y","nativeSrc":"7202:1:17","nodeType":"YulTypedName","src":"7202:1:17","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"7208:3:17","nodeType":"YulTypedName","src":"7208:3:17","type":""}],"src":"7168:191:17"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610202578063a9059cbb14610220578063dd62ed3e14610250578063f2fde38b14610280576100cf565b806370a08231146101aa578063715018a6146101da5780638da5cb5b146101e4576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806340c10f191461018e575b600080fd5b6100dc61029c565b6040516100e99190610def565b60405180910390f35b61010c60048036038101906101079190610eaa565b61032e565b6040516101199190610f05565b60405180910390f35b61012a610351565b6040516101379190610f2f565b60405180910390f35b61015a60048036038101906101559190610f4a565b61035b565b6040516101679190610f05565b60405180910390f35b61017861038a565b6040516101859190610fb9565b60405180910390f35b6101a860048036038101906101a39190610eaa565b610393565b005b6101c460048036038101906101bf9190610fd4565b6103a9565b6040516101d19190610f2f565b60405180910390f35b6101e26103f1565b005b6101ec610405565b6040516101f99190611010565b60405180910390f35b61020a61042f565b6040516102179190610def565b60405180910390f35b61023a60048036038101906102359190610eaa565b6104c1565b6040516102479190610f05565b60405180910390f35b61026a6004803603810190610265919061102b565b6104e4565b6040516102779190610f2f565b60405180910390f35b61029a60048036038101906102959190610fd4565b61056b565b005b6060600380546102ab9061109a565b80601f01602080910402602001604051908101604052809291908181526020018280546102d79061109a565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b6000806103396105f1565b90506103468185856105f9565b600191505092915050565b6000600254905090565b6000806103666105f1565b905061037385828561060b565b61037e8585856106a0565b60019150509392505050565b60006012905090565b61039b610794565b6103a5828261081b565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103f9610794565b610403600061089d565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461043e9061109a565b80601f016020809104026020016040519081016040528092919081815260200182805461046a9061109a565b80156104b75780601f1061048c576101008083540402835291602001916104b7565b820191906000526020600020905b81548152906001019060200180831161049a57829003601f168201915b5050505050905090565b6000806104cc6105f1565b90506104d98185856106a0565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610573610794565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105e55760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105dc9190611010565b60405180910390fd5b6105ee8161089d565b50565b600033905090565b6106068383836001610963565b505050565b600061061784846104e4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561069a578181101561068a578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610681939291906110cb565b60405180910390fd5b61069984848484036000610963565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107125760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107099190611010565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107845760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161077b9190611010565b60405180910390fd5b61078f838383610b3a565b505050565b61079c6105f1565b73ffffffffffffffffffffffffffffffffffffffff166107ba610405565b73ffffffffffffffffffffffffffffffffffffffff1614610819576107dd6105f1565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108109190611010565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361088d5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108849190611010565b60405180910390fd5b61089960008383610b3a565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109d55760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109cc9190611010565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a475760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a3e9190611010565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b34578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b2b9190610f2f565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b8c578060026000828254610b809190611131565b92505081905550610c5f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c18578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c0f939291906110cb565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ca85780600260008282540392505081905550610cf5565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d529190610f2f565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d99578082015181840152602081019050610d7e565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dc182610d5f565b610dcb8185610d6a565b9350610ddb818560208601610d7b565b610de481610da5565b840191505092915050565b60006020820190508181036000830152610e098184610db6565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4182610e16565b9050919050565b610e5181610e36565b8114610e5c57600080fd5b50565b600081359050610e6e81610e48565b92915050565b6000819050919050565b610e8781610e74565b8114610e9257600080fd5b50565b600081359050610ea481610e7e565b92915050565b60008060408385031215610ec157610ec0610e11565b5b6000610ecf85828601610e5f565b9250506020610ee085828601610e95565b9150509250929050565b60008115159050919050565b610eff81610eea565b82525050565b6000602082019050610f1a6000830184610ef6565b92915050565b610f2981610e74565b82525050565b6000602082019050610f446000830184610f20565b92915050565b600080600060608486031215610f6357610f62610e11565b5b6000610f7186828701610e5f565b9350506020610f8286828701610e5f565b9250506040610f9386828701610e95565b9150509250925092565b600060ff82169050919050565b610fb381610f9d565b82525050565b6000602082019050610fce6000830184610faa565b92915050565b600060208284031215610fea57610fe9610e11565b5b6000610ff884828501610e5f565b91505092915050565b61100a81610e36565b82525050565b60006020820190506110256000830184611001565b92915050565b6000806040838503121561104257611041610e11565b5b600061105085828601610e5f565b925050602061106185828601610e5f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110b257607f821691505b6020821081036110c5576110c461106b565b5b50919050565b60006060820190506110e06000830186611001565b6110ed6020830185610f20565b6110fa6040830184610f20565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061113c82610e74565b915061114783610e74565b925082820190508082111561115f5761115e611102565b5b9291505056fea2646970667358221220b39386468fe18254a3afd14a99a799efbd238f24383ab44b1ff37c68a618f76c64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x280 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E4 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x3F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x339 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x346 DUP2 DUP6 DUP6 PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x366 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x373 DUP6 DUP3 DUP6 PUSH2 0x60B JUMP JUMPDEST PUSH2 0x37E DUP6 DUP6 DUP6 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x794 JUMP JUMPDEST PUSH2 0x3A5 DUP3 DUP3 PUSH2 0x81B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x794 JUMP JUMPDEST PUSH2 0x403 PUSH1 0x0 PUSH2 0x89D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x43E SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4CC PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D9 DUP2 DUP6 DUP6 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x573 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5E5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5EE DUP2 PUSH2 0x89D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x606 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x963 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x617 DUP5 DUP5 PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x69A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x68A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x681 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x699 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x963 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x712 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x709 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x784 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78F DUP4 DUP4 DUP4 PUSH2 0xB3A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x79C PUSH2 0x5F1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7BA PUSH2 0x405 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x819 JUMPI PUSH2 0x7DD PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x810 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x88D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x884 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x899 PUSH1 0x0 DUP4 DUP4 PUSH2 0xB3A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CC SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA47 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB34 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB2B SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x1131 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC18 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA8 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCF5 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD52 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD99 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC1 DUP3 PUSH2 0xD5F JUMP JUMPDEST PUSH2 0xDCB DUP2 DUP6 PUSH2 0xD6A JUMP JUMPDEST SWAP4 POP PUSH2 0xDDB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xDE4 DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE09 DUP2 DUP5 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE41 DUP3 PUSH2 0xE16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE51 DUP2 PUSH2 0xE36 JUMP JUMPDEST DUP2 EQ PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE6E DUP2 PUSH2 0xE48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE87 DUP2 PUSH2 0xE74 JUMP JUMPDEST DUP2 EQ PUSH2 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEA4 DUP2 PUSH2 0xE7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH2 0xEC0 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xECF DUP6 DUP3 DUP7 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEE0 DUP6 DUP3 DUP7 ADD PUSH2 0xE95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEFF DUP2 PUSH2 0xEEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF29 DUP2 PUSH2 0xE74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF44 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF63 JUMPI PUSH2 0xF62 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF71 DUP7 DUP3 DUP8 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF82 DUP7 DUP3 DUP8 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF93 DUP7 DUP3 DUP8 ADD PUSH2 0xE95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB3 DUP2 PUSH2 0xF9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFCE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFEA JUMPI PUSH2 0xFE9 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF8 DUP5 DUP3 DUP6 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100A DUP2 PUSH2 0xE36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1025 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1001 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1042 JUMPI PUSH2 0x1041 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1050 DUP6 DUP3 DUP7 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1061 DUP6 DUP3 DUP7 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10B2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10C5 JUMPI PUSH2 0x10C4 PUSH2 0x106B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10E0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x10ED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x10FA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF20 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x113C DUP3 PUSH2 0xE74 JUMP JUMPDEST SWAP2 POP PUSH2 0x1147 DUP4 PUSH2 0xE74 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x115F JUMPI PUSH2 0x115E PUSH2 0x1102 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 SWAP4 DUP7 CHAINID DUP16 0xE1 DUP3 SLOAD LOG3 0xAF 0xD1 BLOBBASEFEE SWAP10 0xA7 SWAP10 0xEF 0xBD 0x23 DUP16 0x24 CODESIZE GASPRICE 0xB4 0x4B 0x1F RETURN PUSH29 0x68A618F76C64736F6C634300081C003300000000000000000000000000 ","sourceMap":"536:1023:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1393:164:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2985:116:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3296:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:5;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;1393:164:15:-;1531:13:0;:11;:13::i;:::-;1533:17:15::1;1539:2;1543:6;1533:5;:17::i;:::-;1393:164:::0;;:::o;2985:116:5:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1962:93:5:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3296:178::-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;3532:140::-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;8707:128:5:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7439:208:5:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9682:432:5:-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:17:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1432:117::-;1541:1;1538;1531:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:118::-;3535:24;3553:5;3535:24;:::i;:::-;3530:3;3523:37;3448:118;;:::o;3572:222::-;3665:4;3703:2;3692:9;3688:18;3680:26;;3716:71;3784:1;3773:9;3769:17;3760:6;3716:71;:::i;:::-;3572:222;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:329::-;4914:6;4963:2;4951:9;4942:7;4938:23;4934:32;4931:119;;;4969:79;;:::i;:::-;4931:119;5089:1;5114:53;5159:7;5150:6;5139:9;5135:22;5114:53;:::i;:::-;5104:63;;5060:117;4855:329;;;;:::o;5190:118::-;5277:24;5295:5;5277:24;:::i;:::-;5272:3;5265:37;5190:118;;:::o;5314:222::-;5407:4;5445:2;5434:9;5430:18;5422:26;;5458:71;5526:1;5515:9;5511:17;5502:6;5458:71;:::i;:::-;5314:222;;;;:::o;5542:474::-;5610:6;5618;5667:2;5655:9;5646:7;5642:23;5638:32;5635:119;;;5673:79;;:::i;:::-;5635:119;5793:1;5818:53;5863:7;5854:6;5843:9;5839:22;5818:53;:::i;:::-;5808:63;;5764:117;5920:2;5946:53;5991:7;5982:6;5971:9;5967:22;5946:53;:::i;:::-;5936:63;;5891:118;5542:474;;;;;:::o;6022:180::-;6070:77;6067:1;6060:88;6167:4;6164:1;6157:15;6191:4;6188:1;6181:15;6208:320;6252:6;6289:1;6283:4;6279:12;6269:22;;6336:1;6330:4;6326:12;6357:18;6347:81;;6413:4;6405:6;6401:17;6391:27;;6347:81;6475:2;6467:6;6464:14;6444:18;6441:38;6438:84;;6494:18;;:::i;:::-;6438:84;6259:269;6208:320;;;:::o;6534:442::-;6683:4;6721:2;6710:9;6706:18;6698:26;;6734:71;6802:1;6791:9;6787:17;6778:6;6734:71;:::i;:::-;6815:72;6883:2;6872:9;6868:18;6859:6;6815:72;:::i;:::-;6897;6965:2;6954:9;6950:18;6941:6;6897:72;:::i;:::-;6534:442;;;;;;:::o;6982:180::-;7030:77;7027:1;7020:88;7127:4;7124:1;7117:15;7151:4;7148:1;7141:15;7168:191;7208:3;7227:20;7245:1;7227:20;:::i;:::-;7222:25;;7261:20;7279:1;7261:20;:::i;:::-;7256:25;;7304:1;7301;7297:9;7290:16;;7325:3;7322:1;7319:10;7316:36;;;7332:18;;:::i;:::-;7316:36;7168:191;;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of a custom ERC20 token with minting functionality The contract is Ownable, meaning only the owner can mint new tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor that sets the initial token distribution and ownership\",\"params\":{\"initialOwner\":\"Address that will own the contract\",\"recipient\":\"Address to receive the initial minted tokens\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"mint(address,uint256)\":{\"details\":\"Mint new tokens to a specified address. Only callable by the contract owner.\",\"params\":{\"amount\":\"Amount of tokens to mint\",\"to\":\"Address that will receive the minted tokens\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"TokenA\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenA.sol\":\"TokenA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/TokenA.sol\":{\"keccak256\":\"0xba0a29986c59711d2f07a201bd8de1b32f1e9993ad450d7fd0ef9d56abb82263\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f8e449872417554e80da8788943cf60c429cb6d56d8576e91bc6e737c30cd0e\",\"dweb:/ipfs/QmUyYYG8TqPC9DFXVGHUnBzL7Dh2crk4TvqoFKvMC6cEdm\"]}},\"version\":1}"}},"contracts/TokenB.sol":{"TokenB":{"abi":[{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_426":{"entryPoint":null,"id":426,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_5936":{"entryPoint":null,"id":5936,"parameterSlots":2,"returnSlots":0},"@_mint_729":{"entryPoint":597,"id":729,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":390,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_696":{"entryPoint":733,"id":696,"parameterSlots":3,"returnSlots":0},"@decimals_453":{"entryPoint":588,"id":453,"parameterSlots":0,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":1381,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2247,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2849,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2262,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2864,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2919,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1599,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1445,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2797,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":2349,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":2656,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":2432,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2731,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1896,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1319,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1287,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1731,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":2643,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1861,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1751,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2037,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1620,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1550,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2009,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1741,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1979,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2289,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1503,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1456,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1785,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1282,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":1636,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":2336,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1966,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1837,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1649,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1795,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1337,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1832,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:10953:17","nodeType":"YulBlock","src":"0:10953:17","statements":[{"body":{"nativeSrc":"47:35:17","nodeType":"YulBlock","src":"47:35:17","statements":[{"nativeSrc":"57:19:17","nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:17","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:17","nodeType":"YulIdentifier","src":"67:5:17"},"nativeSrc":"67:9:17","nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:17","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:17","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:17","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nativeSrc":"177:28:17","nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:17","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:17","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:17","nodeType":"YulIdentifier","src":"187:6:17"},"nativeSrc":"187:12:17","nodeType":"YulFunctionCall","src":"187:12:17"},"nativeSrc":"187:12:17","nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:17","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nativeSrc":"300:28:17","nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:17","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:17","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:17","nodeType":"YulIdentifier","src":"310:6:17"},"nativeSrc":"310:12:17","nodeType":"YulFunctionCall","src":"310:12:17"},"nativeSrc":"310:12:17","nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:17","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nativeSrc":"379:81:17","nodeType":"YulBlock","src":"379:81:17","statements":[{"nativeSrc":"389:65:17","nodeType":"YulAssignment","src":"389:65:17","value":{"arguments":[{"name":"value","nativeSrc":"404:5:17","nodeType":"YulIdentifier","src":"404:5:17"},{"kind":"number","nativeSrc":"411:42:17","nodeType":"YulLiteral","src":"411:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:17","nodeType":"YulIdentifier","src":"400:3:17"},"nativeSrc":"400:54:17","nodeType":"YulFunctionCall","src":"400:54:17"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:17","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:17","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:17","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:126:17"},{"body":{"nativeSrc":"511:51:17","nodeType":"YulBlock","src":"511:51:17","statements":[{"nativeSrc":"521:35:17","nodeType":"YulAssignment","src":"521:35:17","value":{"arguments":[{"name":"value","nativeSrc":"550:5:17","nodeType":"YulIdentifier","src":"550:5:17"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:17","nodeType":"YulIdentifier","src":"532:17:17"},"nativeSrc":"532:24:17","nodeType":"YulFunctionCall","src":"532:24:17"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:17","nodeType":"YulIdentifier","src":"521:7:17"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:17","nodeType":"YulTypedName","src":"493:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:17","nodeType":"YulTypedName","src":"503:7:17","type":""}],"src":"466:96:17"},{"body":{"nativeSrc":"611:79:17","nodeType":"YulBlock","src":"611:79:17","statements":[{"body":{"nativeSrc":"668:16:17","nodeType":"YulBlock","src":"668:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:17","nodeType":"YulLiteral","src":"677:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:17","nodeType":"YulLiteral","src":"680:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:17","nodeType":"YulIdentifier","src":"670:6:17"},"nativeSrc":"670:12:17","nodeType":"YulFunctionCall","src":"670:12:17"},"nativeSrc":"670:12:17","nodeType":"YulExpressionStatement","src":"670:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:17","nodeType":"YulIdentifier","src":"634:5:17"},{"arguments":[{"name":"value","nativeSrc":"659:5:17","nodeType":"YulIdentifier","src":"659:5:17"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:17","nodeType":"YulIdentifier","src":"641:17:17"},"nativeSrc":"641:24:17","nodeType":"YulFunctionCall","src":"641:24:17"}],"functionName":{"name":"eq","nativeSrc":"631:2:17","nodeType":"YulIdentifier","src":"631:2:17"},"nativeSrc":"631:35:17","nodeType":"YulFunctionCall","src":"631:35:17"}],"functionName":{"name":"iszero","nativeSrc":"624:6:17","nodeType":"YulIdentifier","src":"624:6:17"},"nativeSrc":"624:43:17","nodeType":"YulFunctionCall","src":"624:43:17"},"nativeSrc":"621:63:17","nodeType":"YulIf","src":"621:63:17"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:17","nodeType":"YulTypedName","src":"604:5:17","type":""}],"src":"568:122:17"},{"body":{"nativeSrc":"759:80:17","nodeType":"YulBlock","src":"759:80:17","statements":[{"nativeSrc":"769:22:17","nodeType":"YulAssignment","src":"769:22:17","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:17","nodeType":"YulIdentifier","src":"784:6:17"}],"functionName":{"name":"mload","nativeSrc":"778:5:17","nodeType":"YulIdentifier","src":"778:5:17"},"nativeSrc":"778:13:17","nodeType":"YulFunctionCall","src":"778:13:17"},"variableNames":[{"name":"value","nativeSrc":"769:5:17","nodeType":"YulIdentifier","src":"769:5:17"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:17","nodeType":"YulIdentifier","src":"827:5:17"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:17","nodeType":"YulIdentifier","src":"800:26:17"},"nativeSrc":"800:33:17","nodeType":"YulFunctionCall","src":"800:33:17"},"nativeSrc":"800:33:17","nodeType":"YulExpressionStatement","src":"800:33:17"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:17","nodeType":"YulTypedName","src":"737:6:17","type":""},{"name":"end","nativeSrc":"745:3:17","nodeType":"YulTypedName","src":"745:3:17","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:17","nodeType":"YulTypedName","src":"753:5:17","type":""}],"src":"696:143:17"},{"body":{"nativeSrc":"939:413:17","nodeType":"YulBlock","src":"939:413:17","statements":[{"body":{"nativeSrc":"985:83:17","nodeType":"YulBlock","src":"985:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"987:77:17","nodeType":"YulIdentifier","src":"987:77:17"},"nativeSrc":"987:79:17","nodeType":"YulFunctionCall","src":"987:79:17"},"nativeSrc":"987:79:17","nodeType":"YulExpressionStatement","src":"987:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"960:7:17","nodeType":"YulIdentifier","src":"960:7:17"},{"name":"headStart","nativeSrc":"969:9:17","nodeType":"YulIdentifier","src":"969:9:17"}],"functionName":{"name":"sub","nativeSrc":"956:3:17","nodeType":"YulIdentifier","src":"956:3:17"},"nativeSrc":"956:23:17","nodeType":"YulFunctionCall","src":"956:23:17"},{"kind":"number","nativeSrc":"981:2:17","nodeType":"YulLiteral","src":"981:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"952:3:17","nodeType":"YulIdentifier","src":"952:3:17"},"nativeSrc":"952:32:17","nodeType":"YulFunctionCall","src":"952:32:17"},"nativeSrc":"949:119:17","nodeType":"YulIf","src":"949:119:17"},{"nativeSrc":"1078:128:17","nodeType":"YulBlock","src":"1078:128:17","statements":[{"nativeSrc":"1093:15:17","nodeType":"YulVariableDeclaration","src":"1093:15:17","value":{"kind":"number","nativeSrc":"1107:1:17","nodeType":"YulLiteral","src":"1107:1:17","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1097:6:17","nodeType":"YulTypedName","src":"1097:6:17","type":""}]},{"nativeSrc":"1122:74:17","nodeType":"YulAssignment","src":"1122:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1168:9:17","nodeType":"YulIdentifier","src":"1168:9:17"},{"name":"offset","nativeSrc":"1179:6:17","nodeType":"YulIdentifier","src":"1179:6:17"}],"functionName":{"name":"add","nativeSrc":"1164:3:17","nodeType":"YulIdentifier","src":"1164:3:17"},"nativeSrc":"1164:22:17","nodeType":"YulFunctionCall","src":"1164:22:17"},{"name":"dataEnd","nativeSrc":"1188:7:17","nodeType":"YulIdentifier","src":"1188:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1132:31:17","nodeType":"YulIdentifier","src":"1132:31:17"},"nativeSrc":"1132:64:17","nodeType":"YulFunctionCall","src":"1132:64:17"},"variableNames":[{"name":"value0","nativeSrc":"1122:6:17","nodeType":"YulIdentifier","src":"1122:6:17"}]}]},{"nativeSrc":"1216:129:17","nodeType":"YulBlock","src":"1216:129:17","statements":[{"nativeSrc":"1231:16:17","nodeType":"YulVariableDeclaration","src":"1231:16:17","value":{"kind":"number","nativeSrc":"1245:2:17","nodeType":"YulLiteral","src":"1245:2:17","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1235:6:17","nodeType":"YulTypedName","src":"1235:6:17","type":""}]},{"nativeSrc":"1261:74:17","nodeType":"YulAssignment","src":"1261:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1307:9:17","nodeType":"YulIdentifier","src":"1307:9:17"},{"name":"offset","nativeSrc":"1318:6:17","nodeType":"YulIdentifier","src":"1318:6:17"}],"functionName":{"name":"add","nativeSrc":"1303:3:17","nodeType":"YulIdentifier","src":"1303:3:17"},"nativeSrc":"1303:22:17","nodeType":"YulFunctionCall","src":"1303:22:17"},{"name":"dataEnd","nativeSrc":"1327:7:17","nodeType":"YulIdentifier","src":"1327:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1271:31:17","nodeType":"YulIdentifier","src":"1271:31:17"},"nativeSrc":"1271:64:17","nodeType":"YulFunctionCall","src":"1271:64:17"},"variableNames":[{"name":"value1","nativeSrc":"1261:6:17","nodeType":"YulIdentifier","src":"1261:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nativeSrc":"845:507:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"901:9:17","nodeType":"YulTypedName","src":"901:9:17","type":""},{"name":"dataEnd","nativeSrc":"912:7:17","nodeType":"YulTypedName","src":"912:7:17","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"924:6:17","nodeType":"YulTypedName","src":"924:6:17","type":""},{"name":"value1","nativeSrc":"932:6:17","nodeType":"YulTypedName","src":"932:6:17","type":""}],"src":"845:507:17"},{"body":{"nativeSrc":"1417:40:17","nodeType":"YulBlock","src":"1417:40:17","statements":[{"nativeSrc":"1428:22:17","nodeType":"YulAssignment","src":"1428:22:17","value":{"arguments":[{"name":"value","nativeSrc":"1444:5:17","nodeType":"YulIdentifier","src":"1444:5:17"}],"functionName":{"name":"mload","nativeSrc":"1438:5:17","nodeType":"YulIdentifier","src":"1438:5:17"},"nativeSrc":"1438:12:17","nodeType":"YulFunctionCall","src":"1438:12:17"},"variableNames":[{"name":"length","nativeSrc":"1428:6:17","nodeType":"YulIdentifier","src":"1428:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1358:99:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1400:5:17","nodeType":"YulTypedName","src":"1400:5:17","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1410:6:17","nodeType":"YulTypedName","src":"1410:6:17","type":""}],"src":"1358:99:17"},{"body":{"nativeSrc":"1491:152:17","nodeType":"YulBlock","src":"1491:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1508:1:17","nodeType":"YulLiteral","src":"1508:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"1511:77:17","nodeType":"YulLiteral","src":"1511:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1501:6:17","nodeType":"YulIdentifier","src":"1501:6:17"},"nativeSrc":"1501:88:17","nodeType":"YulFunctionCall","src":"1501:88:17"},"nativeSrc":"1501:88:17","nodeType":"YulExpressionStatement","src":"1501:88:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1605:1:17","nodeType":"YulLiteral","src":"1605:1:17","type":"","value":"4"},{"kind":"number","nativeSrc":"1608:4:17","nodeType":"YulLiteral","src":"1608:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1598:6:17","nodeType":"YulIdentifier","src":"1598:6:17"},"nativeSrc":"1598:15:17","nodeType":"YulFunctionCall","src":"1598:15:17"},"nativeSrc":"1598:15:17","nodeType":"YulExpressionStatement","src":"1598:15:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1629:1:17","nodeType":"YulLiteral","src":"1629:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"1632:4:17","nodeType":"YulLiteral","src":"1632:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1622:6:17","nodeType":"YulIdentifier","src":"1622:6:17"},"nativeSrc":"1622:15:17","nodeType":"YulFunctionCall","src":"1622:15:17"},"nativeSrc":"1622:15:17","nodeType":"YulExpressionStatement","src":"1622:15:17"}]},"name":"panic_error_0x41","nativeSrc":"1463:180:17","nodeType":"YulFunctionDefinition","src":"1463:180:17"},{"body":{"nativeSrc":"1677:152:17","nodeType":"YulBlock","src":"1677:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1694:1:17","nodeType":"YulLiteral","src":"1694:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"1697:77:17","nodeType":"YulLiteral","src":"1697:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1687:6:17","nodeType":"YulIdentifier","src":"1687:6:17"},"nativeSrc":"1687:88:17","nodeType":"YulFunctionCall","src":"1687:88:17"},"nativeSrc":"1687:88:17","nodeType":"YulExpressionStatement","src":"1687:88:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1791:1:17","nodeType":"YulLiteral","src":"1791:1:17","type":"","value":"4"},{"kind":"number","nativeSrc":"1794:4:17","nodeType":"YulLiteral","src":"1794:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1784:6:17","nodeType":"YulIdentifier","src":"1784:6:17"},"nativeSrc":"1784:15:17","nodeType":"YulFunctionCall","src":"1784:15:17"},"nativeSrc":"1784:15:17","nodeType":"YulExpressionStatement","src":"1784:15:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1815:1:17","nodeType":"YulLiteral","src":"1815:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"1818:4:17","nodeType":"YulLiteral","src":"1818:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1808:6:17","nodeType":"YulIdentifier","src":"1808:6:17"},"nativeSrc":"1808:15:17","nodeType":"YulFunctionCall","src":"1808:15:17"},"nativeSrc":"1808:15:17","nodeType":"YulExpressionStatement","src":"1808:15:17"}]},"name":"panic_error_0x22","nativeSrc":"1649:180:17","nodeType":"YulFunctionDefinition","src":"1649:180:17"},{"body":{"nativeSrc":"1886:269:17","nodeType":"YulBlock","src":"1886:269:17","statements":[{"nativeSrc":"1896:22:17","nodeType":"YulAssignment","src":"1896:22:17","value":{"arguments":[{"name":"data","nativeSrc":"1910:4:17","nodeType":"YulIdentifier","src":"1910:4:17"},{"kind":"number","nativeSrc":"1916:1:17","nodeType":"YulLiteral","src":"1916:1:17","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"1906:3:17","nodeType":"YulIdentifier","src":"1906:3:17"},"nativeSrc":"1906:12:17","nodeType":"YulFunctionCall","src":"1906:12:17"},"variableNames":[{"name":"length","nativeSrc":"1896:6:17","nodeType":"YulIdentifier","src":"1896:6:17"}]},{"nativeSrc":"1927:38:17","nodeType":"YulVariableDeclaration","src":"1927:38:17","value":{"arguments":[{"name":"data","nativeSrc":"1957:4:17","nodeType":"YulIdentifier","src":"1957:4:17"},{"kind":"number","nativeSrc":"1963:1:17","nodeType":"YulLiteral","src":"1963:1:17","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1953:3:17","nodeType":"YulIdentifier","src":"1953:3:17"},"nativeSrc":"1953:12:17","nodeType":"YulFunctionCall","src":"1953:12:17"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1931:18:17","nodeType":"YulTypedName","src":"1931:18:17","type":""}]},{"body":{"nativeSrc":"2004:51:17","nodeType":"YulBlock","src":"2004:51:17","statements":[{"nativeSrc":"2018:27:17","nodeType":"YulAssignment","src":"2018:27:17","value":{"arguments":[{"name":"length","nativeSrc":"2032:6:17","nodeType":"YulIdentifier","src":"2032:6:17"},{"kind":"number","nativeSrc":"2040:4:17","nodeType":"YulLiteral","src":"2040:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"2028:3:17","nodeType":"YulIdentifier","src":"2028:3:17"},"nativeSrc":"2028:17:17","nodeType":"YulFunctionCall","src":"2028:17:17"},"variableNames":[{"name":"length","nativeSrc":"2018:6:17","nodeType":"YulIdentifier","src":"2018:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1984:18:17","nodeType":"YulIdentifier","src":"1984:18:17"}],"functionName":{"name":"iszero","nativeSrc":"1977:6:17","nodeType":"YulIdentifier","src":"1977:6:17"},"nativeSrc":"1977:26:17","nodeType":"YulFunctionCall","src":"1977:26:17"},"nativeSrc":"1974:81:17","nodeType":"YulIf","src":"1974:81:17"},{"body":{"nativeSrc":"2107:42:17","nodeType":"YulBlock","src":"2107:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"2121:16:17","nodeType":"YulIdentifier","src":"2121:16:17"},"nativeSrc":"2121:18:17","nodeType":"YulFunctionCall","src":"2121:18:17"},"nativeSrc":"2121:18:17","nodeType":"YulExpressionStatement","src":"2121:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2071:18:17","nodeType":"YulIdentifier","src":"2071:18:17"},{"arguments":[{"name":"length","nativeSrc":"2094:6:17","nodeType":"YulIdentifier","src":"2094:6:17"},{"kind":"number","nativeSrc":"2102:2:17","nodeType":"YulLiteral","src":"2102:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"2091:2:17","nodeType":"YulIdentifier","src":"2091:2:17"},"nativeSrc":"2091:14:17","nodeType":"YulFunctionCall","src":"2091:14:17"}],"functionName":{"name":"eq","nativeSrc":"2068:2:17","nodeType":"YulIdentifier","src":"2068:2:17"},"nativeSrc":"2068:38:17","nodeType":"YulFunctionCall","src":"2068:38:17"},"nativeSrc":"2065:84:17","nodeType":"YulIf","src":"2065:84:17"}]},"name":"extract_byte_array_length","nativeSrc":"1835:320:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1870:4:17","nodeType":"YulTypedName","src":"1870:4:17","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1879:6:17","nodeType":"YulTypedName","src":"1879:6:17","type":""}],"src":"1835:320:17"},{"body":{"nativeSrc":"2215:87:17","nodeType":"YulBlock","src":"2215:87:17","statements":[{"nativeSrc":"2225:11:17","nodeType":"YulAssignment","src":"2225:11:17","value":{"name":"ptr","nativeSrc":"2233:3:17","nodeType":"YulIdentifier","src":"2233:3:17"},"variableNames":[{"name":"data","nativeSrc":"2225:4:17","nodeType":"YulIdentifier","src":"2225:4:17"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2253:1:17","nodeType":"YulLiteral","src":"2253:1:17","type":"","value":"0"},{"name":"ptr","nativeSrc":"2256:3:17","nodeType":"YulIdentifier","src":"2256:3:17"}],"functionName":{"name":"mstore","nativeSrc":"2246:6:17","nodeType":"YulIdentifier","src":"2246:6:17"},"nativeSrc":"2246:14:17","nodeType":"YulFunctionCall","src":"2246:14:17"},"nativeSrc":"2246:14:17","nodeType":"YulExpressionStatement","src":"2246:14:17"},{"nativeSrc":"2269:26:17","nodeType":"YulAssignment","src":"2269:26:17","value":{"arguments":[{"kind":"number","nativeSrc":"2287:1:17","nodeType":"YulLiteral","src":"2287:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"2290:4:17","nodeType":"YulLiteral","src":"2290:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2277:9:17","nodeType":"YulIdentifier","src":"2277:9:17"},"nativeSrc":"2277:18:17","nodeType":"YulFunctionCall","src":"2277:18:17"},"variableNames":[{"name":"data","nativeSrc":"2269:4:17","nodeType":"YulIdentifier","src":"2269:4:17"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"2161:141:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"2202:3:17","nodeType":"YulTypedName","src":"2202:3:17","type":""}],"returnVariables":[{"name":"data","nativeSrc":"2210:4:17","nodeType":"YulTypedName","src":"2210:4:17","type":""}],"src":"2161:141:17"},{"body":{"nativeSrc":"2352:49:17","nodeType":"YulBlock","src":"2352:49:17","statements":[{"nativeSrc":"2362:33:17","nodeType":"YulAssignment","src":"2362:33:17","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2380:5:17","nodeType":"YulIdentifier","src":"2380:5:17"},{"kind":"number","nativeSrc":"2387:2:17","nodeType":"YulLiteral","src":"2387:2:17","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2376:3:17","nodeType":"YulIdentifier","src":"2376:3:17"},"nativeSrc":"2376:14:17","nodeType":"YulFunctionCall","src":"2376:14:17"},{"kind":"number","nativeSrc":"2392:2:17","nodeType":"YulLiteral","src":"2392:2:17","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"2372:3:17","nodeType":"YulIdentifier","src":"2372:3:17"},"nativeSrc":"2372:23:17","nodeType":"YulFunctionCall","src":"2372:23:17"},"variableNames":[{"name":"result","nativeSrc":"2362:6:17","nodeType":"YulIdentifier","src":"2362:6:17"}]}]},"name":"divide_by_32_ceil","nativeSrc":"2308:93:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2335:5:17","nodeType":"YulTypedName","src":"2335:5:17","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2345:6:17","nodeType":"YulTypedName","src":"2345:6:17","type":""}],"src":"2308:93:17"},{"body":{"nativeSrc":"2460:54:17","nodeType":"YulBlock","src":"2460:54:17","statements":[{"nativeSrc":"2470:37:17","nodeType":"YulAssignment","src":"2470:37:17","value":{"arguments":[{"name":"bits","nativeSrc":"2495:4:17","nodeType":"YulIdentifier","src":"2495:4:17"},{"name":"value","nativeSrc":"2501:5:17","nodeType":"YulIdentifier","src":"2501:5:17"}],"functionName":{"name":"shl","nativeSrc":"2491:3:17","nodeType":"YulIdentifier","src":"2491:3:17"},"nativeSrc":"2491:16:17","nodeType":"YulFunctionCall","src":"2491:16:17"},"variableNames":[{"name":"newValue","nativeSrc":"2470:8:17","nodeType":"YulIdentifier","src":"2470:8:17"}]}]},"name":"shift_left_dynamic","nativeSrc":"2407:107:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"2435:4:17","nodeType":"YulTypedName","src":"2435:4:17","type":""},{"name":"value","nativeSrc":"2441:5:17","nodeType":"YulTypedName","src":"2441:5:17","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"2451:8:17","nodeType":"YulTypedName","src":"2451:8:17","type":""}],"src":"2407:107:17"},{"body":{"nativeSrc":"2596:317:17","nodeType":"YulBlock","src":"2596:317:17","statements":[{"nativeSrc":"2606:35:17","nodeType":"YulVariableDeclaration","src":"2606:35:17","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"2627:10:17","nodeType":"YulIdentifier","src":"2627:10:17"},{"kind":"number","nativeSrc":"2639:1:17","nodeType":"YulLiteral","src":"2639:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"2623:3:17","nodeType":"YulIdentifier","src":"2623:3:17"},"nativeSrc":"2623:18:17","nodeType":"YulFunctionCall","src":"2623:18:17"},"variables":[{"name":"shiftBits","nativeSrc":"2610:9:17","nodeType":"YulTypedName","src":"2610:9:17","type":""}]},{"nativeSrc":"2650:109:17","nodeType":"YulVariableDeclaration","src":"2650:109:17","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2681:9:17","nodeType":"YulIdentifier","src":"2681:9:17"},{"kind":"number","nativeSrc":"2692:66:17","nodeType":"YulLiteral","src":"2692:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2662:18:17","nodeType":"YulIdentifier","src":"2662:18:17"},"nativeSrc":"2662:97:17","nodeType":"YulFunctionCall","src":"2662:97:17"},"variables":[{"name":"mask","nativeSrc":"2654:4:17","nodeType":"YulTypedName","src":"2654:4:17","type":""}]},{"nativeSrc":"2768:51:17","nodeType":"YulAssignment","src":"2768:51:17","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2799:9:17","nodeType":"YulIdentifier","src":"2799:9:17"},{"name":"toInsert","nativeSrc":"2810:8:17","nodeType":"YulIdentifier","src":"2810:8:17"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2780:18:17","nodeType":"YulIdentifier","src":"2780:18:17"},"nativeSrc":"2780:39:17","nodeType":"YulFunctionCall","src":"2780:39:17"},"variableNames":[{"name":"toInsert","nativeSrc":"2768:8:17","nodeType":"YulIdentifier","src":"2768:8:17"}]},{"nativeSrc":"2828:30:17","nodeType":"YulAssignment","src":"2828:30:17","value":{"arguments":[{"name":"value","nativeSrc":"2841:5:17","nodeType":"YulIdentifier","src":"2841:5:17"},{"arguments":[{"name":"mask","nativeSrc":"2852:4:17","nodeType":"YulIdentifier","src":"2852:4:17"}],"functionName":{"name":"not","nativeSrc":"2848:3:17","nodeType":"YulIdentifier","src":"2848:3:17"},"nativeSrc":"2848:9:17","nodeType":"YulFunctionCall","src":"2848:9:17"}],"functionName":{"name":"and","nativeSrc":"2837:3:17","nodeType":"YulIdentifier","src":"2837:3:17"},"nativeSrc":"2837:21:17","nodeType":"YulFunctionCall","src":"2837:21:17"},"variableNames":[{"name":"value","nativeSrc":"2828:5:17","nodeType":"YulIdentifier","src":"2828:5:17"}]},{"nativeSrc":"2867:40:17","nodeType":"YulAssignment","src":"2867:40:17","value":{"arguments":[{"name":"value","nativeSrc":"2880:5:17","nodeType":"YulIdentifier","src":"2880:5:17"},{"arguments":[{"name":"toInsert","nativeSrc":"2891:8:17","nodeType":"YulIdentifier","src":"2891:8:17"},{"name":"mask","nativeSrc":"2901:4:17","nodeType":"YulIdentifier","src":"2901:4:17"}],"functionName":{"name":"and","nativeSrc":"2887:3:17","nodeType":"YulIdentifier","src":"2887:3:17"},"nativeSrc":"2887:19:17","nodeType":"YulFunctionCall","src":"2887:19:17"}],"functionName":{"name":"or","nativeSrc":"2877:2:17","nodeType":"YulIdentifier","src":"2877:2:17"},"nativeSrc":"2877:30:17","nodeType":"YulFunctionCall","src":"2877:30:17"},"variableNames":[{"name":"result","nativeSrc":"2867:6:17","nodeType":"YulIdentifier","src":"2867:6:17"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"2520:393:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2557:5:17","nodeType":"YulTypedName","src":"2557:5:17","type":""},{"name":"shiftBytes","nativeSrc":"2564:10:17","nodeType":"YulTypedName","src":"2564:10:17","type":""},{"name":"toInsert","nativeSrc":"2576:8:17","nodeType":"YulTypedName","src":"2576:8:17","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2589:6:17","nodeType":"YulTypedName","src":"2589:6:17","type":""}],"src":"2520:393:17"},{"body":{"nativeSrc":"2964:32:17","nodeType":"YulBlock","src":"2964:32:17","statements":[{"nativeSrc":"2974:16:17","nodeType":"YulAssignment","src":"2974:16:17","value":{"name":"value","nativeSrc":"2985:5:17","nodeType":"YulIdentifier","src":"2985:5:17"},"variableNames":[{"name":"cleaned","nativeSrc":"2974:7:17","nodeType":"YulIdentifier","src":"2974:7:17"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2919:77:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2946:5:17","nodeType":"YulTypedName","src":"2946:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2956:7:17","nodeType":"YulTypedName","src":"2956:7:17","type":""}],"src":"2919:77:17"},{"body":{"nativeSrc":"3034:28:17","nodeType":"YulBlock","src":"3034:28:17","statements":[{"nativeSrc":"3044:12:17","nodeType":"YulAssignment","src":"3044:12:17","value":{"name":"value","nativeSrc":"3051:5:17","nodeType":"YulIdentifier","src":"3051:5:17"},"variableNames":[{"name":"ret","nativeSrc":"3044:3:17","nodeType":"YulIdentifier","src":"3044:3:17"}]}]},"name":"identity","nativeSrc":"3002:60:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3020:5:17","nodeType":"YulTypedName","src":"3020:5:17","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3030:3:17","nodeType":"YulTypedName","src":"3030:3:17","type":""}],"src":"3002:60:17"},{"body":{"nativeSrc":"3128:82:17","nodeType":"YulBlock","src":"3128:82:17","statements":[{"nativeSrc":"3138:66:17","nodeType":"YulAssignment","src":"3138:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3196:5:17","nodeType":"YulIdentifier","src":"3196:5:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3178:17:17","nodeType":"YulIdentifier","src":"3178:17:17"},"nativeSrc":"3178:24:17","nodeType":"YulFunctionCall","src":"3178:24:17"}],"functionName":{"name":"identity","nativeSrc":"3169:8:17","nodeType":"YulIdentifier","src":"3169:8:17"},"nativeSrc":"3169:34:17","nodeType":"YulFunctionCall","src":"3169:34:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3151:17:17","nodeType":"YulIdentifier","src":"3151:17:17"},"nativeSrc":"3151:53:17","nodeType":"YulFunctionCall","src":"3151:53:17"},"variableNames":[{"name":"converted","nativeSrc":"3138:9:17","nodeType":"YulIdentifier","src":"3138:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3068:142:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3108:5:17","nodeType":"YulTypedName","src":"3108:5:17","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3118:9:17","nodeType":"YulTypedName","src":"3118:9:17","type":""}],"src":"3068:142:17"},{"body":{"nativeSrc":"3263:28:17","nodeType":"YulBlock","src":"3263:28:17","statements":[{"nativeSrc":"3273:12:17","nodeType":"YulAssignment","src":"3273:12:17","value":{"name":"value","nativeSrc":"3280:5:17","nodeType":"YulIdentifier","src":"3280:5:17"},"variableNames":[{"name":"ret","nativeSrc":"3273:3:17","nodeType":"YulIdentifier","src":"3273:3:17"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"3216:75:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3249:5:17","nodeType":"YulTypedName","src":"3249:5:17","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3259:3:17","nodeType":"YulTypedName","src":"3259:3:17","type":""}],"src":"3216:75:17"},{"body":{"nativeSrc":"3373:193:17","nodeType":"YulBlock","src":"3373:193:17","statements":[{"nativeSrc":"3383:63:17","nodeType":"YulVariableDeclaration","src":"3383:63:17","value":{"arguments":[{"name":"value_0","nativeSrc":"3438:7:17","nodeType":"YulIdentifier","src":"3438:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3407:30:17","nodeType":"YulIdentifier","src":"3407:30:17"},"nativeSrc":"3407:39:17","nodeType":"YulFunctionCall","src":"3407:39:17"},"variables":[{"name":"convertedValue_0","nativeSrc":"3387:16:17","nodeType":"YulTypedName","src":"3387:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3462:4:17","nodeType":"YulIdentifier","src":"3462:4:17"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3502:4:17","nodeType":"YulIdentifier","src":"3502:4:17"}],"functionName":{"name":"sload","nativeSrc":"3496:5:17","nodeType":"YulIdentifier","src":"3496:5:17"},"nativeSrc":"3496:11:17","nodeType":"YulFunctionCall","src":"3496:11:17"},{"name":"offset","nativeSrc":"3509:6:17","nodeType":"YulIdentifier","src":"3509:6:17"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"3541:16:17","nodeType":"YulIdentifier","src":"3541:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"3517:23:17","nodeType":"YulIdentifier","src":"3517:23:17"},"nativeSrc":"3517:41:17","nodeType":"YulFunctionCall","src":"3517:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"3468:27:17","nodeType":"YulIdentifier","src":"3468:27:17"},"nativeSrc":"3468:91:17","nodeType":"YulFunctionCall","src":"3468:91:17"}],"functionName":{"name":"sstore","nativeSrc":"3455:6:17","nodeType":"YulIdentifier","src":"3455:6:17"},"nativeSrc":"3455:105:17","nodeType":"YulFunctionCall","src":"3455:105:17"},"nativeSrc":"3455:105:17","nodeType":"YulExpressionStatement","src":"3455:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3297:269:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3350:4:17","nodeType":"YulTypedName","src":"3350:4:17","type":""},{"name":"offset","nativeSrc":"3356:6:17","nodeType":"YulTypedName","src":"3356:6:17","type":""},{"name":"value_0","nativeSrc":"3364:7:17","nodeType":"YulTypedName","src":"3364:7:17","type":""}],"src":"3297:269:17"},{"body":{"nativeSrc":"3621:24:17","nodeType":"YulBlock","src":"3621:24:17","statements":[{"nativeSrc":"3631:8:17","nodeType":"YulAssignment","src":"3631:8:17","value":{"kind":"number","nativeSrc":"3638:1:17","nodeType":"YulLiteral","src":"3638:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"3631:3:17","nodeType":"YulIdentifier","src":"3631:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"3572:73:17","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"3617:3:17","nodeType":"YulTypedName","src":"3617:3:17","type":""}],"src":"3572:73:17"},{"body":{"nativeSrc":"3704:136:17","nodeType":"YulBlock","src":"3704:136:17","statements":[{"nativeSrc":"3714:46:17","nodeType":"YulVariableDeclaration","src":"3714:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"3728:30:17","nodeType":"YulIdentifier","src":"3728:30:17"},"nativeSrc":"3728:32:17","nodeType":"YulFunctionCall","src":"3728:32:17"},"variables":[{"name":"zero_0","nativeSrc":"3718:6:17","nodeType":"YulTypedName","src":"3718:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3813:4:17","nodeType":"YulIdentifier","src":"3813:4:17"},{"name":"offset","nativeSrc":"3819:6:17","nodeType":"YulIdentifier","src":"3819:6:17"},{"name":"zero_0","nativeSrc":"3827:6:17","nodeType":"YulIdentifier","src":"3827:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3769:43:17","nodeType":"YulIdentifier","src":"3769:43:17"},"nativeSrc":"3769:65:17","nodeType":"YulFunctionCall","src":"3769:65:17"},"nativeSrc":"3769:65:17","nodeType":"YulExpressionStatement","src":"3769:65:17"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"3651:189:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3690:4:17","nodeType":"YulTypedName","src":"3690:4:17","type":""},{"name":"offset","nativeSrc":"3696:6:17","nodeType":"YulTypedName","src":"3696:6:17","type":""}],"src":"3651:189:17"},{"body":{"nativeSrc":"3896:136:17","nodeType":"YulBlock","src":"3896:136:17","statements":[{"body":{"nativeSrc":"3963:63:17","nodeType":"YulBlock","src":"3963:63:17","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"4007:5:17","nodeType":"YulIdentifier","src":"4007:5:17"},{"kind":"number","nativeSrc":"4014:1:17","nodeType":"YulLiteral","src":"4014:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"3977:29:17","nodeType":"YulIdentifier","src":"3977:29:17"},"nativeSrc":"3977:39:17","nodeType":"YulFunctionCall","src":"3977:39:17"},"nativeSrc":"3977:39:17","nodeType":"YulExpressionStatement","src":"3977:39:17"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"3916:5:17","nodeType":"YulIdentifier","src":"3916:5:17"},{"name":"end","nativeSrc":"3923:3:17","nodeType":"YulIdentifier","src":"3923:3:17"}],"functionName":{"name":"lt","nativeSrc":"3913:2:17","nodeType":"YulIdentifier","src":"3913:2:17"},"nativeSrc":"3913:14:17","nodeType":"YulFunctionCall","src":"3913:14:17"},"nativeSrc":"3906:120:17","nodeType":"YulForLoop","post":{"nativeSrc":"3928:26:17","nodeType":"YulBlock","src":"3928:26:17","statements":[{"nativeSrc":"3930:22:17","nodeType":"YulAssignment","src":"3930:22:17","value":{"arguments":[{"name":"start","nativeSrc":"3943:5:17","nodeType":"YulIdentifier","src":"3943:5:17"},{"kind":"number","nativeSrc":"3950:1:17","nodeType":"YulLiteral","src":"3950:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3939:3:17","nodeType":"YulIdentifier","src":"3939:3:17"},"nativeSrc":"3939:13:17","nodeType":"YulFunctionCall","src":"3939:13:17"},"variableNames":[{"name":"start","nativeSrc":"3930:5:17","nodeType":"YulIdentifier","src":"3930:5:17"}]}]},"pre":{"nativeSrc":"3910:2:17","nodeType":"YulBlock","src":"3910:2:17","statements":[]},"src":"3906:120:17"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"3846:186:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"3884:5:17","nodeType":"YulTypedName","src":"3884:5:17","type":""},{"name":"end","nativeSrc":"3891:3:17","nodeType":"YulTypedName","src":"3891:3:17","type":""}],"src":"3846:186:17"},{"body":{"nativeSrc":"4117:464:17","nodeType":"YulBlock","src":"4117:464:17","statements":[{"body":{"nativeSrc":"4143:431:17","nodeType":"YulBlock","src":"4143:431:17","statements":[{"nativeSrc":"4157:54:17","nodeType":"YulVariableDeclaration","src":"4157:54:17","value":{"arguments":[{"name":"array","nativeSrc":"4205:5:17","nodeType":"YulIdentifier","src":"4205:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4173:31:17","nodeType":"YulIdentifier","src":"4173:31:17"},"nativeSrc":"4173:38:17","nodeType":"YulFunctionCall","src":"4173:38:17"},"variables":[{"name":"dataArea","nativeSrc":"4161:8:17","nodeType":"YulTypedName","src":"4161:8:17","type":""}]},{"nativeSrc":"4224:63:17","nodeType":"YulVariableDeclaration","src":"4224:63:17","value":{"arguments":[{"name":"dataArea","nativeSrc":"4247:8:17","nodeType":"YulIdentifier","src":"4247:8:17"},{"arguments":[{"name":"startIndex","nativeSrc":"4275:10:17","nodeType":"YulIdentifier","src":"4275:10:17"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4257:17:17","nodeType":"YulIdentifier","src":"4257:17:17"},"nativeSrc":"4257:29:17","nodeType":"YulFunctionCall","src":"4257:29:17"}],"functionName":{"name":"add","nativeSrc":"4243:3:17","nodeType":"YulIdentifier","src":"4243:3:17"},"nativeSrc":"4243:44:17","nodeType":"YulFunctionCall","src":"4243:44:17"},"variables":[{"name":"deleteStart","nativeSrc":"4228:11:17","nodeType":"YulTypedName","src":"4228:11:17","type":""}]},{"body":{"nativeSrc":"4444:27:17","nodeType":"YulBlock","src":"4444:27:17","statements":[{"nativeSrc":"4446:23:17","nodeType":"YulAssignment","src":"4446:23:17","value":{"name":"dataArea","nativeSrc":"4461:8:17","nodeType":"YulIdentifier","src":"4461:8:17"},"variableNames":[{"name":"deleteStart","nativeSrc":"4446:11:17","nodeType":"YulIdentifier","src":"4446:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4428:10:17","nodeType":"YulIdentifier","src":"4428:10:17"},{"kind":"number","nativeSrc":"4440:2:17","nodeType":"YulLiteral","src":"4440:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4425:2:17","nodeType":"YulIdentifier","src":"4425:2:17"},"nativeSrc":"4425:18:17","nodeType":"YulFunctionCall","src":"4425:18:17"},"nativeSrc":"4422:49:17","nodeType":"YulIf","src":"4422:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"4513:11:17","nodeType":"YulIdentifier","src":"4513:11:17"},{"arguments":[{"name":"dataArea","nativeSrc":"4530:8:17","nodeType":"YulIdentifier","src":"4530:8:17"},{"arguments":[{"name":"len","nativeSrc":"4558:3:17","nodeType":"YulIdentifier","src":"4558:3:17"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4540:17:17","nodeType":"YulIdentifier","src":"4540:17:17"},"nativeSrc":"4540:22:17","nodeType":"YulFunctionCall","src":"4540:22:17"}],"functionName":{"name":"add","nativeSrc":"4526:3:17","nodeType":"YulIdentifier","src":"4526:3:17"},"nativeSrc":"4526:37:17","nodeType":"YulFunctionCall","src":"4526:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"4484:28:17","nodeType":"YulIdentifier","src":"4484:28:17"},"nativeSrc":"4484:80:17","nodeType":"YulFunctionCall","src":"4484:80:17"},"nativeSrc":"4484:80:17","nodeType":"YulExpressionStatement","src":"4484:80:17"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"4134:3:17","nodeType":"YulIdentifier","src":"4134:3:17"},{"kind":"number","nativeSrc":"4139:2:17","nodeType":"YulLiteral","src":"4139:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4131:2:17","nodeType":"YulIdentifier","src":"4131:2:17"},"nativeSrc":"4131:11:17","nodeType":"YulFunctionCall","src":"4131:11:17"},"nativeSrc":"4128:446:17","nodeType":"YulIf","src":"4128:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4038:543:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4093:5:17","nodeType":"YulTypedName","src":"4093:5:17","type":""},{"name":"len","nativeSrc":"4100:3:17","nodeType":"YulTypedName","src":"4100:3:17","type":""},{"name":"startIndex","nativeSrc":"4105:10:17","nodeType":"YulTypedName","src":"4105:10:17","type":""}],"src":"4038:543:17"},{"body":{"nativeSrc":"4650:54:17","nodeType":"YulBlock","src":"4650:54:17","statements":[{"nativeSrc":"4660:37:17","nodeType":"YulAssignment","src":"4660:37:17","value":{"arguments":[{"name":"bits","nativeSrc":"4685:4:17","nodeType":"YulIdentifier","src":"4685:4:17"},{"name":"value","nativeSrc":"4691:5:17","nodeType":"YulIdentifier","src":"4691:5:17"}],"functionName":{"name":"shr","nativeSrc":"4681:3:17","nodeType":"YulIdentifier","src":"4681:3:17"},"nativeSrc":"4681:16:17","nodeType":"YulFunctionCall","src":"4681:16:17"},"variableNames":[{"name":"newValue","nativeSrc":"4660:8:17","nodeType":"YulIdentifier","src":"4660:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"4587:117:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4625:4:17","nodeType":"YulTypedName","src":"4625:4:17","type":""},{"name":"value","nativeSrc":"4631:5:17","nodeType":"YulTypedName","src":"4631:5:17","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4641:8:17","nodeType":"YulTypedName","src":"4641:8:17","type":""}],"src":"4587:117:17"},{"body":{"nativeSrc":"4761:118:17","nodeType":"YulBlock","src":"4761:118:17","statements":[{"nativeSrc":"4771:68:17","nodeType":"YulVariableDeclaration","src":"4771:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4820:1:17","nodeType":"YulLiteral","src":"4820:1:17","type":"","value":"8"},{"name":"bytes","nativeSrc":"4823:5:17","nodeType":"YulIdentifier","src":"4823:5:17"}],"functionName":{"name":"mul","nativeSrc":"4816:3:17","nodeType":"YulIdentifier","src":"4816:3:17"},"nativeSrc":"4816:13:17","nodeType":"YulFunctionCall","src":"4816:13:17"},{"arguments":[{"kind":"number","nativeSrc":"4835:1:17","nodeType":"YulLiteral","src":"4835:1:17","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4831:3:17","nodeType":"YulIdentifier","src":"4831:3:17"},"nativeSrc":"4831:6:17","nodeType":"YulFunctionCall","src":"4831:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"4787:28:17","nodeType":"YulIdentifier","src":"4787:28:17"},"nativeSrc":"4787:51:17","nodeType":"YulFunctionCall","src":"4787:51:17"}],"functionName":{"name":"not","nativeSrc":"4783:3:17","nodeType":"YulIdentifier","src":"4783:3:17"},"nativeSrc":"4783:56:17","nodeType":"YulFunctionCall","src":"4783:56:17"},"variables":[{"name":"mask","nativeSrc":"4775:4:17","nodeType":"YulTypedName","src":"4775:4:17","type":""}]},{"nativeSrc":"4848:25:17","nodeType":"YulAssignment","src":"4848:25:17","value":{"arguments":[{"name":"data","nativeSrc":"4862:4:17","nodeType":"YulIdentifier","src":"4862:4:17"},{"name":"mask","nativeSrc":"4868:4:17","nodeType":"YulIdentifier","src":"4868:4:17"}],"functionName":{"name":"and","nativeSrc":"4858:3:17","nodeType":"YulIdentifier","src":"4858:3:17"},"nativeSrc":"4858:15:17","nodeType":"YulFunctionCall","src":"4858:15:17"},"variableNames":[{"name":"result","nativeSrc":"4848:6:17","nodeType":"YulIdentifier","src":"4848:6:17"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"4710:169:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4738:4:17","nodeType":"YulTypedName","src":"4738:4:17","type":""},{"name":"bytes","nativeSrc":"4744:5:17","nodeType":"YulTypedName","src":"4744:5:17","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4754:6:17","nodeType":"YulTypedName","src":"4754:6:17","type":""}],"src":"4710:169:17"},{"body":{"nativeSrc":"4965:214:17","nodeType":"YulBlock","src":"4965:214:17","statements":[{"nativeSrc":"5098:37:17","nodeType":"YulAssignment","src":"5098:37:17","value":{"arguments":[{"name":"data","nativeSrc":"5125:4:17","nodeType":"YulIdentifier","src":"5125:4:17"},{"name":"len","nativeSrc":"5131:3:17","nodeType":"YulIdentifier","src":"5131:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"5106:18:17","nodeType":"YulIdentifier","src":"5106:18:17"},"nativeSrc":"5106:29:17","nodeType":"YulFunctionCall","src":"5106:29:17"},"variableNames":[{"name":"data","nativeSrc":"5098:4:17","nodeType":"YulIdentifier","src":"5098:4:17"}]},{"nativeSrc":"5144:29:17","nodeType":"YulAssignment","src":"5144:29:17","value":{"arguments":[{"name":"data","nativeSrc":"5155:4:17","nodeType":"YulIdentifier","src":"5155:4:17"},{"arguments":[{"kind":"number","nativeSrc":"5165:1:17","nodeType":"YulLiteral","src":"5165:1:17","type":"","value":"2"},{"name":"len","nativeSrc":"5168:3:17","nodeType":"YulIdentifier","src":"5168:3:17"}],"functionName":{"name":"mul","nativeSrc":"5161:3:17","nodeType":"YulIdentifier","src":"5161:3:17"},"nativeSrc":"5161:11:17","nodeType":"YulFunctionCall","src":"5161:11:17"}],"functionName":{"name":"or","nativeSrc":"5152:2:17","nodeType":"YulIdentifier","src":"5152:2:17"},"nativeSrc":"5152:21:17","nodeType":"YulFunctionCall","src":"5152:21:17"},"variableNames":[{"name":"used","nativeSrc":"5144:4:17","nodeType":"YulIdentifier","src":"5144:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"4884:295:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4946:4:17","nodeType":"YulTypedName","src":"4946:4:17","type":""},{"name":"len","nativeSrc":"4952:3:17","nodeType":"YulTypedName","src":"4952:3:17","type":""}],"returnVariables":[{"name":"used","nativeSrc":"4960:4:17","nodeType":"YulTypedName","src":"4960:4:17","type":""}],"src":"4884:295:17"},{"body":{"nativeSrc":"5276:1303:17","nodeType":"YulBlock","src":"5276:1303:17","statements":[{"nativeSrc":"5287:51:17","nodeType":"YulVariableDeclaration","src":"5287:51:17","value":{"arguments":[{"name":"src","nativeSrc":"5334:3:17","nodeType":"YulIdentifier","src":"5334:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"5301:32:17","nodeType":"YulIdentifier","src":"5301:32:17"},"nativeSrc":"5301:37:17","nodeType":"YulFunctionCall","src":"5301:37:17"},"variables":[{"name":"newLen","nativeSrc":"5291:6:17","nodeType":"YulTypedName","src":"5291:6:17","type":""}]},{"body":{"nativeSrc":"5423:22:17","nodeType":"YulBlock","src":"5423:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5425:16:17","nodeType":"YulIdentifier","src":"5425:16:17"},"nativeSrc":"5425:18:17","nodeType":"YulFunctionCall","src":"5425:18:17"},"nativeSrc":"5425:18:17","nodeType":"YulExpressionStatement","src":"5425:18:17"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5395:6:17","nodeType":"YulIdentifier","src":"5395:6:17"},{"kind":"number","nativeSrc":"5403:18:17","nodeType":"YulLiteral","src":"5403:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5392:2:17","nodeType":"YulIdentifier","src":"5392:2:17"},"nativeSrc":"5392:30:17","nodeType":"YulFunctionCall","src":"5392:30:17"},"nativeSrc":"5389:56:17","nodeType":"YulIf","src":"5389:56:17"},{"nativeSrc":"5455:52:17","nodeType":"YulVariableDeclaration","src":"5455:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5501:4:17","nodeType":"YulIdentifier","src":"5501:4:17"}],"functionName":{"name":"sload","nativeSrc":"5495:5:17","nodeType":"YulIdentifier","src":"5495:5:17"},"nativeSrc":"5495:11:17","nodeType":"YulFunctionCall","src":"5495:11:17"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5469:25:17","nodeType":"YulIdentifier","src":"5469:25:17"},"nativeSrc":"5469:38:17","nodeType":"YulFunctionCall","src":"5469:38:17"},"variables":[{"name":"oldLen","nativeSrc":"5459:6:17","nodeType":"YulTypedName","src":"5459:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5600:4:17","nodeType":"YulIdentifier","src":"5600:4:17"},{"name":"oldLen","nativeSrc":"5606:6:17","nodeType":"YulIdentifier","src":"5606:6:17"},{"name":"newLen","nativeSrc":"5614:6:17","nodeType":"YulIdentifier","src":"5614:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5554:45:17","nodeType":"YulIdentifier","src":"5554:45:17"},"nativeSrc":"5554:67:17","nodeType":"YulFunctionCall","src":"5554:67:17"},"nativeSrc":"5554:67:17","nodeType":"YulExpressionStatement","src":"5554:67:17"},{"nativeSrc":"5631:18:17","nodeType":"YulVariableDeclaration","src":"5631:18:17","value":{"kind":"number","nativeSrc":"5648:1:17","nodeType":"YulLiteral","src":"5648:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5635:9:17","nodeType":"YulTypedName","src":"5635:9:17","type":""}]},{"nativeSrc":"5659:17:17","nodeType":"YulAssignment","src":"5659:17:17","value":{"kind":"number","nativeSrc":"5672:4:17","nodeType":"YulLiteral","src":"5672:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"5659:9:17","nodeType":"YulIdentifier","src":"5659:9:17"}]},{"cases":[{"body":{"nativeSrc":"5723:611:17","nodeType":"YulBlock","src":"5723:611:17","statements":[{"nativeSrc":"5737:37:17","nodeType":"YulVariableDeclaration","src":"5737:37:17","value":{"arguments":[{"name":"newLen","nativeSrc":"5756:6:17","nodeType":"YulIdentifier","src":"5756:6:17"},{"arguments":[{"kind":"number","nativeSrc":"5768:4:17","nodeType":"YulLiteral","src":"5768:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"5764:3:17","nodeType":"YulIdentifier","src":"5764:3:17"},"nativeSrc":"5764:9:17","nodeType":"YulFunctionCall","src":"5764:9:17"}],"functionName":{"name":"and","nativeSrc":"5752:3:17","nodeType":"YulIdentifier","src":"5752:3:17"},"nativeSrc":"5752:22:17","nodeType":"YulFunctionCall","src":"5752:22:17"},"variables":[{"name":"loopEnd","nativeSrc":"5741:7:17","nodeType":"YulTypedName","src":"5741:7:17","type":""}]},{"nativeSrc":"5788:51:17","nodeType":"YulVariableDeclaration","src":"5788:51:17","value":{"arguments":[{"name":"slot","nativeSrc":"5834:4:17","nodeType":"YulIdentifier","src":"5834:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"5802:31:17","nodeType":"YulIdentifier","src":"5802:31:17"},"nativeSrc":"5802:37:17","nodeType":"YulFunctionCall","src":"5802:37:17"},"variables":[{"name":"dstPtr","nativeSrc":"5792:6:17","nodeType":"YulTypedName","src":"5792:6:17","type":""}]},{"nativeSrc":"5852:10:17","nodeType":"YulVariableDeclaration","src":"5852:10:17","value":{"kind":"number","nativeSrc":"5861:1:17","nodeType":"YulLiteral","src":"5861:1:17","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5856:1:17","nodeType":"YulTypedName","src":"5856:1:17","type":""}]},{"body":{"nativeSrc":"5920:163:17","nodeType":"YulBlock","src":"5920:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"5945:6:17","nodeType":"YulIdentifier","src":"5945:6:17"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5963:3:17","nodeType":"YulIdentifier","src":"5963:3:17"},{"name":"srcOffset","nativeSrc":"5968:9:17","nodeType":"YulIdentifier","src":"5968:9:17"}],"functionName":{"name":"add","nativeSrc":"5959:3:17","nodeType":"YulIdentifier","src":"5959:3:17"},"nativeSrc":"5959:19:17","nodeType":"YulFunctionCall","src":"5959:19:17"}],"functionName":{"name":"mload","nativeSrc":"5953:5:17","nodeType":"YulIdentifier","src":"5953:5:17"},"nativeSrc":"5953:26:17","nodeType":"YulFunctionCall","src":"5953:26:17"}],"functionName":{"name":"sstore","nativeSrc":"5938:6:17","nodeType":"YulIdentifier","src":"5938:6:17"},"nativeSrc":"5938:42:17","nodeType":"YulFunctionCall","src":"5938:42:17"},"nativeSrc":"5938:42:17","nodeType":"YulExpressionStatement","src":"5938:42:17"},{"nativeSrc":"5997:24:17","nodeType":"YulAssignment","src":"5997:24:17","value":{"arguments":[{"name":"dstPtr","nativeSrc":"6011:6:17","nodeType":"YulIdentifier","src":"6011:6:17"},{"kind":"number","nativeSrc":"6019:1:17","nodeType":"YulLiteral","src":"6019:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6007:3:17","nodeType":"YulIdentifier","src":"6007:3:17"},"nativeSrc":"6007:14:17","nodeType":"YulFunctionCall","src":"6007:14:17"},"variableNames":[{"name":"dstPtr","nativeSrc":"5997:6:17","nodeType":"YulIdentifier","src":"5997:6:17"}]},{"nativeSrc":"6038:31:17","nodeType":"YulAssignment","src":"6038:31:17","value":{"arguments":[{"name":"srcOffset","nativeSrc":"6055:9:17","nodeType":"YulIdentifier","src":"6055:9:17"},{"kind":"number","nativeSrc":"6066:2:17","nodeType":"YulLiteral","src":"6066:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6051:3:17","nodeType":"YulIdentifier","src":"6051:3:17"},"nativeSrc":"6051:18:17","nodeType":"YulFunctionCall","src":"6051:18:17"},"variableNames":[{"name":"srcOffset","nativeSrc":"6038:9:17","nodeType":"YulIdentifier","src":"6038:9:17"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5886:1:17","nodeType":"YulIdentifier","src":"5886:1:17"},{"name":"loopEnd","nativeSrc":"5889:7:17","nodeType":"YulIdentifier","src":"5889:7:17"}],"functionName":{"name":"lt","nativeSrc":"5883:2:17","nodeType":"YulIdentifier","src":"5883:2:17"},"nativeSrc":"5883:14:17","nodeType":"YulFunctionCall","src":"5883:14:17"},"nativeSrc":"5875:208:17","nodeType":"YulForLoop","post":{"nativeSrc":"5898:21:17","nodeType":"YulBlock","src":"5898:21:17","statements":[{"nativeSrc":"5900:17:17","nodeType":"YulAssignment","src":"5900:17:17","value":{"arguments":[{"name":"i","nativeSrc":"5909:1:17","nodeType":"YulIdentifier","src":"5909:1:17"},{"kind":"number","nativeSrc":"5912:4:17","nodeType":"YulLiteral","src":"5912:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5905:3:17","nodeType":"YulIdentifier","src":"5905:3:17"},"nativeSrc":"5905:12:17","nodeType":"YulFunctionCall","src":"5905:12:17"},"variableNames":[{"name":"i","nativeSrc":"5900:1:17","nodeType":"YulIdentifier","src":"5900:1:17"}]}]},"pre":{"nativeSrc":"5879:3:17","nodeType":"YulBlock","src":"5879:3:17","statements":[]},"src":"5875:208:17"},{"body":{"nativeSrc":"6119:156:17","nodeType":"YulBlock","src":"6119:156:17","statements":[{"nativeSrc":"6137:43:17","nodeType":"YulVariableDeclaration","src":"6137:43:17","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6164:3:17","nodeType":"YulIdentifier","src":"6164:3:17"},{"name":"srcOffset","nativeSrc":"6169:9:17","nodeType":"YulIdentifier","src":"6169:9:17"}],"functionName":{"name":"add","nativeSrc":"6160:3:17","nodeType":"YulIdentifier","src":"6160:3:17"},"nativeSrc":"6160:19:17","nodeType":"YulFunctionCall","src":"6160:19:17"}],"functionName":{"name":"mload","nativeSrc":"6154:5:17","nodeType":"YulIdentifier","src":"6154:5:17"},"nativeSrc":"6154:26:17","nodeType":"YulFunctionCall","src":"6154:26:17"},"variables":[{"name":"lastValue","nativeSrc":"6141:9:17","nodeType":"YulTypedName","src":"6141:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6204:6:17","nodeType":"YulIdentifier","src":"6204:6:17"},{"arguments":[{"name":"lastValue","nativeSrc":"6231:9:17","nodeType":"YulIdentifier","src":"6231:9:17"},{"arguments":[{"name":"newLen","nativeSrc":"6246:6:17","nodeType":"YulIdentifier","src":"6246:6:17"},{"kind":"number","nativeSrc":"6254:4:17","nodeType":"YulLiteral","src":"6254:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"6242:3:17","nodeType":"YulIdentifier","src":"6242:3:17"},"nativeSrc":"6242:17:17","nodeType":"YulFunctionCall","src":"6242:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"6212:18:17","nodeType":"YulIdentifier","src":"6212:18:17"},"nativeSrc":"6212:48:17","nodeType":"YulFunctionCall","src":"6212:48:17"}],"functionName":{"name":"sstore","nativeSrc":"6197:6:17","nodeType":"YulIdentifier","src":"6197:6:17"},"nativeSrc":"6197:64:17","nodeType":"YulFunctionCall","src":"6197:64:17"},"nativeSrc":"6197:64:17","nodeType":"YulExpressionStatement","src":"6197:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"6102:7:17","nodeType":"YulIdentifier","src":"6102:7:17"},{"name":"newLen","nativeSrc":"6111:6:17","nodeType":"YulIdentifier","src":"6111:6:17"}],"functionName":{"name":"lt","nativeSrc":"6099:2:17","nodeType":"YulIdentifier","src":"6099:2:17"},"nativeSrc":"6099:19:17","nodeType":"YulFunctionCall","src":"6099:19:17"},"nativeSrc":"6096:179:17","nodeType":"YulIf","src":"6096:179:17"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6295:4:17","nodeType":"YulIdentifier","src":"6295:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"6309:6:17","nodeType":"YulIdentifier","src":"6309:6:17"},{"kind":"number","nativeSrc":"6317:1:17","nodeType":"YulLiteral","src":"6317:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"6305:3:17","nodeType":"YulIdentifier","src":"6305:3:17"},"nativeSrc":"6305:14:17","nodeType":"YulFunctionCall","src":"6305:14:17"},{"kind":"number","nativeSrc":"6321:1:17","nodeType":"YulLiteral","src":"6321:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6301:3:17","nodeType":"YulIdentifier","src":"6301:3:17"},"nativeSrc":"6301:22:17","nodeType":"YulFunctionCall","src":"6301:22:17"}],"functionName":{"name":"sstore","nativeSrc":"6288:6:17","nodeType":"YulIdentifier","src":"6288:6:17"},"nativeSrc":"6288:36:17","nodeType":"YulFunctionCall","src":"6288:36:17"},"nativeSrc":"6288:36:17","nodeType":"YulExpressionStatement","src":"6288:36:17"}]},"nativeSrc":"5716:618:17","nodeType":"YulCase","src":"5716:618:17","value":{"kind":"number","nativeSrc":"5721:1:17","nodeType":"YulLiteral","src":"5721:1:17","type":"","value":"1"}},{"body":{"nativeSrc":"6351:222:17","nodeType":"YulBlock","src":"6351:222:17","statements":[{"nativeSrc":"6365:14:17","nodeType":"YulVariableDeclaration","src":"6365:14:17","value":{"kind":"number","nativeSrc":"6378:1:17","nodeType":"YulLiteral","src":"6378:1:17","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"6369:5:17","nodeType":"YulTypedName","src":"6369:5:17","type":""}]},{"body":{"nativeSrc":"6402:67:17","nodeType":"YulBlock","src":"6402:67:17","statements":[{"nativeSrc":"6420:35:17","nodeType":"YulAssignment","src":"6420:35:17","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6439:3:17","nodeType":"YulIdentifier","src":"6439:3:17"},{"name":"srcOffset","nativeSrc":"6444:9:17","nodeType":"YulIdentifier","src":"6444:9:17"}],"functionName":{"name":"add","nativeSrc":"6435:3:17","nodeType":"YulIdentifier","src":"6435:3:17"},"nativeSrc":"6435:19:17","nodeType":"YulFunctionCall","src":"6435:19:17"}],"functionName":{"name":"mload","nativeSrc":"6429:5:17","nodeType":"YulIdentifier","src":"6429:5:17"},"nativeSrc":"6429:26:17","nodeType":"YulFunctionCall","src":"6429:26:17"},"variableNames":[{"name":"value","nativeSrc":"6420:5:17","nodeType":"YulIdentifier","src":"6420:5:17"}]}]},"condition":{"name":"newLen","nativeSrc":"6395:6:17","nodeType":"YulIdentifier","src":"6395:6:17"},"nativeSrc":"6392:77:17","nodeType":"YulIf","src":"6392:77:17"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6489:4:17","nodeType":"YulIdentifier","src":"6489:4:17"},{"arguments":[{"name":"value","nativeSrc":"6548:5:17","nodeType":"YulIdentifier","src":"6548:5:17"},{"name":"newLen","nativeSrc":"6555:6:17","nodeType":"YulIdentifier","src":"6555:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6495:52:17","nodeType":"YulIdentifier","src":"6495:52:17"},"nativeSrc":"6495:67:17","nodeType":"YulFunctionCall","src":"6495:67:17"}],"functionName":{"name":"sstore","nativeSrc":"6482:6:17","nodeType":"YulIdentifier","src":"6482:6:17"},"nativeSrc":"6482:81:17","nodeType":"YulFunctionCall","src":"6482:81:17"},"nativeSrc":"6482:81:17","nodeType":"YulExpressionStatement","src":"6482:81:17"}]},"nativeSrc":"6343:230:17","nodeType":"YulCase","src":"6343:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"5696:6:17","nodeType":"YulIdentifier","src":"5696:6:17"},{"kind":"number","nativeSrc":"5704:2:17","nodeType":"YulLiteral","src":"5704:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5693:2:17","nodeType":"YulIdentifier","src":"5693:2:17"},"nativeSrc":"5693:14:17","nodeType":"YulFunctionCall","src":"5693:14:17"},"nativeSrc":"5686:887:17","nodeType":"YulSwitch","src":"5686:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"5184:1395:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5265:4:17","nodeType":"YulTypedName","src":"5265:4:17","type":""},{"name":"src","nativeSrc":"5271:3:17","nodeType":"YulTypedName","src":"5271:3:17","type":""}],"src":"5184:1395:17"},{"body":{"nativeSrc":"6650:53:17","nodeType":"YulBlock","src":"6650:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6667:3:17","nodeType":"YulIdentifier","src":"6667:3:17"},{"arguments":[{"name":"value","nativeSrc":"6690:5:17","nodeType":"YulIdentifier","src":"6690:5:17"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6672:17:17","nodeType":"YulIdentifier","src":"6672:17:17"},"nativeSrc":"6672:24:17","nodeType":"YulFunctionCall","src":"6672:24:17"}],"functionName":{"name":"mstore","nativeSrc":"6660:6:17","nodeType":"YulIdentifier","src":"6660:6:17"},"nativeSrc":"6660:37:17","nodeType":"YulFunctionCall","src":"6660:37:17"},"nativeSrc":"6660:37:17","nodeType":"YulExpressionStatement","src":"6660:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6585:118:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6638:5:17","nodeType":"YulTypedName","src":"6638:5:17","type":""},{"name":"pos","nativeSrc":"6645:3:17","nodeType":"YulTypedName","src":"6645:3:17","type":""}],"src":"6585:118:17"},{"body":{"nativeSrc":"6807:124:17","nodeType":"YulBlock","src":"6807:124:17","statements":[{"nativeSrc":"6817:26:17","nodeType":"YulAssignment","src":"6817:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"6829:9:17","nodeType":"YulIdentifier","src":"6829:9:17"},{"kind":"number","nativeSrc":"6840:2:17","nodeType":"YulLiteral","src":"6840:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6825:3:17","nodeType":"YulIdentifier","src":"6825:3:17"},"nativeSrc":"6825:18:17","nodeType":"YulFunctionCall","src":"6825:18:17"},"variableNames":[{"name":"tail","nativeSrc":"6817:4:17","nodeType":"YulIdentifier","src":"6817:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6897:6:17","nodeType":"YulIdentifier","src":"6897:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"6910:9:17","nodeType":"YulIdentifier","src":"6910:9:17"},{"kind":"number","nativeSrc":"6921:1:17","nodeType":"YulLiteral","src":"6921:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6906:3:17","nodeType":"YulIdentifier","src":"6906:3:17"},"nativeSrc":"6906:17:17","nodeType":"YulFunctionCall","src":"6906:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6853:43:17","nodeType":"YulIdentifier","src":"6853:43:17"},"nativeSrc":"6853:71:17","nodeType":"YulFunctionCall","src":"6853:71:17"},"nativeSrc":"6853:71:17","nodeType":"YulExpressionStatement","src":"6853:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6709:222:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6779:9:17","nodeType":"YulTypedName","src":"6779:9:17","type":""},{"name":"value0","nativeSrc":"6791:6:17","nodeType":"YulTypedName","src":"6791:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6802:4:17","nodeType":"YulTypedName","src":"6802:4:17","type":""}],"src":"6709:222:17"},{"body":{"nativeSrc":"6965:152:17","nodeType":"YulBlock","src":"6965:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6982:1:17","nodeType":"YulLiteral","src":"6982:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"6985:77:17","nodeType":"YulLiteral","src":"6985:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6975:6:17","nodeType":"YulIdentifier","src":"6975:6:17"},"nativeSrc":"6975:88:17","nodeType":"YulFunctionCall","src":"6975:88:17"},"nativeSrc":"6975:88:17","nodeType":"YulExpressionStatement","src":"6975:88:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7079:1:17","nodeType":"YulLiteral","src":"7079:1:17","type":"","value":"4"},{"kind":"number","nativeSrc":"7082:4:17","nodeType":"YulLiteral","src":"7082:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7072:6:17","nodeType":"YulIdentifier","src":"7072:6:17"},"nativeSrc":"7072:15:17","nodeType":"YulFunctionCall","src":"7072:15:17"},"nativeSrc":"7072:15:17","nodeType":"YulExpressionStatement","src":"7072:15:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7103:1:17","nodeType":"YulLiteral","src":"7103:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"7106:4:17","nodeType":"YulLiteral","src":"7106:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7096:6:17","nodeType":"YulIdentifier","src":"7096:6:17"},"nativeSrc":"7096:15:17","nodeType":"YulFunctionCall","src":"7096:15:17"},"nativeSrc":"7096:15:17","nodeType":"YulExpressionStatement","src":"7096:15:17"}]},"name":"panic_error_0x11","nativeSrc":"6937:180:17","nodeType":"YulFunctionDefinition","src":"6937:180:17"},{"body":{"nativeSrc":"7174:51:17","nodeType":"YulBlock","src":"7174:51:17","statements":[{"nativeSrc":"7184:34:17","nodeType":"YulAssignment","src":"7184:34:17","value":{"arguments":[{"kind":"number","nativeSrc":"7209:1:17","nodeType":"YulLiteral","src":"7209:1:17","type":"","value":"1"},{"name":"value","nativeSrc":"7212:5:17","nodeType":"YulIdentifier","src":"7212:5:17"}],"functionName":{"name":"shr","nativeSrc":"7205:3:17","nodeType":"YulIdentifier","src":"7205:3:17"},"nativeSrc":"7205:13:17","nodeType":"YulFunctionCall","src":"7205:13:17"},"variableNames":[{"name":"newValue","nativeSrc":"7184:8:17","nodeType":"YulIdentifier","src":"7184:8:17"}]}]},"name":"shift_right_1_unsigned","nativeSrc":"7123:102:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7155:5:17","nodeType":"YulTypedName","src":"7155:5:17","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"7165:8:17","nodeType":"YulTypedName","src":"7165:8:17","type":""}],"src":"7123:102:17"},{"body":{"nativeSrc":"7304:775:17","nodeType":"YulBlock","src":"7304:775:17","statements":[{"nativeSrc":"7314:15:17","nodeType":"YulAssignment","src":"7314:15:17","value":{"name":"_power","nativeSrc":"7323:6:17","nodeType":"YulIdentifier","src":"7323:6:17"},"variableNames":[{"name":"power","nativeSrc":"7314:5:17","nodeType":"YulIdentifier","src":"7314:5:17"}]},{"nativeSrc":"7338:14:17","nodeType":"YulAssignment","src":"7338:14:17","value":{"name":"_base","nativeSrc":"7347:5:17","nodeType":"YulIdentifier","src":"7347:5:17"},"variableNames":[{"name":"base","nativeSrc":"7338:4:17","nodeType":"YulIdentifier","src":"7338:4:17"}]},{"body":{"nativeSrc":"7396:677:17","nodeType":"YulBlock","src":"7396:677:17","statements":[{"body":{"nativeSrc":"7484:22:17","nodeType":"YulBlock","src":"7484:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7486:16:17","nodeType":"YulIdentifier","src":"7486:16:17"},"nativeSrc":"7486:18:17","nodeType":"YulFunctionCall","src":"7486:18:17"},"nativeSrc":"7486:18:17","nodeType":"YulExpressionStatement","src":"7486:18:17"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"7462:4:17","nodeType":"YulIdentifier","src":"7462:4:17"},{"arguments":[{"name":"max","nativeSrc":"7472:3:17","nodeType":"YulIdentifier","src":"7472:3:17"},{"name":"base","nativeSrc":"7477:4:17","nodeType":"YulIdentifier","src":"7477:4:17"}],"functionName":{"name":"div","nativeSrc":"7468:3:17","nodeType":"YulIdentifier","src":"7468:3:17"},"nativeSrc":"7468:14:17","nodeType":"YulFunctionCall","src":"7468:14:17"}],"functionName":{"name":"gt","nativeSrc":"7459:2:17","nodeType":"YulIdentifier","src":"7459:2:17"},"nativeSrc":"7459:24:17","nodeType":"YulFunctionCall","src":"7459:24:17"},"nativeSrc":"7456:50:17","nodeType":"YulIf","src":"7456:50:17"},{"body":{"nativeSrc":"7551:419:17","nodeType":"YulBlock","src":"7551:419:17","statements":[{"nativeSrc":"7931:25:17","nodeType":"YulAssignment","src":"7931:25:17","value":{"arguments":[{"name":"power","nativeSrc":"7944:5:17","nodeType":"YulIdentifier","src":"7944:5:17"},{"name":"base","nativeSrc":"7951:4:17","nodeType":"YulIdentifier","src":"7951:4:17"}],"functionName":{"name":"mul","nativeSrc":"7940:3:17","nodeType":"YulIdentifier","src":"7940:3:17"},"nativeSrc":"7940:16:17","nodeType":"YulFunctionCall","src":"7940:16:17"},"variableNames":[{"name":"power","nativeSrc":"7931:5:17","nodeType":"YulIdentifier","src":"7931:5:17"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"7526:8:17","nodeType":"YulIdentifier","src":"7526:8:17"},{"kind":"number","nativeSrc":"7536:1:17","nodeType":"YulLiteral","src":"7536:1:17","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"7522:3:17","nodeType":"YulIdentifier","src":"7522:3:17"},"nativeSrc":"7522:16:17","nodeType":"YulFunctionCall","src":"7522:16:17"},"nativeSrc":"7519:451:17","nodeType":"YulIf","src":"7519:451:17"},{"nativeSrc":"7983:23:17","nodeType":"YulAssignment","src":"7983:23:17","value":{"arguments":[{"name":"base","nativeSrc":"7995:4:17","nodeType":"YulIdentifier","src":"7995:4:17"},{"name":"base","nativeSrc":"8001:4:17","nodeType":"YulIdentifier","src":"8001:4:17"}],"functionName":{"name":"mul","nativeSrc":"7991:3:17","nodeType":"YulIdentifier","src":"7991:3:17"},"nativeSrc":"7991:15:17","nodeType":"YulFunctionCall","src":"7991:15:17"},"variableNames":[{"name":"base","nativeSrc":"7983:4:17","nodeType":"YulIdentifier","src":"7983:4:17"}]},{"nativeSrc":"8019:44:17","nodeType":"YulAssignment","src":"8019:44:17","value":{"arguments":[{"name":"exponent","nativeSrc":"8054:8:17","nodeType":"YulIdentifier","src":"8054:8:17"}],"functionName":{"name":"shift_right_1_unsigned","nativeSrc":"8031:22:17","nodeType":"YulIdentifier","src":"8031:22:17"},"nativeSrc":"8031:32:17","nodeType":"YulFunctionCall","src":"8031:32:17"},"variableNames":[{"name":"exponent","nativeSrc":"8019:8:17","nodeType":"YulIdentifier","src":"8019:8:17"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"7372:8:17","nodeType":"YulIdentifier","src":"7372:8:17"},{"kind":"number","nativeSrc":"7382:1:17","nodeType":"YulLiteral","src":"7382:1:17","type":"","value":"1"}],"functionName":{"name":"gt","nativeSrc":"7369:2:17","nodeType":"YulIdentifier","src":"7369:2:17"},"nativeSrc":"7369:15:17","nodeType":"YulFunctionCall","src":"7369:15:17"},"nativeSrc":"7361:712:17","nodeType":"YulForLoop","post":{"nativeSrc":"7385:2:17","nodeType":"YulBlock","src":"7385:2:17","statements":[]},"pre":{"nativeSrc":"7365:3:17","nodeType":"YulBlock","src":"7365:3:17","statements":[]},"src":"7361:712:17"}]},"name":"checked_exp_helper","nativeSrc":"7231:848:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nativeSrc":"7259:6:17","nodeType":"YulTypedName","src":"7259:6:17","type":""},{"name":"_base","nativeSrc":"7267:5:17","nodeType":"YulTypedName","src":"7267:5:17","type":""},{"name":"exponent","nativeSrc":"7274:8:17","nodeType":"YulTypedName","src":"7274:8:17","type":""},{"name":"max","nativeSrc":"7284:3:17","nodeType":"YulTypedName","src":"7284:3:17","type":""}],"returnVariables":[{"name":"power","nativeSrc":"7292:5:17","nodeType":"YulTypedName","src":"7292:5:17","type":""},{"name":"base","nativeSrc":"7299:4:17","nodeType":"YulTypedName","src":"7299:4:17","type":""}],"src":"7231:848:17"},{"body":{"nativeSrc":"8145:1013:17","nodeType":"YulBlock","src":"8145:1013:17","statements":[{"body":{"nativeSrc":"8340:20:17","nodeType":"YulBlock","src":"8340:20:17","statements":[{"nativeSrc":"8342:10:17","nodeType":"YulAssignment","src":"8342:10:17","value":{"kind":"number","nativeSrc":"8351:1:17","nodeType":"YulLiteral","src":"8351:1:17","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"8342:5:17","nodeType":"YulIdentifier","src":"8342:5:17"}]},{"nativeSrc":"8353:5:17","nodeType":"YulLeave","src":"8353:5:17"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"8330:8:17","nodeType":"YulIdentifier","src":"8330:8:17"}],"functionName":{"name":"iszero","nativeSrc":"8323:6:17","nodeType":"YulIdentifier","src":"8323:6:17"},"nativeSrc":"8323:16:17","nodeType":"YulFunctionCall","src":"8323:16:17"},"nativeSrc":"8320:40:17","nodeType":"YulIf","src":"8320:40:17"},{"body":{"nativeSrc":"8385:20:17","nodeType":"YulBlock","src":"8385:20:17","statements":[{"nativeSrc":"8387:10:17","nodeType":"YulAssignment","src":"8387:10:17","value":{"kind":"number","nativeSrc":"8396:1:17","nodeType":"YulLiteral","src":"8396:1:17","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"8387:5:17","nodeType":"YulIdentifier","src":"8387:5:17"}]},{"nativeSrc":"8398:5:17","nodeType":"YulLeave","src":"8398:5:17"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"8379:4:17","nodeType":"YulIdentifier","src":"8379:4:17"}],"functionName":{"name":"iszero","nativeSrc":"8372:6:17","nodeType":"YulIdentifier","src":"8372:6:17"},"nativeSrc":"8372:12:17","nodeType":"YulFunctionCall","src":"8372:12:17"},"nativeSrc":"8369:36:17","nodeType":"YulIf","src":"8369:36:17"},{"cases":[{"body":{"nativeSrc":"8515:20:17","nodeType":"YulBlock","src":"8515:20:17","statements":[{"nativeSrc":"8517:10:17","nodeType":"YulAssignment","src":"8517:10:17","value":{"kind":"number","nativeSrc":"8526:1:17","nodeType":"YulLiteral","src":"8526:1:17","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"8517:5:17","nodeType":"YulIdentifier","src":"8517:5:17"}]},{"nativeSrc":"8528:5:17","nodeType":"YulLeave","src":"8528:5:17"}]},"nativeSrc":"8508:27:17","nodeType":"YulCase","src":"8508:27:17","value":{"kind":"number","nativeSrc":"8513:1:17","nodeType":"YulLiteral","src":"8513:1:17","type":"","value":"1"}},{"body":{"nativeSrc":"8559:176:17","nodeType":"YulBlock","src":"8559:176:17","statements":[{"body":{"nativeSrc":"8594:22:17","nodeType":"YulBlock","src":"8594:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8596:16:17","nodeType":"YulIdentifier","src":"8596:16:17"},"nativeSrc":"8596:18:17","nodeType":"YulFunctionCall","src":"8596:18:17"},"nativeSrc":"8596:18:17","nodeType":"YulExpressionStatement","src":"8596:18:17"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"8579:8:17","nodeType":"YulIdentifier","src":"8579:8:17"},{"kind":"number","nativeSrc":"8589:3:17","nodeType":"YulLiteral","src":"8589:3:17","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"8576:2:17","nodeType":"YulIdentifier","src":"8576:2:17"},"nativeSrc":"8576:17:17","nodeType":"YulFunctionCall","src":"8576:17:17"},"nativeSrc":"8573:43:17","nodeType":"YulIf","src":"8573:43:17"},{"nativeSrc":"8629:25:17","nodeType":"YulAssignment","src":"8629:25:17","value":{"arguments":[{"kind":"number","nativeSrc":"8642:1:17","nodeType":"YulLiteral","src":"8642:1:17","type":"","value":"2"},{"name":"exponent","nativeSrc":"8645:8:17","nodeType":"YulIdentifier","src":"8645:8:17"}],"functionName":{"name":"exp","nativeSrc":"8638:3:17","nodeType":"YulIdentifier","src":"8638:3:17"},"nativeSrc":"8638:16:17","nodeType":"YulFunctionCall","src":"8638:16:17"},"variableNames":[{"name":"power","nativeSrc":"8629:5:17","nodeType":"YulIdentifier","src":"8629:5:17"}]},{"body":{"nativeSrc":"8685:22:17","nodeType":"YulBlock","src":"8685:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8687:16:17","nodeType":"YulIdentifier","src":"8687:16:17"},"nativeSrc":"8687:18:17","nodeType":"YulFunctionCall","src":"8687:18:17"},"nativeSrc":"8687:18:17","nodeType":"YulExpressionStatement","src":"8687:18:17"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"8673:5:17","nodeType":"YulIdentifier","src":"8673:5:17"},{"name":"max","nativeSrc":"8680:3:17","nodeType":"YulIdentifier","src":"8680:3:17"}],"functionName":{"name":"gt","nativeSrc":"8670:2:17","nodeType":"YulIdentifier","src":"8670:2:17"},"nativeSrc":"8670:14:17","nodeType":"YulFunctionCall","src":"8670:14:17"},"nativeSrc":"8667:40:17","nodeType":"YulIf","src":"8667:40:17"},{"nativeSrc":"8720:5:17","nodeType":"YulLeave","src":"8720:5:17"}]},"nativeSrc":"8544:191:17","nodeType":"YulCase","src":"8544:191:17","value":{"kind":"number","nativeSrc":"8549:1:17","nodeType":"YulLiteral","src":"8549:1:17","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"8465:4:17","nodeType":"YulIdentifier","src":"8465:4:17"},"nativeSrc":"8458:277:17","nodeType":"YulSwitch","src":"8458:277:17"},{"body":{"nativeSrc":"8867:123:17","nodeType":"YulBlock","src":"8867:123:17","statements":[{"nativeSrc":"8881:28:17","nodeType":"YulAssignment","src":"8881:28:17","value":{"arguments":[{"name":"base","nativeSrc":"8894:4:17","nodeType":"YulIdentifier","src":"8894:4:17"},{"name":"exponent","nativeSrc":"8900:8:17","nodeType":"YulIdentifier","src":"8900:8:17"}],"functionName":{"name":"exp","nativeSrc":"8890:3:17","nodeType":"YulIdentifier","src":"8890:3:17"},"nativeSrc":"8890:19:17","nodeType":"YulFunctionCall","src":"8890:19:17"},"variableNames":[{"name":"power","nativeSrc":"8881:5:17","nodeType":"YulIdentifier","src":"8881:5:17"}]},{"body":{"nativeSrc":"8940:22:17","nodeType":"YulBlock","src":"8940:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8942:16:17","nodeType":"YulIdentifier","src":"8942:16:17"},"nativeSrc":"8942:18:17","nodeType":"YulFunctionCall","src":"8942:18:17"},"nativeSrc":"8942:18:17","nodeType":"YulExpressionStatement","src":"8942:18:17"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"8928:5:17","nodeType":"YulIdentifier","src":"8928:5:17"},{"name":"max","nativeSrc":"8935:3:17","nodeType":"YulIdentifier","src":"8935:3:17"}],"functionName":{"name":"gt","nativeSrc":"8925:2:17","nodeType":"YulIdentifier","src":"8925:2:17"},"nativeSrc":"8925:14:17","nodeType":"YulFunctionCall","src":"8925:14:17"},"nativeSrc":"8922:40:17","nodeType":"YulIf","src":"8922:40:17"},{"nativeSrc":"8975:5:17","nodeType":"YulLeave","src":"8975:5:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"8770:4:17","nodeType":"YulIdentifier","src":"8770:4:17"},{"kind":"number","nativeSrc":"8776:2:17","nodeType":"YulLiteral","src":"8776:2:17","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"8767:2:17","nodeType":"YulIdentifier","src":"8767:2:17"},"nativeSrc":"8767:12:17","nodeType":"YulFunctionCall","src":"8767:12:17"},{"arguments":[{"name":"exponent","nativeSrc":"8784:8:17","nodeType":"YulIdentifier","src":"8784:8:17"},{"kind":"number","nativeSrc":"8794:2:17","nodeType":"YulLiteral","src":"8794:2:17","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"8781:2:17","nodeType":"YulIdentifier","src":"8781:2:17"},"nativeSrc":"8781:16:17","nodeType":"YulFunctionCall","src":"8781:16:17"}],"functionName":{"name":"and","nativeSrc":"8763:3:17","nodeType":"YulIdentifier","src":"8763:3:17"},"nativeSrc":"8763:35:17","nodeType":"YulFunctionCall","src":"8763:35:17"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"8819:4:17","nodeType":"YulIdentifier","src":"8819:4:17"},{"kind":"number","nativeSrc":"8825:3:17","nodeType":"YulLiteral","src":"8825:3:17","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"8816:2:17","nodeType":"YulIdentifier","src":"8816:2:17"},"nativeSrc":"8816:13:17","nodeType":"YulFunctionCall","src":"8816:13:17"},{"arguments":[{"name":"exponent","nativeSrc":"8834:8:17","nodeType":"YulIdentifier","src":"8834:8:17"},{"kind":"number","nativeSrc":"8844:2:17","nodeType":"YulLiteral","src":"8844:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"8831:2:17","nodeType":"YulIdentifier","src":"8831:2:17"},"nativeSrc":"8831:16:17","nodeType":"YulFunctionCall","src":"8831:16:17"}],"functionName":{"name":"and","nativeSrc":"8812:3:17","nodeType":"YulIdentifier","src":"8812:3:17"},"nativeSrc":"8812:36:17","nodeType":"YulFunctionCall","src":"8812:36:17"}],"functionName":{"name":"or","nativeSrc":"8747:2:17","nodeType":"YulIdentifier","src":"8747:2:17"},"nativeSrc":"8747:111:17","nodeType":"YulFunctionCall","src":"8747:111:17"},"nativeSrc":"8744:246:17","nodeType":"YulIf","src":"8744:246:17"},{"nativeSrc":"9000:57:17","nodeType":"YulAssignment","src":"9000:57:17","value":{"arguments":[{"kind":"number","nativeSrc":"9034:1:17","nodeType":"YulLiteral","src":"9034:1:17","type":"","value":"1"},{"name":"base","nativeSrc":"9037:4:17","nodeType":"YulIdentifier","src":"9037:4:17"},{"name":"exponent","nativeSrc":"9043:8:17","nodeType":"YulIdentifier","src":"9043:8:17"},{"name":"max","nativeSrc":"9053:3:17","nodeType":"YulIdentifier","src":"9053:3:17"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"9015:18:17","nodeType":"YulIdentifier","src":"9015:18:17"},"nativeSrc":"9015:42:17","nodeType":"YulFunctionCall","src":"9015:42:17"},"variableNames":[{"name":"power","nativeSrc":"9000:5:17","nodeType":"YulIdentifier","src":"9000:5:17"},{"name":"base","nativeSrc":"9007:4:17","nodeType":"YulIdentifier","src":"9007:4:17"}]},{"body":{"nativeSrc":"9096:22:17","nodeType":"YulBlock","src":"9096:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9098:16:17","nodeType":"YulIdentifier","src":"9098:16:17"},"nativeSrc":"9098:18:17","nodeType":"YulFunctionCall","src":"9098:18:17"},"nativeSrc":"9098:18:17","nodeType":"YulExpressionStatement","src":"9098:18:17"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"9073:5:17","nodeType":"YulIdentifier","src":"9073:5:17"},{"arguments":[{"name":"max","nativeSrc":"9084:3:17","nodeType":"YulIdentifier","src":"9084:3:17"},{"name":"base","nativeSrc":"9089:4:17","nodeType":"YulIdentifier","src":"9089:4:17"}],"functionName":{"name":"div","nativeSrc":"9080:3:17","nodeType":"YulIdentifier","src":"9080:3:17"},"nativeSrc":"9080:14:17","nodeType":"YulFunctionCall","src":"9080:14:17"}],"functionName":{"name":"gt","nativeSrc":"9070:2:17","nodeType":"YulIdentifier","src":"9070:2:17"},"nativeSrc":"9070:25:17","nodeType":"YulFunctionCall","src":"9070:25:17"},"nativeSrc":"9067:51:17","nodeType":"YulIf","src":"9067:51:17"},{"nativeSrc":"9127:25:17","nodeType":"YulAssignment","src":"9127:25:17","value":{"arguments":[{"name":"power","nativeSrc":"9140:5:17","nodeType":"YulIdentifier","src":"9140:5:17"},{"name":"base","nativeSrc":"9147:4:17","nodeType":"YulIdentifier","src":"9147:4:17"}],"functionName":{"name":"mul","nativeSrc":"9136:3:17","nodeType":"YulIdentifier","src":"9136:3:17"},"nativeSrc":"9136:16:17","nodeType":"YulFunctionCall","src":"9136:16:17"},"variableNames":[{"name":"power","nativeSrc":"9127:5:17","nodeType":"YulIdentifier","src":"9127:5:17"}]}]},"name":"checked_exp_unsigned","nativeSrc":"8085:1073:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"8115:4:17","nodeType":"YulTypedName","src":"8115:4:17","type":""},{"name":"exponent","nativeSrc":"8121:8:17","nodeType":"YulTypedName","src":"8121:8:17","type":""},{"name":"max","nativeSrc":"8131:3:17","nodeType":"YulTypedName","src":"8131:3:17","type":""}],"returnVariables":[{"name":"power","nativeSrc":"8139:5:17","nodeType":"YulTypedName","src":"8139:5:17","type":""}],"src":"8085:1073:17"},{"body":{"nativeSrc":"9207:43:17","nodeType":"YulBlock","src":"9207:43:17","statements":[{"nativeSrc":"9217:27:17","nodeType":"YulAssignment","src":"9217:27:17","value":{"arguments":[{"name":"value","nativeSrc":"9232:5:17","nodeType":"YulIdentifier","src":"9232:5:17"},{"kind":"number","nativeSrc":"9239:4:17","nodeType":"YulLiteral","src":"9239:4:17","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"9228:3:17","nodeType":"YulIdentifier","src":"9228:3:17"},"nativeSrc":"9228:16:17","nodeType":"YulFunctionCall","src":"9228:16:17"},"variableNames":[{"name":"cleaned","nativeSrc":"9217:7:17","nodeType":"YulIdentifier","src":"9217:7:17"}]}]},"name":"cleanup_t_uint8","nativeSrc":"9164:86:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9189:5:17","nodeType":"YulTypedName","src":"9189:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9199:7:17","nodeType":"YulTypedName","src":"9199:7:17","type":""}],"src":"9164:86:17"},{"body":{"nativeSrc":"9320:217:17","nodeType":"YulBlock","src":"9320:217:17","statements":[{"nativeSrc":"9330:31:17","nodeType":"YulAssignment","src":"9330:31:17","value":{"arguments":[{"name":"base","nativeSrc":"9356:4:17","nodeType":"YulIdentifier","src":"9356:4:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9338:17:17","nodeType":"YulIdentifier","src":"9338:17:17"},"nativeSrc":"9338:23:17","nodeType":"YulFunctionCall","src":"9338:23:17"},"variableNames":[{"name":"base","nativeSrc":"9330:4:17","nodeType":"YulIdentifier","src":"9330:4:17"}]},{"nativeSrc":"9370:37:17","nodeType":"YulAssignment","src":"9370:37:17","value":{"arguments":[{"name":"exponent","nativeSrc":"9398:8:17","nodeType":"YulIdentifier","src":"9398:8:17"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"9382:15:17","nodeType":"YulIdentifier","src":"9382:15:17"},"nativeSrc":"9382:25:17","nodeType":"YulFunctionCall","src":"9382:25:17"},"variableNames":[{"name":"exponent","nativeSrc":"9370:8:17","nodeType":"YulIdentifier","src":"9370:8:17"}]},{"nativeSrc":"9417:113:17","nodeType":"YulAssignment","src":"9417:113:17","value":{"arguments":[{"name":"base","nativeSrc":"9447:4:17","nodeType":"YulIdentifier","src":"9447:4:17"},{"name":"exponent","nativeSrc":"9453:8:17","nodeType":"YulIdentifier","src":"9453:8:17"},{"kind":"number","nativeSrc":"9463:66:17","nodeType":"YulLiteral","src":"9463:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"9426:20:17","nodeType":"YulIdentifier","src":"9426:20:17"},"nativeSrc":"9426:104:17","nodeType":"YulFunctionCall","src":"9426:104:17"},"variableNames":[{"name":"power","nativeSrc":"9417:5:17","nodeType":"YulIdentifier","src":"9417:5:17"}]}]},"name":"checked_exp_t_uint256_t_uint8","nativeSrc":"9256:281:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"9295:4:17","nodeType":"YulTypedName","src":"9295:4:17","type":""},{"name":"exponent","nativeSrc":"9301:8:17","nodeType":"YulTypedName","src":"9301:8:17","type":""}],"returnVariables":[{"name":"power","nativeSrc":"9314:5:17","nodeType":"YulTypedName","src":"9314:5:17","type":""}],"src":"9256:281:17"},{"body":{"nativeSrc":"9591:362:17","nodeType":"YulBlock","src":"9591:362:17","statements":[{"nativeSrc":"9601:25:17","nodeType":"YulAssignment","src":"9601:25:17","value":{"arguments":[{"name":"x","nativeSrc":"9624:1:17","nodeType":"YulIdentifier","src":"9624:1:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9606:17:17","nodeType":"YulIdentifier","src":"9606:17:17"},"nativeSrc":"9606:20:17","nodeType":"YulFunctionCall","src":"9606:20:17"},"variableNames":[{"name":"x","nativeSrc":"9601:1:17","nodeType":"YulIdentifier","src":"9601:1:17"}]},{"nativeSrc":"9635:25:17","nodeType":"YulAssignment","src":"9635:25:17","value":{"arguments":[{"name":"y","nativeSrc":"9658:1:17","nodeType":"YulIdentifier","src":"9658:1:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9640:17:17","nodeType":"YulIdentifier","src":"9640:17:17"},"nativeSrc":"9640:20:17","nodeType":"YulFunctionCall","src":"9640:20:17"},"variableNames":[{"name":"y","nativeSrc":"9635:1:17","nodeType":"YulIdentifier","src":"9635:1:17"}]},{"nativeSrc":"9669:28:17","nodeType":"YulVariableDeclaration","src":"9669:28:17","value":{"arguments":[{"name":"x","nativeSrc":"9692:1:17","nodeType":"YulIdentifier","src":"9692:1:17"},{"name":"y","nativeSrc":"9695:1:17","nodeType":"YulIdentifier","src":"9695:1:17"}],"functionName":{"name":"mul","nativeSrc":"9688:3:17","nodeType":"YulIdentifier","src":"9688:3:17"},"nativeSrc":"9688:9:17","nodeType":"YulFunctionCall","src":"9688:9:17"},"variables":[{"name":"product_raw","nativeSrc":"9673:11:17","nodeType":"YulTypedName","src":"9673:11:17","type":""}]},{"nativeSrc":"9706:41:17","nodeType":"YulAssignment","src":"9706:41:17","value":{"arguments":[{"name":"product_raw","nativeSrc":"9735:11:17","nodeType":"YulIdentifier","src":"9735:11:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9717:17:17","nodeType":"YulIdentifier","src":"9717:17:17"},"nativeSrc":"9717:30:17","nodeType":"YulFunctionCall","src":"9717:30:17"},"variableNames":[{"name":"product","nativeSrc":"9706:7:17","nodeType":"YulIdentifier","src":"9706:7:17"}]},{"body":{"nativeSrc":"9924:22:17","nodeType":"YulBlock","src":"9924:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9926:16:17","nodeType":"YulIdentifier","src":"9926:16:17"},"nativeSrc":"9926:18:17","nodeType":"YulFunctionCall","src":"9926:18:17"},"nativeSrc":"9926:18:17","nodeType":"YulExpressionStatement","src":"9926:18:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"9857:1:17","nodeType":"YulIdentifier","src":"9857:1:17"}],"functionName":{"name":"iszero","nativeSrc":"9850:6:17","nodeType":"YulIdentifier","src":"9850:6:17"},"nativeSrc":"9850:9:17","nodeType":"YulFunctionCall","src":"9850:9:17"},{"arguments":[{"name":"y","nativeSrc":"9880:1:17","nodeType":"YulIdentifier","src":"9880:1:17"},{"arguments":[{"name":"product","nativeSrc":"9887:7:17","nodeType":"YulIdentifier","src":"9887:7:17"},{"name":"x","nativeSrc":"9896:1:17","nodeType":"YulIdentifier","src":"9896:1:17"}],"functionName":{"name":"div","nativeSrc":"9883:3:17","nodeType":"YulIdentifier","src":"9883:3:17"},"nativeSrc":"9883:15:17","nodeType":"YulFunctionCall","src":"9883:15:17"}],"functionName":{"name":"eq","nativeSrc":"9877:2:17","nodeType":"YulIdentifier","src":"9877:2:17"},"nativeSrc":"9877:22:17","nodeType":"YulFunctionCall","src":"9877:22:17"}],"functionName":{"name":"or","nativeSrc":"9830:2:17","nodeType":"YulIdentifier","src":"9830:2:17"},"nativeSrc":"9830:83:17","nodeType":"YulFunctionCall","src":"9830:83:17"}],"functionName":{"name":"iszero","nativeSrc":"9810:6:17","nodeType":"YulIdentifier","src":"9810:6:17"},"nativeSrc":"9810:113:17","nodeType":"YulFunctionCall","src":"9810:113:17"},"nativeSrc":"9807:139:17","nodeType":"YulIf","src":"9807:139:17"}]},"name":"checked_mul_t_uint256","nativeSrc":"9543:410:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9574:1:17","nodeType":"YulTypedName","src":"9574:1:17","type":""},{"name":"y","nativeSrc":"9577:1:17","nodeType":"YulTypedName","src":"9577:1:17","type":""}],"returnVariables":[{"name":"product","nativeSrc":"9583:7:17","nodeType":"YulTypedName","src":"9583:7:17","type":""}],"src":"9543:410:17"},{"body":{"nativeSrc":"10003:147:17","nodeType":"YulBlock","src":"10003:147:17","statements":[{"nativeSrc":"10013:25:17","nodeType":"YulAssignment","src":"10013:25:17","value":{"arguments":[{"name":"x","nativeSrc":"10036:1:17","nodeType":"YulIdentifier","src":"10036:1:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10018:17:17","nodeType":"YulIdentifier","src":"10018:17:17"},"nativeSrc":"10018:20:17","nodeType":"YulFunctionCall","src":"10018:20:17"},"variableNames":[{"name":"x","nativeSrc":"10013:1:17","nodeType":"YulIdentifier","src":"10013:1:17"}]},{"nativeSrc":"10047:25:17","nodeType":"YulAssignment","src":"10047:25:17","value":{"arguments":[{"name":"y","nativeSrc":"10070:1:17","nodeType":"YulIdentifier","src":"10070:1:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10052:17:17","nodeType":"YulIdentifier","src":"10052:17:17"},"nativeSrc":"10052:20:17","nodeType":"YulFunctionCall","src":"10052:20:17"},"variableNames":[{"name":"y","nativeSrc":"10047:1:17","nodeType":"YulIdentifier","src":"10047:1:17"}]},{"nativeSrc":"10081:16:17","nodeType":"YulAssignment","src":"10081:16:17","value":{"arguments":[{"name":"x","nativeSrc":"10092:1:17","nodeType":"YulIdentifier","src":"10092:1:17"},{"name":"y","nativeSrc":"10095:1:17","nodeType":"YulIdentifier","src":"10095:1:17"}],"functionName":{"name":"add","nativeSrc":"10088:3:17","nodeType":"YulIdentifier","src":"10088:3:17"},"nativeSrc":"10088:9:17","nodeType":"YulFunctionCall","src":"10088:9:17"},"variableNames":[{"name":"sum","nativeSrc":"10081:3:17","nodeType":"YulIdentifier","src":"10081:3:17"}]},{"body":{"nativeSrc":"10121:22:17","nodeType":"YulBlock","src":"10121:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10123:16:17","nodeType":"YulIdentifier","src":"10123:16:17"},"nativeSrc":"10123:18:17","nodeType":"YulFunctionCall","src":"10123:18:17"},"nativeSrc":"10123:18:17","nodeType":"YulExpressionStatement","src":"10123:18:17"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"10113:1:17","nodeType":"YulIdentifier","src":"10113:1:17"},{"name":"sum","nativeSrc":"10116:3:17","nodeType":"YulIdentifier","src":"10116:3:17"}],"functionName":{"name":"gt","nativeSrc":"10110:2:17","nodeType":"YulIdentifier","src":"10110:2:17"},"nativeSrc":"10110:10:17","nodeType":"YulFunctionCall","src":"10110:10:17"},"nativeSrc":"10107:36:17","nodeType":"YulIf","src":"10107:36:17"}]},"name":"checked_add_t_uint256","nativeSrc":"9959:191:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9990:1:17","nodeType":"YulTypedName","src":"9990:1:17","type":""},{"name":"y","nativeSrc":"9993:1:17","nodeType":"YulTypedName","src":"9993:1:17","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"9999:3:17","nodeType":"YulTypedName","src":"9999:3:17","type":""}],"src":"9959:191:17"},{"body":{"nativeSrc":"10221:53:17","nodeType":"YulBlock","src":"10221:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10238:3:17","nodeType":"YulIdentifier","src":"10238:3:17"},{"arguments":[{"name":"value","nativeSrc":"10261:5:17","nodeType":"YulIdentifier","src":"10261:5:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10243:17:17","nodeType":"YulIdentifier","src":"10243:17:17"},"nativeSrc":"10243:24:17","nodeType":"YulFunctionCall","src":"10243:24:17"}],"functionName":{"name":"mstore","nativeSrc":"10231:6:17","nodeType":"YulIdentifier","src":"10231:6:17"},"nativeSrc":"10231:37:17","nodeType":"YulFunctionCall","src":"10231:37:17"},"nativeSrc":"10231:37:17","nodeType":"YulExpressionStatement","src":"10231:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10156:118:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10209:5:17","nodeType":"YulTypedName","src":"10209:5:17","type":""},{"name":"pos","nativeSrc":"10216:3:17","nodeType":"YulTypedName","src":"10216:3:17","type":""}],"src":"10156:118:17"},{"body":{"nativeSrc":"10434:288:17","nodeType":"YulBlock","src":"10434:288:17","statements":[{"nativeSrc":"10444:26:17","nodeType":"YulAssignment","src":"10444:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"10456:9:17","nodeType":"YulIdentifier","src":"10456:9:17"},{"kind":"number","nativeSrc":"10467:2:17","nodeType":"YulLiteral","src":"10467:2:17","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10452:3:17","nodeType":"YulIdentifier","src":"10452:3:17"},"nativeSrc":"10452:18:17","nodeType":"YulFunctionCall","src":"10452:18:17"},"variableNames":[{"name":"tail","nativeSrc":"10444:4:17","nodeType":"YulIdentifier","src":"10444:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10524:6:17","nodeType":"YulIdentifier","src":"10524:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"10537:9:17","nodeType":"YulIdentifier","src":"10537:9:17"},{"kind":"number","nativeSrc":"10548:1:17","nodeType":"YulLiteral","src":"10548:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10533:3:17","nodeType":"YulIdentifier","src":"10533:3:17"},"nativeSrc":"10533:17:17","nodeType":"YulFunctionCall","src":"10533:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10480:43:17","nodeType":"YulIdentifier","src":"10480:43:17"},"nativeSrc":"10480:71:17","nodeType":"YulFunctionCall","src":"10480:71:17"},"nativeSrc":"10480:71:17","nodeType":"YulExpressionStatement","src":"10480:71:17"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10605:6:17","nodeType":"YulIdentifier","src":"10605:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"10618:9:17","nodeType":"YulIdentifier","src":"10618:9:17"},{"kind":"number","nativeSrc":"10629:2:17","nodeType":"YulLiteral","src":"10629:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10614:3:17","nodeType":"YulIdentifier","src":"10614:3:17"},"nativeSrc":"10614:18:17","nodeType":"YulFunctionCall","src":"10614:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10561:43:17","nodeType":"YulIdentifier","src":"10561:43:17"},"nativeSrc":"10561:72:17","nodeType":"YulFunctionCall","src":"10561:72:17"},"nativeSrc":"10561:72:17","nodeType":"YulExpressionStatement","src":"10561:72:17"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"10687:6:17","nodeType":"YulIdentifier","src":"10687:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"10700:9:17","nodeType":"YulIdentifier","src":"10700:9:17"},{"kind":"number","nativeSrc":"10711:2:17","nodeType":"YulLiteral","src":"10711:2:17","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10696:3:17","nodeType":"YulIdentifier","src":"10696:3:17"},"nativeSrc":"10696:18:17","nodeType":"YulFunctionCall","src":"10696:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10643:43:17","nodeType":"YulIdentifier","src":"10643:43:17"},"nativeSrc":"10643:72:17","nodeType":"YulFunctionCall","src":"10643:72:17"},"nativeSrc":"10643:72:17","nodeType":"YulExpressionStatement","src":"10643:72:17"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"10280:442:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10390:9:17","nodeType":"YulTypedName","src":"10390:9:17","type":""},{"name":"value2","nativeSrc":"10402:6:17","nodeType":"YulTypedName","src":"10402:6:17","type":""},{"name":"value1","nativeSrc":"10410:6:17","nodeType":"YulTypedName","src":"10410:6:17","type":""},{"name":"value0","nativeSrc":"10418:6:17","nodeType":"YulTypedName","src":"10418:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10429:4:17","nodeType":"YulTypedName","src":"10429:4:17","type":""}],"src":"10280:442:17"},{"body":{"nativeSrc":"10826:124:17","nodeType":"YulBlock","src":"10826:124:17","statements":[{"nativeSrc":"10836:26:17","nodeType":"YulAssignment","src":"10836:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"10848:9:17","nodeType":"YulIdentifier","src":"10848:9:17"},{"kind":"number","nativeSrc":"10859:2:17","nodeType":"YulLiteral","src":"10859:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10844:3:17","nodeType":"YulIdentifier","src":"10844:3:17"},"nativeSrc":"10844:18:17","nodeType":"YulFunctionCall","src":"10844:18:17"},"variableNames":[{"name":"tail","nativeSrc":"10836:4:17","nodeType":"YulIdentifier","src":"10836:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10916:6:17","nodeType":"YulIdentifier","src":"10916:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"10929:9:17","nodeType":"YulIdentifier","src":"10929:9:17"},{"kind":"number","nativeSrc":"10940:1:17","nodeType":"YulLiteral","src":"10940:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10925:3:17","nodeType":"YulIdentifier","src":"10925:3:17"},"nativeSrc":"10925:17:17","nodeType":"YulFunctionCall","src":"10925:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10872:43:17","nodeType":"YulIdentifier","src":"10872:43:17"},"nativeSrc":"10872:71:17","nodeType":"YulFunctionCall","src":"10872:71:17"},"nativeSrc":"10872:71:17","nodeType":"YulExpressionStatement","src":"10872:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"10728:222:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10798:9:17","nodeType":"YulTypedName","src":"10798:9:17","type":""},{"name":"value0","nativeSrc":"10810:6:17","nodeType":"YulTypedName","src":"10810:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10821:4:17","nodeType":"YulTypedName","src":"10821:4:17","type":""}],"src":"10728:222:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051611d2c380380611d2c83398181016040528101906100329190610565565b806040518060400160405280600681526020017f746f6b656e4200000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f544f4b420000000000000000000000000000000000000000000000000000000081525081600390816100ae91906107f5565b5080600490816100be91906107f5565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101335760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012a91906108d6565b60405180910390fd5b6101428161018660201b60201c565b5061017f8261015561024c60201b60201c565b600a6101619190610a60565b670de0b6b3a76400006101749190610aab565b61025560201b60201c565b5050610b82565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102c75760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102be91906108d6565b60405180910390fd5b6102d9600083836102dd60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361032f5780600260008282546103239190610aed565b92505081905550610402565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156103bb578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016103b293929190610b30565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361044b5780600260008282540392505081905550610498565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104f59190610b67565b60405180910390a3505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061053282610507565b9050919050565b61054281610527565b811461054d57600080fd5b50565b60008151905061055f81610539565b92915050565b6000806040838503121561057c5761057b610502565b5b600061058a85828601610550565b925050602061059b85828601610550565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061062657607f821691505b602082108103610639576106386105df565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026106a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610664565b6106ab8683610664565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006106f26106ed6106e8846106c3565b6106cd565b6106c3565b9050919050565b6000819050919050565b61070c836106d7565b610720610718826106f9565b848454610671565b825550505050565b600090565b610735610728565b610740818484610703565b505050565b5b818110156107645761075960008261072d565b600181019050610746565b5050565b601f8211156107a95761077a8161063f565b61078384610654565b81016020851015610792578190505b6107a661079e85610654565b830182610745565b50505b505050565b600082821c905092915050565b60006107cc600019846008026107ae565b1980831691505092915050565b60006107e583836107bb565b9150826002028217905092915050565b6107fe826105a5565b67ffffffffffffffff811115610817576108166105b0565b5b610821825461060e565b61082c828285610768565b600060209050601f83116001811461085f576000841561084d578287015190505b61085785826107d9565b8655506108bf565b601f19841661086d8661063f565b60005b8281101561089557848901518255600182019150602085019450602081019050610870565b868310156108b257848901516108ae601f8916826107bb565b8355505b6001600288020188555050505b505050505050565b6108d081610527565b82525050565b60006020820190506108eb60008301846108c7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111561097757808604811115610953576109526108f1565b5b60018516156109625780820291505b808102905061097085610920565b9450610937565b94509492505050565b6000826109905760019050610a4c565b8161099e5760009050610a4c565b81600181146109b457600281146109be576109ed565b6001915050610a4c565b60ff8411156109d0576109cf6108f1565b5b8360020a9150848211156109e7576109e66108f1565b5b50610a4c565b5060208310610133831016604e8410600b8410161715610a225782820a905083811115610a1d57610a1c6108f1565b5b610a4c565b610a2f848484600161092d565b92509050818404811115610a4657610a456108f1565b5b81810290505b9392505050565b600060ff82169050919050565b6000610a6b826106c3565b9150610a7683610a53565b9250610aa37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610980565b905092915050565b6000610ab6826106c3565b9150610ac1836106c3565b9250828202610acf816106c3565b91508282048414831517610ae657610ae56108f1565b5b5092915050565b6000610af8826106c3565b9150610b03836106c3565b9250828201905080821115610b1b57610b1a6108f1565b5b92915050565b610b2a816106c3565b82525050565b6000606082019050610b4560008301866108c7565b610b526020830185610b21565b610b5f6040830184610b21565b949350505050565b6000602082019050610b7c6000830184610b21565b92915050565b61119b80610b916000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610202578063a9059cbb14610220578063dd62ed3e14610250578063f2fde38b14610280576100cf565b806370a08231146101aa578063715018a6146101da5780638da5cb5b146101e4576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806340c10f191461018e575b600080fd5b6100dc61029c565b6040516100e99190610def565b60405180910390f35b61010c60048036038101906101079190610eaa565b61032e565b6040516101199190610f05565b60405180910390f35b61012a610351565b6040516101379190610f2f565b60405180910390f35b61015a60048036038101906101559190610f4a565b61035b565b6040516101679190610f05565b60405180910390f35b61017861038a565b6040516101859190610fb9565b60405180910390f35b6101a860048036038101906101a39190610eaa565b610393565b005b6101c460048036038101906101bf9190610fd4565b6103a9565b6040516101d19190610f2f565b60405180910390f35b6101e26103f1565b005b6101ec610405565b6040516101f99190611010565b60405180910390f35b61020a61042f565b6040516102179190610def565b60405180910390f35b61023a60048036038101906102359190610eaa565b6104c1565b6040516102479190610f05565b60405180910390f35b61026a6004803603810190610265919061102b565b6104e4565b6040516102779190610f2f565b60405180910390f35b61029a60048036038101906102959190610fd4565b61056b565b005b6060600380546102ab9061109a565b80601f01602080910402602001604051908101604052809291908181526020018280546102d79061109a565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b6000806103396105f1565b90506103468185856105f9565b600191505092915050565b6000600254905090565b6000806103666105f1565b905061037385828561060b565b61037e8585856106a0565b60019150509392505050565b60006012905090565b61039b610794565b6103a5828261081b565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103f9610794565b610403600061089d565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461043e9061109a565b80601f016020809104026020016040519081016040528092919081815260200182805461046a9061109a565b80156104b75780601f1061048c576101008083540402835291602001916104b7565b820191906000526020600020905b81548152906001019060200180831161049a57829003601f168201915b5050505050905090565b6000806104cc6105f1565b90506104d98185856106a0565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610573610794565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105e55760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105dc9190611010565b60405180910390fd5b6105ee8161089d565b50565b600033905090565b6106068383836001610963565b505050565b600061061784846104e4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561069a578181101561068a578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610681939291906110cb565b60405180910390fd5b61069984848484036000610963565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107125760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107099190611010565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107845760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161077b9190611010565b60405180910390fd5b61078f838383610b3a565b505050565b61079c6105f1565b73ffffffffffffffffffffffffffffffffffffffff166107ba610405565b73ffffffffffffffffffffffffffffffffffffffff1614610819576107dd6105f1565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108109190611010565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361088d5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108849190611010565b60405180910390fd5b61089960008383610b3a565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109d55760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109cc9190611010565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a475760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a3e9190611010565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b34578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b2b9190610f2f565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b8c578060026000828254610b809190611131565b92505081905550610c5f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c18578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c0f939291906110cb565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ca85780600260008282540392505081905550610cf5565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d529190610f2f565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d99578082015181840152602081019050610d7e565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dc182610d5f565b610dcb8185610d6a565b9350610ddb818560208601610d7b565b610de481610da5565b840191505092915050565b60006020820190508181036000830152610e098184610db6565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4182610e16565b9050919050565b610e5181610e36565b8114610e5c57600080fd5b50565b600081359050610e6e81610e48565b92915050565b6000819050919050565b610e8781610e74565b8114610e9257600080fd5b50565b600081359050610ea481610e7e565b92915050565b60008060408385031215610ec157610ec0610e11565b5b6000610ecf85828601610e5f565b9250506020610ee085828601610e95565b9150509250929050565b60008115159050919050565b610eff81610eea565b82525050565b6000602082019050610f1a6000830184610ef6565b92915050565b610f2981610e74565b82525050565b6000602082019050610f446000830184610f20565b92915050565b600080600060608486031215610f6357610f62610e11565b5b6000610f7186828701610e5f565b9350506020610f8286828701610e5f565b9250506040610f9386828701610e95565b9150509250925092565b600060ff82169050919050565b610fb381610f9d565b82525050565b6000602082019050610fce6000830184610faa565b92915050565b600060208284031215610fea57610fe9610e11565b5b6000610ff884828501610e5f565b91505092915050565b61100a81610e36565b82525050565b60006020820190506110256000830184611001565b92915050565b6000806040838503121561104257611041610e11565b5b600061105085828601610e5f565b925050602061106185828601610e5f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110b257607f821691505b6020821081036110c5576110c461106b565b5b50919050565b60006060820190506110e06000830186611001565b6110ed6020830185610f20565b6110fa6040830184610f20565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061113c82610e74565b915061114783610e74565b925082820190508082111561115f5761115e611102565b5b9291505056fea26469706673582212200a9c4373b666acb86c0ad58d9933141a8f2799d6853b08eb57295396be03be7b64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1D2C CODESIZE SUB DUP1 PUSH2 0x1D2C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x565 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x746F6B656E420000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x544F4B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x7F5 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x7F5 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x133 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x186 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x17F DUP3 PUSH2 0x155 PUSH2 0x24C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x161 SWAP2 SWAP1 PUSH2 0xA60 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH2 0x255 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2C7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D9 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2DD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x32F JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0xAED JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x402 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3BB JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x44B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x498 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4F5 SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x532 DUP3 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x542 DUP2 PUSH2 0x527 JUMP JUMPDEST DUP2 EQ PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x55F DUP2 PUSH2 0x539 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x57C JUMPI PUSH2 0x57B PUSH2 0x502 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x58A DUP6 DUP3 DUP7 ADD PUSH2 0x550 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x59B DUP6 DUP3 DUP7 ADD PUSH2 0x550 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x626 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x639 JUMPI PUSH2 0x638 PUSH2 0x5DF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x6A1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x664 JUMP JUMPDEST PUSH2 0x6AB DUP7 DUP4 PUSH2 0x664 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F2 PUSH2 0x6ED PUSH2 0x6E8 DUP5 PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x6C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x70C DUP4 PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x720 PUSH2 0x718 DUP3 PUSH2 0x6F9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x671 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x735 PUSH2 0x728 JUMP JUMPDEST PUSH2 0x740 DUP2 DUP5 DUP5 PUSH2 0x703 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x764 JUMPI PUSH2 0x759 PUSH1 0x0 DUP3 PUSH2 0x72D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x746 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7A9 JUMPI PUSH2 0x77A DUP2 PUSH2 0x63F JUMP JUMPDEST PUSH2 0x783 DUP5 PUSH2 0x654 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x792 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x7A6 PUSH2 0x79E DUP6 PUSH2 0x654 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x745 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CC PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x7AE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7E5 DUP4 DUP4 PUSH2 0x7BB JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7FE DUP3 PUSH2 0x5A5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x817 JUMPI PUSH2 0x816 PUSH2 0x5B0 JUMP JUMPDEST JUMPDEST PUSH2 0x821 DUP3 SLOAD PUSH2 0x60E JUMP JUMPDEST PUSH2 0x82C DUP3 DUP3 DUP6 PUSH2 0x768 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x85F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x84D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x857 DUP6 DUP3 PUSH2 0x7D9 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x86D DUP7 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x895 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x870 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x8B2 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x8AE PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x7BB JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8D0 DUP2 PUSH2 0x527 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8EB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x977 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x953 JUMPI PUSH2 0x952 PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x962 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x970 DUP6 PUSH2 0x920 JUMP JUMPDEST SWAP5 POP PUSH2 0x937 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x990 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xA4C JUMP JUMPDEST DUP2 PUSH2 0x99E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xA4C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x9B4 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x9BE JUMPI PUSH2 0x9ED JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xA4C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x9D0 JUMPI PUSH2 0x9CF PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x9E7 JUMPI PUSH2 0x9E6 PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST POP PUSH2 0xA4C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xA22 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xA1D JUMPI PUSH2 0xA1C PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST PUSH2 0xA4C JUMP JUMPDEST PUSH2 0xA2F DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x92D JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xA46 JUMPI PUSH2 0xA45 PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6B DUP3 PUSH2 0x6C3 JUMP JUMPDEST SWAP2 POP PUSH2 0xA76 DUP4 PUSH2 0xA53 JUMP JUMPDEST SWAP3 POP PUSH2 0xAA3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x980 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB6 DUP3 PUSH2 0x6C3 JUMP JUMPDEST SWAP2 POP PUSH2 0xAC1 DUP4 PUSH2 0x6C3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xACF DUP2 PUSH2 0x6C3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xAE6 JUMPI PUSH2 0xAE5 PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF8 DUP3 PUSH2 0x6C3 JUMP JUMPDEST SWAP2 POP PUSH2 0xB03 DUP4 PUSH2 0x6C3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB1B JUMPI PUSH2 0xB1A PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB2A DUP2 PUSH2 0x6C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB45 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0xB52 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB21 JUMP JUMPDEST PUSH2 0xB5F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB21 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB7C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x119B DUP1 PUSH2 0xB91 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x280 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E4 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x3F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x339 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x346 DUP2 DUP6 DUP6 PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x366 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x373 DUP6 DUP3 DUP6 PUSH2 0x60B JUMP JUMPDEST PUSH2 0x37E DUP6 DUP6 DUP6 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x794 JUMP JUMPDEST PUSH2 0x3A5 DUP3 DUP3 PUSH2 0x81B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x794 JUMP JUMPDEST PUSH2 0x403 PUSH1 0x0 PUSH2 0x89D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x43E SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4CC PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D9 DUP2 DUP6 DUP6 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x573 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5E5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5EE DUP2 PUSH2 0x89D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x606 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x963 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x617 DUP5 DUP5 PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x69A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x68A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x681 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x699 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x963 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x712 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x709 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x784 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78F DUP4 DUP4 DUP4 PUSH2 0xB3A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x79C PUSH2 0x5F1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7BA PUSH2 0x405 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x819 JUMPI PUSH2 0x7DD PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x810 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x88D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x884 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x899 PUSH1 0x0 DUP4 DUP4 PUSH2 0xB3A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CC SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA47 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB34 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB2B SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x1131 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC18 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA8 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCF5 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD52 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD99 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC1 DUP3 PUSH2 0xD5F JUMP JUMPDEST PUSH2 0xDCB DUP2 DUP6 PUSH2 0xD6A JUMP JUMPDEST SWAP4 POP PUSH2 0xDDB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xDE4 DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE09 DUP2 DUP5 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE41 DUP3 PUSH2 0xE16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE51 DUP2 PUSH2 0xE36 JUMP JUMPDEST DUP2 EQ PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE6E DUP2 PUSH2 0xE48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE87 DUP2 PUSH2 0xE74 JUMP JUMPDEST DUP2 EQ PUSH2 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEA4 DUP2 PUSH2 0xE7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH2 0xEC0 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xECF DUP6 DUP3 DUP7 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEE0 DUP6 DUP3 DUP7 ADD PUSH2 0xE95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEFF DUP2 PUSH2 0xEEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF29 DUP2 PUSH2 0xE74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF44 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF63 JUMPI PUSH2 0xF62 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF71 DUP7 DUP3 DUP8 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF82 DUP7 DUP3 DUP8 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF93 DUP7 DUP3 DUP8 ADD PUSH2 0xE95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB3 DUP2 PUSH2 0xF9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFCE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFEA JUMPI PUSH2 0xFE9 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF8 DUP5 DUP3 DUP6 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100A DUP2 PUSH2 0xE36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1025 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1001 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1042 JUMPI PUSH2 0x1041 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1050 DUP6 DUP3 DUP7 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1061 DUP6 DUP3 DUP7 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10B2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10C5 JUMPI PUSH2 0x10C4 PUSH2 0x106B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10E0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x10ED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x10FA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF20 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x113C DUP3 PUSH2 0xE74 JUMP JUMPDEST SWAP2 POP PUSH2 0x1147 DUP4 PUSH2 0xE74 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x115F JUMPI PUSH2 0x115E PUSH2 0x1102 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP SWAP13 NUMBER PUSH20 0xB666ACB86C0AD58D9933141A8F2799D6853B08EB JUMPI 0x29 MSTORE8 SWAP7 0xBE SUB 0xBE PUSH28 0x64736F6C634300081C00330000000000000000000000000000000000 ","sourceMap":"550:1102:16:-:0;;;867:386;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1024:12;1582:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1190:56:16::2;1196:9;1235:10;:8;;;:10;;:::i;:::-;1229:2;:16;;;;:::i;:::-;1207:19;:38;;;;:::i;:::-;1190:5;;;:56;;:::i;:::-;867:386:::0;;550:1102;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2688:82:5:-;2737:5;2761:2;2754:9;;2688:82;:::o;7439:208::-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;88:117:17:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;6585:118::-;6672:24;6690:5;6672:24;:::i;:::-;6667:3;6660:37;6585:118;;:::o;6709:222::-;6802:4;6840:2;6829:9;6825:18;6817:26;;6853:71;6921:1;6910:9;6906:17;6897:6;6853:71;:::i;:::-;6709:222;;;;:::o;6937:180::-;6985:77;6982:1;6975:88;7082:4;7079:1;7072:15;7106:4;7103:1;7096:15;7123:102;7165:8;7212:5;7209:1;7205:13;7184:34;;7123:102;;;:::o;7231:848::-;7292:5;7299:4;7323:6;7314:15;;7347:5;7338:14;;7361:712;7382:1;7372:8;7369:15;7361:712;;;7477:4;7472:3;7468:14;7462:4;7459:24;7456:50;;;7486:18;;:::i;:::-;7456:50;7536:1;7526:8;7522:16;7519:451;;;7951:4;7944:5;7940:16;7931:25;;7519:451;8001:4;7995;7991:15;7983:23;;8031:32;8054:8;8031:32;:::i;:::-;8019:44;;7361:712;;;7231:848;;;;;;;:::o;8085:1073::-;8139:5;8330:8;8320:40;;8351:1;8342:10;;8353:5;;8320:40;8379:4;8369:36;;8396:1;8387:10;;8398:5;;8369:36;8465:4;8513:1;8508:27;;;;8549:1;8544:191;;;;8458:277;;8508:27;8526:1;8517:10;;8528:5;;;8544:191;8589:3;8579:8;8576:17;8573:43;;;8596:18;;:::i;:::-;8573:43;8645:8;8642:1;8638:16;8629:25;;8680:3;8673:5;8670:14;8667:40;;;8687:18;;:::i;:::-;8667:40;8720:5;;;8458:277;;8844:2;8834:8;8831:16;8825:3;8819:4;8816:13;8812:36;8794:2;8784:8;8781:16;8776:2;8770:4;8767:12;8763:35;8747:111;8744:246;;;8900:8;8894:4;8890:19;8881:28;;8935:3;8928:5;8925:14;8922:40;;;8942:18;;:::i;:::-;8922:40;8975:5;;8744:246;9015:42;9053:3;9043:8;9037:4;9034:1;9015:42;:::i;:::-;9000:57;;;;9089:4;9084:3;9080:14;9073:5;9070:25;9067:51;;;9098:18;;:::i;:::-;9067:51;9147:4;9140:5;9136:16;9127:25;;8085:1073;;;;;;:::o;9164:86::-;9199:7;9239:4;9232:5;9228:16;9217:27;;9164:86;;;:::o;9256:281::-;9314:5;9338:23;9356:4;9338:23;:::i;:::-;9330:31;;9382:25;9398:8;9382:25;:::i;:::-;9370:37;;9426:104;9463:66;9453:8;9447:4;9426:104;:::i;:::-;9417:113;;9256:281;;;;:::o;9543:410::-;9583:7;9606:20;9624:1;9606:20;:::i;:::-;9601:25;;9640:20;9658:1;9640:20;:::i;:::-;9635:25;;9695:1;9692;9688:9;9717:30;9735:11;9717:30;:::i;:::-;9706:41;;9896:1;9887:7;9883:15;9880:1;9877:22;9857:1;9850:9;9830:83;9807:139;;9926:18;;:::i;:::-;9807:139;9591:362;9543:410;;;;:::o;9959:191::-;9999:3;10018:20;10036:1;10018:20;:::i;:::-;10013:25;;10052:20;10070:1;10052:20;:::i;:::-;10047:25;;10095:1;10092;10088:9;10081:16;;10116:3;10113:1;10110:10;10107:36;;;10123:18;;:::i;:::-;10107:36;9959:191;;;;:::o;10156:118::-;10243:24;10261:5;10243:24;:::i;:::-;10238:3;10231:37;10156:118;;:::o;10280:442::-;10429:4;10467:2;10456:9;10452:18;10444:26;;10480:71;10548:1;10537:9;10533:17;10524:6;10480:71;:::i;:::-;10561:72;10629:2;10618:9;10614:18;10605:6;10561:72;:::i;:::-;10643;10711:2;10700:9;10696:18;10687:6;10643:72;:::i;:::-;10280:442;;;;;;:::o;10728:222::-;10821:4;10859:2;10848:9;10844:18;10836:26;;10872:71;10940:1;10929:9;10925:17;10916:6;10872:71;:::i;:::-;10728:222;;;;:::o;550:1102:16:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_780":{"entryPoint":1529,"id":780,"parameterSlots":3,"returnSlots":0},"@_approve_840":{"entryPoint":2403,"id":840,"parameterSlots":4,"returnSlots":0},"@_checkOwner_84":{"entryPoint":1940,"id":84,"parameterSlots":0,"returnSlots":0},"@_mint_729":{"entryPoint":2075,"id":729,"parameterSlots":2,"returnSlots":0},"@_msgSender_1469":{"entryPoint":1521,"id":1469,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_888":{"entryPoint":1547,"id":888,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2205,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_619":{"entryPoint":1696,"id":619,"parameterSlots":3,"returnSlots":0},"@_update_696":{"entryPoint":2874,"id":696,"parameterSlots":3,"returnSlots":0},"@allowance_516":{"entryPoint":1252,"id":516,"parameterSlots":2,"returnSlots":1},"@approve_540":{"entryPoint":814,"id":540,"parameterSlots":2,"returnSlots":1},"@balanceOf_475":{"entryPoint":937,"id":475,"parameterSlots":1,"returnSlots":1},"@decimals_453":{"entryPoint":906,"id":453,"parameterSlots":0,"returnSlots":1},"@mint_5952":{"entryPoint":915,"id":5952,"parameterSlots":2,"returnSlots":0},"@name_435":{"entryPoint":668,"id":435,"parameterSlots":0,"returnSlots":1},"@owner_67":{"entryPoint":1029,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1009,"id":98,"parameterSlots":0,"returnSlots":0},"@symbol_444":{"entryPoint":1071,"id":444,"parameterSlots":0,"returnSlots":1},"@totalSupply_462":{"entryPoint":849,"id":462,"parameterSlots":0,"returnSlots":1},"@transferFrom_572":{"entryPoint":859,"id":572,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":1387,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_499":{"entryPoint":1217,"id":499,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3679,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3733,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4052,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4139,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3914,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3754,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4097,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3830,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3510,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3872,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":4010,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4112,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4299,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3845,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3567,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3887,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":4025,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3423,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3434,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4401,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3638,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3818,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3606,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3700,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3997,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3451,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4250,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4354,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4203,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3601,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3493,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":3656,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3710,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:7362:17","nodeType":"YulBlock","src":"0:7362:17","statements":[{"body":{"nativeSrc":"66:40:17","nodeType":"YulBlock","src":"66:40:17","statements":[{"nativeSrc":"77:22:17","nodeType":"YulAssignment","src":"77:22:17","value":{"arguments":[{"name":"value","nativeSrc":"93:5:17","nodeType":"YulIdentifier","src":"93:5:17"}],"functionName":{"name":"mload","nativeSrc":"87:5:17","nodeType":"YulIdentifier","src":"87:5:17"},"nativeSrc":"87:12:17","nodeType":"YulFunctionCall","src":"87:12:17"},"variableNames":[{"name":"length","nativeSrc":"77:6:17","nodeType":"YulIdentifier","src":"77:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:17","nodeType":"YulTypedName","src":"49:5:17","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:17","nodeType":"YulTypedName","src":"59:6:17","type":""}],"src":"7:99:17"},{"body":{"nativeSrc":"208:73:17","nodeType":"YulBlock","src":"208:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:17","nodeType":"YulIdentifier","src":"225:3:17"},{"name":"length","nativeSrc":"230:6:17","nodeType":"YulIdentifier","src":"230:6:17"}],"functionName":{"name":"mstore","nativeSrc":"218:6:17","nodeType":"YulIdentifier","src":"218:6:17"},"nativeSrc":"218:19:17","nodeType":"YulFunctionCall","src":"218:19:17"},"nativeSrc":"218:19:17","nodeType":"YulExpressionStatement","src":"218:19:17"},{"nativeSrc":"246:29:17","nodeType":"YulAssignment","src":"246:29:17","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:17","nodeType":"YulIdentifier","src":"265:3:17"},{"kind":"number","nativeSrc":"270:4:17","nodeType":"YulLiteral","src":"270:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:17","nodeType":"YulIdentifier","src":"261:3:17"},"nativeSrc":"261:14:17","nodeType":"YulFunctionCall","src":"261:14:17"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:17","nodeType":"YulIdentifier","src":"246:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:17","nodeType":"YulTypedName","src":"180:3:17","type":""},{"name":"length","nativeSrc":"185:6:17","nodeType":"YulTypedName","src":"185:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:17","nodeType":"YulTypedName","src":"196:11:17","type":""}],"src":"112:169:17"},{"body":{"nativeSrc":"349:186:17","nodeType":"YulBlock","src":"349:186:17","statements":[{"nativeSrc":"360:10:17","nodeType":"YulVariableDeclaration","src":"360:10:17","value":{"kind":"number","nativeSrc":"369:1:17","nodeType":"YulLiteral","src":"369:1:17","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"364:1:17","nodeType":"YulTypedName","src":"364:1:17","type":""}]},{"body":{"nativeSrc":"429:63:17","nodeType":"YulBlock","src":"429:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"454:3:17","nodeType":"YulIdentifier","src":"454:3:17"},{"name":"i","nativeSrc":"459:1:17","nodeType":"YulIdentifier","src":"459:1:17"}],"functionName":{"name":"add","nativeSrc":"450:3:17","nodeType":"YulIdentifier","src":"450:3:17"},"nativeSrc":"450:11:17","nodeType":"YulFunctionCall","src":"450:11:17"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"473:3:17","nodeType":"YulIdentifier","src":"473:3:17"},{"name":"i","nativeSrc":"478:1:17","nodeType":"YulIdentifier","src":"478:1:17"}],"functionName":{"name":"add","nativeSrc":"469:3:17","nodeType":"YulIdentifier","src":"469:3:17"},"nativeSrc":"469:11:17","nodeType":"YulFunctionCall","src":"469:11:17"}],"functionName":{"name":"mload","nativeSrc":"463:5:17","nodeType":"YulIdentifier","src":"463:5:17"},"nativeSrc":"463:18:17","nodeType":"YulFunctionCall","src":"463:18:17"}],"functionName":{"name":"mstore","nativeSrc":"443:6:17","nodeType":"YulIdentifier","src":"443:6:17"},"nativeSrc":"443:39:17","nodeType":"YulFunctionCall","src":"443:39:17"},"nativeSrc":"443:39:17","nodeType":"YulExpressionStatement","src":"443:39:17"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"390:1:17","nodeType":"YulIdentifier","src":"390:1:17"},{"name":"length","nativeSrc":"393:6:17","nodeType":"YulIdentifier","src":"393:6:17"}],"functionName":{"name":"lt","nativeSrc":"387:2:17","nodeType":"YulIdentifier","src":"387:2:17"},"nativeSrc":"387:13:17","nodeType":"YulFunctionCall","src":"387:13:17"},"nativeSrc":"379:113:17","nodeType":"YulForLoop","post":{"nativeSrc":"401:19:17","nodeType":"YulBlock","src":"401:19:17","statements":[{"nativeSrc":"403:15:17","nodeType":"YulAssignment","src":"403:15:17","value":{"arguments":[{"name":"i","nativeSrc":"412:1:17","nodeType":"YulIdentifier","src":"412:1:17"},{"kind":"number","nativeSrc":"415:2:17","nodeType":"YulLiteral","src":"415:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"408:3:17","nodeType":"YulIdentifier","src":"408:3:17"},"nativeSrc":"408:10:17","nodeType":"YulFunctionCall","src":"408:10:17"},"variableNames":[{"name":"i","nativeSrc":"403:1:17","nodeType":"YulIdentifier","src":"403:1:17"}]}]},"pre":{"nativeSrc":"383:3:17","nodeType":"YulBlock","src":"383:3:17","statements":[]},"src":"379:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"512:3:17","nodeType":"YulIdentifier","src":"512:3:17"},{"name":"length","nativeSrc":"517:6:17","nodeType":"YulIdentifier","src":"517:6:17"}],"functionName":{"name":"add","nativeSrc":"508:3:17","nodeType":"YulIdentifier","src":"508:3:17"},"nativeSrc":"508:16:17","nodeType":"YulFunctionCall","src":"508:16:17"},{"kind":"number","nativeSrc":"526:1:17","nodeType":"YulLiteral","src":"526:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"501:6:17","nodeType":"YulIdentifier","src":"501:6:17"},"nativeSrc":"501:27:17","nodeType":"YulFunctionCall","src":"501:27:17"},"nativeSrc":"501:27:17","nodeType":"YulExpressionStatement","src":"501:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:248:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:17","nodeType":"YulTypedName","src":"331:3:17","type":""},{"name":"dst","nativeSrc":"336:3:17","nodeType":"YulTypedName","src":"336:3:17","type":""},{"name":"length","nativeSrc":"341:6:17","nodeType":"YulTypedName","src":"341:6:17","type":""}],"src":"287:248:17"},{"body":{"nativeSrc":"589:54:17","nodeType":"YulBlock","src":"589:54:17","statements":[{"nativeSrc":"599:38:17","nodeType":"YulAssignment","src":"599:38:17","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"617:5:17","nodeType":"YulIdentifier","src":"617:5:17"},{"kind":"number","nativeSrc":"624:2:17","nodeType":"YulLiteral","src":"624:2:17","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"613:3:17","nodeType":"YulIdentifier","src":"613:3:17"},"nativeSrc":"613:14:17","nodeType":"YulFunctionCall","src":"613:14:17"},{"arguments":[{"kind":"number","nativeSrc":"633:2:17","nodeType":"YulLiteral","src":"633:2:17","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"629:3:17","nodeType":"YulIdentifier","src":"629:3:17"},"nativeSrc":"629:7:17","nodeType":"YulFunctionCall","src":"629:7:17"}],"functionName":{"name":"and","nativeSrc":"609:3:17","nodeType":"YulIdentifier","src":"609:3:17"},"nativeSrc":"609:28:17","nodeType":"YulFunctionCall","src":"609:28:17"},"variableNames":[{"name":"result","nativeSrc":"599:6:17","nodeType":"YulIdentifier","src":"599:6:17"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"541:102:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"572:5:17","nodeType":"YulTypedName","src":"572:5:17","type":""}],"returnVariables":[{"name":"result","nativeSrc":"582:6:17","nodeType":"YulTypedName","src":"582:6:17","type":""}],"src":"541:102:17"},{"body":{"nativeSrc":"741:285:17","nodeType":"YulBlock","src":"741:285:17","statements":[{"nativeSrc":"751:53:17","nodeType":"YulVariableDeclaration","src":"751:53:17","value":{"arguments":[{"name":"value","nativeSrc":"798:5:17","nodeType":"YulIdentifier","src":"798:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"765:32:17","nodeType":"YulIdentifier","src":"765:32:17"},"nativeSrc":"765:39:17","nodeType":"YulFunctionCall","src":"765:39:17"},"variables":[{"name":"length","nativeSrc":"755:6:17","nodeType":"YulTypedName","src":"755:6:17","type":""}]},{"nativeSrc":"813:78:17","nodeType":"YulAssignment","src":"813:78:17","value":{"arguments":[{"name":"pos","nativeSrc":"879:3:17","nodeType":"YulIdentifier","src":"879:3:17"},{"name":"length","nativeSrc":"884:6:17","nodeType":"YulIdentifier","src":"884:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"820:58:17","nodeType":"YulIdentifier","src":"820:58:17"},"nativeSrc":"820:71:17","nodeType":"YulFunctionCall","src":"820:71:17"},"variableNames":[{"name":"pos","nativeSrc":"813:3:17","nodeType":"YulIdentifier","src":"813:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"939:5:17","nodeType":"YulIdentifier","src":"939:5:17"},{"kind":"number","nativeSrc":"946:4:17","nodeType":"YulLiteral","src":"946:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"935:3:17","nodeType":"YulIdentifier","src":"935:3:17"},"nativeSrc":"935:16:17","nodeType":"YulFunctionCall","src":"935:16:17"},{"name":"pos","nativeSrc":"953:3:17","nodeType":"YulIdentifier","src":"953:3:17"},{"name":"length","nativeSrc":"958:6:17","nodeType":"YulIdentifier","src":"958:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"900:34:17","nodeType":"YulIdentifier","src":"900:34:17"},"nativeSrc":"900:65:17","nodeType":"YulFunctionCall","src":"900:65:17"},"nativeSrc":"900:65:17","nodeType":"YulExpressionStatement","src":"900:65:17"},{"nativeSrc":"974:46:17","nodeType":"YulAssignment","src":"974:46:17","value":{"arguments":[{"name":"pos","nativeSrc":"985:3:17","nodeType":"YulIdentifier","src":"985:3:17"},{"arguments":[{"name":"length","nativeSrc":"1012:6:17","nodeType":"YulIdentifier","src":"1012:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"990:21:17","nodeType":"YulIdentifier","src":"990:21:17"},"nativeSrc":"990:29:17","nodeType":"YulFunctionCall","src":"990:29:17"}],"functionName":{"name":"add","nativeSrc":"981:3:17","nodeType":"YulIdentifier","src":"981:3:17"},"nativeSrc":"981:39:17","nodeType":"YulFunctionCall","src":"981:39:17"},"variableNames":[{"name":"end","nativeSrc":"974:3:17","nodeType":"YulIdentifier","src":"974:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"649:377:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"722:5:17","nodeType":"YulTypedName","src":"722:5:17","type":""},{"name":"pos","nativeSrc":"729:3:17","nodeType":"YulTypedName","src":"729:3:17","type":""}],"returnVariables":[{"name":"end","nativeSrc":"737:3:17","nodeType":"YulTypedName","src":"737:3:17","type":""}],"src":"649:377:17"},{"body":{"nativeSrc":"1150:195:17","nodeType":"YulBlock","src":"1150:195:17","statements":[{"nativeSrc":"1160:26:17","nodeType":"YulAssignment","src":"1160:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"1172:9:17","nodeType":"YulIdentifier","src":"1172:9:17"},{"kind":"number","nativeSrc":"1183:2:17","nodeType":"YulLiteral","src":"1183:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1168:3:17","nodeType":"YulIdentifier","src":"1168:3:17"},"nativeSrc":"1168:18:17","nodeType":"YulFunctionCall","src":"1168:18:17"},"variableNames":[{"name":"tail","nativeSrc":"1160:4:17","nodeType":"YulIdentifier","src":"1160:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1207:9:17","nodeType":"YulIdentifier","src":"1207:9:17"},{"kind":"number","nativeSrc":"1218:1:17","nodeType":"YulLiteral","src":"1218:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1203:3:17","nodeType":"YulIdentifier","src":"1203:3:17"},"nativeSrc":"1203:17:17","nodeType":"YulFunctionCall","src":"1203:17:17"},{"arguments":[{"name":"tail","nativeSrc":"1226:4:17","nodeType":"YulIdentifier","src":"1226:4:17"},{"name":"headStart","nativeSrc":"1232:9:17","nodeType":"YulIdentifier","src":"1232:9:17"}],"functionName":{"name":"sub","nativeSrc":"1222:3:17","nodeType":"YulIdentifier","src":"1222:3:17"},"nativeSrc":"1222:20:17","nodeType":"YulFunctionCall","src":"1222:20:17"}],"functionName":{"name":"mstore","nativeSrc":"1196:6:17","nodeType":"YulIdentifier","src":"1196:6:17"},"nativeSrc":"1196:47:17","nodeType":"YulFunctionCall","src":"1196:47:17"},"nativeSrc":"1196:47:17","nodeType":"YulExpressionStatement","src":"1196:47:17"},{"nativeSrc":"1252:86:17","nodeType":"YulAssignment","src":"1252:86:17","value":{"arguments":[{"name":"value0","nativeSrc":"1324:6:17","nodeType":"YulIdentifier","src":"1324:6:17"},{"name":"tail","nativeSrc":"1333:4:17","nodeType":"YulIdentifier","src":"1333:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1260:63:17","nodeType":"YulIdentifier","src":"1260:63:17"},"nativeSrc":"1260:78:17","nodeType":"YulFunctionCall","src":"1260:78:17"},"variableNames":[{"name":"tail","nativeSrc":"1252:4:17","nodeType":"YulIdentifier","src":"1252:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1032:313:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1122:9:17","nodeType":"YulTypedName","src":"1122:9:17","type":""},{"name":"value0","nativeSrc":"1134:6:17","nodeType":"YulTypedName","src":"1134:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1145:4:17","nodeType":"YulTypedName","src":"1145:4:17","type":""}],"src":"1032:313:17"},{"body":{"nativeSrc":"1391:35:17","nodeType":"YulBlock","src":"1391:35:17","statements":[{"nativeSrc":"1401:19:17","nodeType":"YulAssignment","src":"1401:19:17","value":{"arguments":[{"kind":"number","nativeSrc":"1417:2:17","nodeType":"YulLiteral","src":"1417:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1411:5:17","nodeType":"YulIdentifier","src":"1411:5:17"},"nativeSrc":"1411:9:17","nodeType":"YulFunctionCall","src":"1411:9:17"},"variableNames":[{"name":"memPtr","nativeSrc":"1401:6:17","nodeType":"YulIdentifier","src":"1401:6:17"}]}]},"name":"allocate_unbounded","nativeSrc":"1351:75:17","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1384:6:17","nodeType":"YulTypedName","src":"1384:6:17","type":""}],"src":"1351:75:17"},{"body":{"nativeSrc":"1521:28:17","nodeType":"YulBlock","src":"1521:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1538:1:17","nodeType":"YulLiteral","src":"1538:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"1541:1:17","nodeType":"YulLiteral","src":"1541:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1531:6:17","nodeType":"YulIdentifier","src":"1531:6:17"},"nativeSrc":"1531:12:17","nodeType":"YulFunctionCall","src":"1531:12:17"},"nativeSrc":"1531:12:17","nodeType":"YulExpressionStatement","src":"1531:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1432:117:17","nodeType":"YulFunctionDefinition","src":"1432:117:17"},{"body":{"nativeSrc":"1644:28:17","nodeType":"YulBlock","src":"1644:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1661:1:17","nodeType":"YulLiteral","src":"1661:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"1664:1:17","nodeType":"YulLiteral","src":"1664:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1654:6:17","nodeType":"YulIdentifier","src":"1654:6:17"},"nativeSrc":"1654:12:17","nodeType":"YulFunctionCall","src":"1654:12:17"},"nativeSrc":"1654:12:17","nodeType":"YulExpressionStatement","src":"1654:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1555:117:17","nodeType":"YulFunctionDefinition","src":"1555:117:17"},{"body":{"nativeSrc":"1723:81:17","nodeType":"YulBlock","src":"1723:81:17","statements":[{"nativeSrc":"1733:65:17","nodeType":"YulAssignment","src":"1733:65:17","value":{"arguments":[{"name":"value","nativeSrc":"1748:5:17","nodeType":"YulIdentifier","src":"1748:5:17"},{"kind":"number","nativeSrc":"1755:42:17","nodeType":"YulLiteral","src":"1755:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1744:3:17","nodeType":"YulIdentifier","src":"1744:3:17"},"nativeSrc":"1744:54:17","nodeType":"YulFunctionCall","src":"1744:54:17"},"variableNames":[{"name":"cleaned","nativeSrc":"1733:7:17","nodeType":"YulIdentifier","src":"1733:7:17"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1678:126:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1705:5:17","nodeType":"YulTypedName","src":"1705:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1715:7:17","nodeType":"YulTypedName","src":"1715:7:17","type":""}],"src":"1678:126:17"},{"body":{"nativeSrc":"1855:51:17","nodeType":"YulBlock","src":"1855:51:17","statements":[{"nativeSrc":"1865:35:17","nodeType":"YulAssignment","src":"1865:35:17","value":{"arguments":[{"name":"value","nativeSrc":"1894:5:17","nodeType":"YulIdentifier","src":"1894:5:17"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1876:17:17","nodeType":"YulIdentifier","src":"1876:17:17"},"nativeSrc":"1876:24:17","nodeType":"YulFunctionCall","src":"1876:24:17"},"variableNames":[{"name":"cleaned","nativeSrc":"1865:7:17","nodeType":"YulIdentifier","src":"1865:7:17"}]}]},"name":"cleanup_t_address","nativeSrc":"1810:96:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1837:5:17","nodeType":"YulTypedName","src":"1837:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1847:7:17","nodeType":"YulTypedName","src":"1847:7:17","type":""}],"src":"1810:96:17"},{"body":{"nativeSrc":"1955:79:17","nodeType":"YulBlock","src":"1955:79:17","statements":[{"body":{"nativeSrc":"2012:16:17","nodeType":"YulBlock","src":"2012:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2021:1:17","nodeType":"YulLiteral","src":"2021:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"2024:1:17","nodeType":"YulLiteral","src":"2024:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2014:6:17","nodeType":"YulIdentifier","src":"2014:6:17"},"nativeSrc":"2014:12:17","nodeType":"YulFunctionCall","src":"2014:12:17"},"nativeSrc":"2014:12:17","nodeType":"YulExpressionStatement","src":"2014:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1978:5:17","nodeType":"YulIdentifier","src":"1978:5:17"},{"arguments":[{"name":"value","nativeSrc":"2003:5:17","nodeType":"YulIdentifier","src":"2003:5:17"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1985:17:17","nodeType":"YulIdentifier","src":"1985:17:17"},"nativeSrc":"1985:24:17","nodeType":"YulFunctionCall","src":"1985:24:17"}],"functionName":{"name":"eq","nativeSrc":"1975:2:17","nodeType":"YulIdentifier","src":"1975:2:17"},"nativeSrc":"1975:35:17","nodeType":"YulFunctionCall","src":"1975:35:17"}],"functionName":{"name":"iszero","nativeSrc":"1968:6:17","nodeType":"YulIdentifier","src":"1968:6:17"},"nativeSrc":"1968:43:17","nodeType":"YulFunctionCall","src":"1968:43:17"},"nativeSrc":"1965:63:17","nodeType":"YulIf","src":"1965:63:17"}]},"name":"validator_revert_t_address","nativeSrc":"1912:122:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1948:5:17","nodeType":"YulTypedName","src":"1948:5:17","type":""}],"src":"1912:122:17"},{"body":{"nativeSrc":"2092:87:17","nodeType":"YulBlock","src":"2092:87:17","statements":[{"nativeSrc":"2102:29:17","nodeType":"YulAssignment","src":"2102:29:17","value":{"arguments":[{"name":"offset","nativeSrc":"2124:6:17","nodeType":"YulIdentifier","src":"2124:6:17"}],"functionName":{"name":"calldataload","nativeSrc":"2111:12:17","nodeType":"YulIdentifier","src":"2111:12:17"},"nativeSrc":"2111:20:17","nodeType":"YulFunctionCall","src":"2111:20:17"},"variableNames":[{"name":"value","nativeSrc":"2102:5:17","nodeType":"YulIdentifier","src":"2102:5:17"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2167:5:17","nodeType":"YulIdentifier","src":"2167:5:17"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2140:26:17","nodeType":"YulIdentifier","src":"2140:26:17"},"nativeSrc":"2140:33:17","nodeType":"YulFunctionCall","src":"2140:33:17"},"nativeSrc":"2140:33:17","nodeType":"YulExpressionStatement","src":"2140:33:17"}]},"name":"abi_decode_t_address","nativeSrc":"2040:139:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2070:6:17","nodeType":"YulTypedName","src":"2070:6:17","type":""},{"name":"end","nativeSrc":"2078:3:17","nodeType":"YulTypedName","src":"2078:3:17","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2086:5:17","nodeType":"YulTypedName","src":"2086:5:17","type":""}],"src":"2040:139:17"},{"body":{"nativeSrc":"2230:32:17","nodeType":"YulBlock","src":"2230:32:17","statements":[{"nativeSrc":"2240:16:17","nodeType":"YulAssignment","src":"2240:16:17","value":{"name":"value","nativeSrc":"2251:5:17","nodeType":"YulIdentifier","src":"2251:5:17"},"variableNames":[{"name":"cleaned","nativeSrc":"2240:7:17","nodeType":"YulIdentifier","src":"2240:7:17"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2185:77:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2212:5:17","nodeType":"YulTypedName","src":"2212:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2222:7:17","nodeType":"YulTypedName","src":"2222:7:17","type":""}],"src":"2185:77:17"},{"body":{"nativeSrc":"2311:79:17","nodeType":"YulBlock","src":"2311:79:17","statements":[{"body":{"nativeSrc":"2368:16:17","nodeType":"YulBlock","src":"2368:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2377:1:17","nodeType":"YulLiteral","src":"2377:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"2380:1:17","nodeType":"YulLiteral","src":"2380:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2370:6:17","nodeType":"YulIdentifier","src":"2370:6:17"},"nativeSrc":"2370:12:17","nodeType":"YulFunctionCall","src":"2370:12:17"},"nativeSrc":"2370:12:17","nodeType":"YulExpressionStatement","src":"2370:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2334:5:17","nodeType":"YulIdentifier","src":"2334:5:17"},{"arguments":[{"name":"value","nativeSrc":"2359:5:17","nodeType":"YulIdentifier","src":"2359:5:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2341:17:17","nodeType":"YulIdentifier","src":"2341:17:17"},"nativeSrc":"2341:24:17","nodeType":"YulFunctionCall","src":"2341:24:17"}],"functionName":{"name":"eq","nativeSrc":"2331:2:17","nodeType":"YulIdentifier","src":"2331:2:17"},"nativeSrc":"2331:35:17","nodeType":"YulFunctionCall","src":"2331:35:17"}],"functionName":{"name":"iszero","nativeSrc":"2324:6:17","nodeType":"YulIdentifier","src":"2324:6:17"},"nativeSrc":"2324:43:17","nodeType":"YulFunctionCall","src":"2324:43:17"},"nativeSrc":"2321:63:17","nodeType":"YulIf","src":"2321:63:17"}]},"name":"validator_revert_t_uint256","nativeSrc":"2268:122:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2304:5:17","nodeType":"YulTypedName","src":"2304:5:17","type":""}],"src":"2268:122:17"},{"body":{"nativeSrc":"2448:87:17","nodeType":"YulBlock","src":"2448:87:17","statements":[{"nativeSrc":"2458:29:17","nodeType":"YulAssignment","src":"2458:29:17","value":{"arguments":[{"name":"offset","nativeSrc":"2480:6:17","nodeType":"YulIdentifier","src":"2480:6:17"}],"functionName":{"name":"calldataload","nativeSrc":"2467:12:17","nodeType":"YulIdentifier","src":"2467:12:17"},"nativeSrc":"2467:20:17","nodeType":"YulFunctionCall","src":"2467:20:17"},"variableNames":[{"name":"value","nativeSrc":"2458:5:17","nodeType":"YulIdentifier","src":"2458:5:17"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2523:5:17","nodeType":"YulIdentifier","src":"2523:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2496:26:17","nodeType":"YulIdentifier","src":"2496:26:17"},"nativeSrc":"2496:33:17","nodeType":"YulFunctionCall","src":"2496:33:17"},"nativeSrc":"2496:33:17","nodeType":"YulExpressionStatement","src":"2496:33:17"}]},"name":"abi_decode_t_uint256","nativeSrc":"2396:139:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2426:6:17","nodeType":"YulTypedName","src":"2426:6:17","type":""},{"name":"end","nativeSrc":"2434:3:17","nodeType":"YulTypedName","src":"2434:3:17","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2442:5:17","nodeType":"YulTypedName","src":"2442:5:17","type":""}],"src":"2396:139:17"},{"body":{"nativeSrc":"2624:391:17","nodeType":"YulBlock","src":"2624:391:17","statements":[{"body":{"nativeSrc":"2670:83:17","nodeType":"YulBlock","src":"2670:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2672:77:17","nodeType":"YulIdentifier","src":"2672:77:17"},"nativeSrc":"2672:79:17","nodeType":"YulFunctionCall","src":"2672:79:17"},"nativeSrc":"2672:79:17","nodeType":"YulExpressionStatement","src":"2672:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2645:7:17","nodeType":"YulIdentifier","src":"2645:7:17"},{"name":"headStart","nativeSrc":"2654:9:17","nodeType":"YulIdentifier","src":"2654:9:17"}],"functionName":{"name":"sub","nativeSrc":"2641:3:17","nodeType":"YulIdentifier","src":"2641:3:17"},"nativeSrc":"2641:23:17","nodeType":"YulFunctionCall","src":"2641:23:17"},{"kind":"number","nativeSrc":"2666:2:17","nodeType":"YulLiteral","src":"2666:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2637:3:17","nodeType":"YulIdentifier","src":"2637:3:17"},"nativeSrc":"2637:32:17","nodeType":"YulFunctionCall","src":"2637:32:17"},"nativeSrc":"2634:119:17","nodeType":"YulIf","src":"2634:119:17"},{"nativeSrc":"2763:117:17","nodeType":"YulBlock","src":"2763:117:17","statements":[{"nativeSrc":"2778:15:17","nodeType":"YulVariableDeclaration","src":"2778:15:17","value":{"kind":"number","nativeSrc":"2792:1:17","nodeType":"YulLiteral","src":"2792:1:17","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2782:6:17","nodeType":"YulTypedName","src":"2782:6:17","type":""}]},{"nativeSrc":"2807:63:17","nodeType":"YulAssignment","src":"2807:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2842:9:17","nodeType":"YulIdentifier","src":"2842:9:17"},{"name":"offset","nativeSrc":"2853:6:17","nodeType":"YulIdentifier","src":"2853:6:17"}],"functionName":{"name":"add","nativeSrc":"2838:3:17","nodeType":"YulIdentifier","src":"2838:3:17"},"nativeSrc":"2838:22:17","nodeType":"YulFunctionCall","src":"2838:22:17"},{"name":"dataEnd","nativeSrc":"2862:7:17","nodeType":"YulIdentifier","src":"2862:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2817:20:17","nodeType":"YulIdentifier","src":"2817:20:17"},"nativeSrc":"2817:53:17","nodeType":"YulFunctionCall","src":"2817:53:17"},"variableNames":[{"name":"value0","nativeSrc":"2807:6:17","nodeType":"YulIdentifier","src":"2807:6:17"}]}]},{"nativeSrc":"2890:118:17","nodeType":"YulBlock","src":"2890:118:17","statements":[{"nativeSrc":"2905:16:17","nodeType":"YulVariableDeclaration","src":"2905:16:17","value":{"kind":"number","nativeSrc":"2919:2:17","nodeType":"YulLiteral","src":"2919:2:17","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2909:6:17","nodeType":"YulTypedName","src":"2909:6:17","type":""}]},{"nativeSrc":"2935:63:17","nodeType":"YulAssignment","src":"2935:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2970:9:17","nodeType":"YulIdentifier","src":"2970:9:17"},{"name":"offset","nativeSrc":"2981:6:17","nodeType":"YulIdentifier","src":"2981:6:17"}],"functionName":{"name":"add","nativeSrc":"2966:3:17","nodeType":"YulIdentifier","src":"2966:3:17"},"nativeSrc":"2966:22:17","nodeType":"YulFunctionCall","src":"2966:22:17"},{"name":"dataEnd","nativeSrc":"2990:7:17","nodeType":"YulIdentifier","src":"2990:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2945:20:17","nodeType":"YulIdentifier","src":"2945:20:17"},"nativeSrc":"2945:53:17","nodeType":"YulFunctionCall","src":"2945:53:17"},"variableNames":[{"name":"value1","nativeSrc":"2935:6:17","nodeType":"YulIdentifier","src":"2935:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2541:474:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2586:9:17","nodeType":"YulTypedName","src":"2586:9:17","type":""},{"name":"dataEnd","nativeSrc":"2597:7:17","nodeType":"YulTypedName","src":"2597:7:17","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2609:6:17","nodeType":"YulTypedName","src":"2609:6:17","type":""},{"name":"value1","nativeSrc":"2617:6:17","nodeType":"YulTypedName","src":"2617:6:17","type":""}],"src":"2541:474:17"},{"body":{"nativeSrc":"3063:48:17","nodeType":"YulBlock","src":"3063:48:17","statements":[{"nativeSrc":"3073:32:17","nodeType":"YulAssignment","src":"3073:32:17","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3098:5:17","nodeType":"YulIdentifier","src":"3098:5:17"}],"functionName":{"name":"iszero","nativeSrc":"3091:6:17","nodeType":"YulIdentifier","src":"3091:6:17"},"nativeSrc":"3091:13:17","nodeType":"YulFunctionCall","src":"3091:13:17"}],"functionName":{"name":"iszero","nativeSrc":"3084:6:17","nodeType":"YulIdentifier","src":"3084:6:17"},"nativeSrc":"3084:21:17","nodeType":"YulFunctionCall","src":"3084:21:17"},"variableNames":[{"name":"cleaned","nativeSrc":"3073:7:17","nodeType":"YulIdentifier","src":"3073:7:17"}]}]},"name":"cleanup_t_bool","nativeSrc":"3021:90:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3045:5:17","nodeType":"YulTypedName","src":"3045:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3055:7:17","nodeType":"YulTypedName","src":"3055:7:17","type":""}],"src":"3021:90:17"},{"body":{"nativeSrc":"3176:50:17","nodeType":"YulBlock","src":"3176:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3193:3:17","nodeType":"YulIdentifier","src":"3193:3:17"},{"arguments":[{"name":"value","nativeSrc":"3213:5:17","nodeType":"YulIdentifier","src":"3213:5:17"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3198:14:17","nodeType":"YulIdentifier","src":"3198:14:17"},"nativeSrc":"3198:21:17","nodeType":"YulFunctionCall","src":"3198:21:17"}],"functionName":{"name":"mstore","nativeSrc":"3186:6:17","nodeType":"YulIdentifier","src":"3186:6:17"},"nativeSrc":"3186:34:17","nodeType":"YulFunctionCall","src":"3186:34:17"},"nativeSrc":"3186:34:17","nodeType":"YulExpressionStatement","src":"3186:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3117:109:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3164:5:17","nodeType":"YulTypedName","src":"3164:5:17","type":""},{"name":"pos","nativeSrc":"3171:3:17","nodeType":"YulTypedName","src":"3171:3:17","type":""}],"src":"3117:109:17"},{"body":{"nativeSrc":"3324:118:17","nodeType":"YulBlock","src":"3324:118:17","statements":[{"nativeSrc":"3334:26:17","nodeType":"YulAssignment","src":"3334:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"3346:9:17","nodeType":"YulIdentifier","src":"3346:9:17"},{"kind":"number","nativeSrc":"3357:2:17","nodeType":"YulLiteral","src":"3357:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3342:3:17","nodeType":"YulIdentifier","src":"3342:3:17"},"nativeSrc":"3342:18:17","nodeType":"YulFunctionCall","src":"3342:18:17"},"variableNames":[{"name":"tail","nativeSrc":"3334:4:17","nodeType":"YulIdentifier","src":"3334:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3408:6:17","nodeType":"YulIdentifier","src":"3408:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"3421:9:17","nodeType":"YulIdentifier","src":"3421:9:17"},{"kind":"number","nativeSrc":"3432:1:17","nodeType":"YulLiteral","src":"3432:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3417:3:17","nodeType":"YulIdentifier","src":"3417:3:17"},"nativeSrc":"3417:17:17","nodeType":"YulFunctionCall","src":"3417:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3370:37:17","nodeType":"YulIdentifier","src":"3370:37:17"},"nativeSrc":"3370:65:17","nodeType":"YulFunctionCall","src":"3370:65:17"},"nativeSrc":"3370:65:17","nodeType":"YulExpressionStatement","src":"3370:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3232:210:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3296:9:17","nodeType":"YulTypedName","src":"3296:9:17","type":""},{"name":"value0","nativeSrc":"3308:6:17","nodeType":"YulTypedName","src":"3308:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3319:4:17","nodeType":"YulTypedName","src":"3319:4:17","type":""}],"src":"3232:210:17"},{"body":{"nativeSrc":"3513:53:17","nodeType":"YulBlock","src":"3513:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3530:3:17","nodeType":"YulIdentifier","src":"3530:3:17"},{"arguments":[{"name":"value","nativeSrc":"3553:5:17","nodeType":"YulIdentifier","src":"3553:5:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3535:17:17","nodeType":"YulIdentifier","src":"3535:17:17"},"nativeSrc":"3535:24:17","nodeType":"YulFunctionCall","src":"3535:24:17"}],"functionName":{"name":"mstore","nativeSrc":"3523:6:17","nodeType":"YulIdentifier","src":"3523:6:17"},"nativeSrc":"3523:37:17","nodeType":"YulFunctionCall","src":"3523:37:17"},"nativeSrc":"3523:37:17","nodeType":"YulExpressionStatement","src":"3523:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3448:118:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3501:5:17","nodeType":"YulTypedName","src":"3501:5:17","type":""},{"name":"pos","nativeSrc":"3508:3:17","nodeType":"YulTypedName","src":"3508:3:17","type":""}],"src":"3448:118:17"},{"body":{"nativeSrc":"3670:124:17","nodeType":"YulBlock","src":"3670:124:17","statements":[{"nativeSrc":"3680:26:17","nodeType":"YulAssignment","src":"3680:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"3692:9:17","nodeType":"YulIdentifier","src":"3692:9:17"},{"kind":"number","nativeSrc":"3703:2:17","nodeType":"YulLiteral","src":"3703:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3688:3:17","nodeType":"YulIdentifier","src":"3688:3:17"},"nativeSrc":"3688:18:17","nodeType":"YulFunctionCall","src":"3688:18:17"},"variableNames":[{"name":"tail","nativeSrc":"3680:4:17","nodeType":"YulIdentifier","src":"3680:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3760:6:17","nodeType":"YulIdentifier","src":"3760:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"3773:9:17","nodeType":"YulIdentifier","src":"3773:9:17"},{"kind":"number","nativeSrc":"3784:1:17","nodeType":"YulLiteral","src":"3784:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3769:3:17","nodeType":"YulIdentifier","src":"3769:3:17"},"nativeSrc":"3769:17:17","nodeType":"YulFunctionCall","src":"3769:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3716:43:17","nodeType":"YulIdentifier","src":"3716:43:17"},"nativeSrc":"3716:71:17","nodeType":"YulFunctionCall","src":"3716:71:17"},"nativeSrc":"3716:71:17","nodeType":"YulExpressionStatement","src":"3716:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3572:222:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3642:9:17","nodeType":"YulTypedName","src":"3642:9:17","type":""},{"name":"value0","nativeSrc":"3654:6:17","nodeType":"YulTypedName","src":"3654:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3665:4:17","nodeType":"YulTypedName","src":"3665:4:17","type":""}],"src":"3572:222:17"},{"body":{"nativeSrc":"3900:519:17","nodeType":"YulBlock","src":"3900:519:17","statements":[{"body":{"nativeSrc":"3946:83:17","nodeType":"YulBlock","src":"3946:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3948:77:17","nodeType":"YulIdentifier","src":"3948:77:17"},"nativeSrc":"3948:79:17","nodeType":"YulFunctionCall","src":"3948:79:17"},"nativeSrc":"3948:79:17","nodeType":"YulExpressionStatement","src":"3948:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3921:7:17","nodeType":"YulIdentifier","src":"3921:7:17"},{"name":"headStart","nativeSrc":"3930:9:17","nodeType":"YulIdentifier","src":"3930:9:17"}],"functionName":{"name":"sub","nativeSrc":"3917:3:17","nodeType":"YulIdentifier","src":"3917:3:17"},"nativeSrc":"3917:23:17","nodeType":"YulFunctionCall","src":"3917:23:17"},{"kind":"number","nativeSrc":"3942:2:17","nodeType":"YulLiteral","src":"3942:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3913:3:17","nodeType":"YulIdentifier","src":"3913:3:17"},"nativeSrc":"3913:32:17","nodeType":"YulFunctionCall","src":"3913:32:17"},"nativeSrc":"3910:119:17","nodeType":"YulIf","src":"3910:119:17"},{"nativeSrc":"4039:117:17","nodeType":"YulBlock","src":"4039:117:17","statements":[{"nativeSrc":"4054:15:17","nodeType":"YulVariableDeclaration","src":"4054:15:17","value":{"kind":"number","nativeSrc":"4068:1:17","nodeType":"YulLiteral","src":"4068:1:17","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4058:6:17","nodeType":"YulTypedName","src":"4058:6:17","type":""}]},{"nativeSrc":"4083:63:17","nodeType":"YulAssignment","src":"4083:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4118:9:17","nodeType":"YulIdentifier","src":"4118:9:17"},{"name":"offset","nativeSrc":"4129:6:17","nodeType":"YulIdentifier","src":"4129:6:17"}],"functionName":{"name":"add","nativeSrc":"4114:3:17","nodeType":"YulIdentifier","src":"4114:3:17"},"nativeSrc":"4114:22:17","nodeType":"YulFunctionCall","src":"4114:22:17"},{"name":"dataEnd","nativeSrc":"4138:7:17","nodeType":"YulIdentifier","src":"4138:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4093:20:17","nodeType":"YulIdentifier","src":"4093:20:17"},"nativeSrc":"4093:53:17","nodeType":"YulFunctionCall","src":"4093:53:17"},"variableNames":[{"name":"value0","nativeSrc":"4083:6:17","nodeType":"YulIdentifier","src":"4083:6:17"}]}]},{"nativeSrc":"4166:118:17","nodeType":"YulBlock","src":"4166:118:17","statements":[{"nativeSrc":"4181:16:17","nodeType":"YulVariableDeclaration","src":"4181:16:17","value":{"kind":"number","nativeSrc":"4195:2:17","nodeType":"YulLiteral","src":"4195:2:17","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4185:6:17","nodeType":"YulTypedName","src":"4185:6:17","type":""}]},{"nativeSrc":"4211:63:17","nodeType":"YulAssignment","src":"4211:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4246:9:17","nodeType":"YulIdentifier","src":"4246:9:17"},{"name":"offset","nativeSrc":"4257:6:17","nodeType":"YulIdentifier","src":"4257:6:17"}],"functionName":{"name":"add","nativeSrc":"4242:3:17","nodeType":"YulIdentifier","src":"4242:3:17"},"nativeSrc":"4242:22:17","nodeType":"YulFunctionCall","src":"4242:22:17"},{"name":"dataEnd","nativeSrc":"4266:7:17","nodeType":"YulIdentifier","src":"4266:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4221:20:17","nodeType":"YulIdentifier","src":"4221:20:17"},"nativeSrc":"4221:53:17","nodeType":"YulFunctionCall","src":"4221:53:17"},"variableNames":[{"name":"value1","nativeSrc":"4211:6:17","nodeType":"YulIdentifier","src":"4211:6:17"}]}]},{"nativeSrc":"4294:118:17","nodeType":"YulBlock","src":"4294:118:17","statements":[{"nativeSrc":"4309:16:17","nodeType":"YulVariableDeclaration","src":"4309:16:17","value":{"kind":"number","nativeSrc":"4323:2:17","nodeType":"YulLiteral","src":"4323:2:17","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4313:6:17","nodeType":"YulTypedName","src":"4313:6:17","type":""}]},{"nativeSrc":"4339:63:17","nodeType":"YulAssignment","src":"4339:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4374:9:17","nodeType":"YulIdentifier","src":"4374:9:17"},{"name":"offset","nativeSrc":"4385:6:17","nodeType":"YulIdentifier","src":"4385:6:17"}],"functionName":{"name":"add","nativeSrc":"4370:3:17","nodeType":"YulIdentifier","src":"4370:3:17"},"nativeSrc":"4370:22:17","nodeType":"YulFunctionCall","src":"4370:22:17"},{"name":"dataEnd","nativeSrc":"4394:7:17","nodeType":"YulIdentifier","src":"4394:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4349:20:17","nodeType":"YulIdentifier","src":"4349:20:17"},"nativeSrc":"4349:53:17","nodeType":"YulFunctionCall","src":"4349:53:17"},"variableNames":[{"name":"value2","nativeSrc":"4339:6:17","nodeType":"YulIdentifier","src":"4339:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3800:619:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3854:9:17","nodeType":"YulTypedName","src":"3854:9:17","type":""},{"name":"dataEnd","nativeSrc":"3865:7:17","nodeType":"YulTypedName","src":"3865:7:17","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3877:6:17","nodeType":"YulTypedName","src":"3877:6:17","type":""},{"name":"value1","nativeSrc":"3885:6:17","nodeType":"YulTypedName","src":"3885:6:17","type":""},{"name":"value2","nativeSrc":"3893:6:17","nodeType":"YulTypedName","src":"3893:6:17","type":""}],"src":"3800:619:17"},{"body":{"nativeSrc":"4468:43:17","nodeType":"YulBlock","src":"4468:43:17","statements":[{"nativeSrc":"4478:27:17","nodeType":"YulAssignment","src":"4478:27:17","value":{"arguments":[{"name":"value","nativeSrc":"4493:5:17","nodeType":"YulIdentifier","src":"4493:5:17"},{"kind":"number","nativeSrc":"4500:4:17","nodeType":"YulLiteral","src":"4500:4:17","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4489:3:17","nodeType":"YulIdentifier","src":"4489:3:17"},"nativeSrc":"4489:16:17","nodeType":"YulFunctionCall","src":"4489:16:17"},"variableNames":[{"name":"cleaned","nativeSrc":"4478:7:17","nodeType":"YulIdentifier","src":"4478:7:17"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4425:86:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4450:5:17","nodeType":"YulTypedName","src":"4450:5:17","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4460:7:17","nodeType":"YulTypedName","src":"4460:7:17","type":""}],"src":"4425:86:17"},{"body":{"nativeSrc":"4578:51:17","nodeType":"YulBlock","src":"4578:51:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4595:3:17","nodeType":"YulIdentifier","src":"4595:3:17"},{"arguments":[{"name":"value","nativeSrc":"4616:5:17","nodeType":"YulIdentifier","src":"4616:5:17"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4600:15:17","nodeType":"YulIdentifier","src":"4600:15:17"},"nativeSrc":"4600:22:17","nodeType":"YulFunctionCall","src":"4600:22:17"}],"functionName":{"name":"mstore","nativeSrc":"4588:6:17","nodeType":"YulIdentifier","src":"4588:6:17"},"nativeSrc":"4588:35:17","nodeType":"YulFunctionCall","src":"4588:35:17"},"nativeSrc":"4588:35:17","nodeType":"YulExpressionStatement","src":"4588:35:17"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4517:112:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4566:5:17","nodeType":"YulTypedName","src":"4566:5:17","type":""},{"name":"pos","nativeSrc":"4573:3:17","nodeType":"YulTypedName","src":"4573:3:17","type":""}],"src":"4517:112:17"},{"body":{"nativeSrc":"4729:120:17","nodeType":"YulBlock","src":"4729:120:17","statements":[{"nativeSrc":"4739:26:17","nodeType":"YulAssignment","src":"4739:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"4751:9:17","nodeType":"YulIdentifier","src":"4751:9:17"},{"kind":"number","nativeSrc":"4762:2:17","nodeType":"YulLiteral","src":"4762:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4747:3:17","nodeType":"YulIdentifier","src":"4747:3:17"},"nativeSrc":"4747:18:17","nodeType":"YulFunctionCall","src":"4747:18:17"},"variableNames":[{"name":"tail","nativeSrc":"4739:4:17","nodeType":"YulIdentifier","src":"4739:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4815:6:17","nodeType":"YulIdentifier","src":"4815:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"4828:9:17","nodeType":"YulIdentifier","src":"4828:9:17"},{"kind":"number","nativeSrc":"4839:1:17","nodeType":"YulLiteral","src":"4839:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4824:3:17","nodeType":"YulIdentifier","src":"4824:3:17"},"nativeSrc":"4824:17:17","nodeType":"YulFunctionCall","src":"4824:17:17"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4775:39:17","nodeType":"YulIdentifier","src":"4775:39:17"},"nativeSrc":"4775:67:17","nodeType":"YulFunctionCall","src":"4775:67:17"},"nativeSrc":"4775:67:17","nodeType":"YulExpressionStatement","src":"4775:67:17"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4635:214:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4701:9:17","nodeType":"YulTypedName","src":"4701:9:17","type":""},{"name":"value0","nativeSrc":"4713:6:17","nodeType":"YulTypedName","src":"4713:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4724:4:17","nodeType":"YulTypedName","src":"4724:4:17","type":""}],"src":"4635:214:17"},{"body":{"nativeSrc":"4921:263:17","nodeType":"YulBlock","src":"4921:263:17","statements":[{"body":{"nativeSrc":"4967:83:17","nodeType":"YulBlock","src":"4967:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4969:77:17","nodeType":"YulIdentifier","src":"4969:77:17"},"nativeSrc":"4969:79:17","nodeType":"YulFunctionCall","src":"4969:79:17"},"nativeSrc":"4969:79:17","nodeType":"YulExpressionStatement","src":"4969:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4942:7:17","nodeType":"YulIdentifier","src":"4942:7:17"},{"name":"headStart","nativeSrc":"4951:9:17","nodeType":"YulIdentifier","src":"4951:9:17"}],"functionName":{"name":"sub","nativeSrc":"4938:3:17","nodeType":"YulIdentifier","src":"4938:3:17"},"nativeSrc":"4938:23:17","nodeType":"YulFunctionCall","src":"4938:23:17"},{"kind":"number","nativeSrc":"4963:2:17","nodeType":"YulLiteral","src":"4963:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4934:3:17","nodeType":"YulIdentifier","src":"4934:3:17"},"nativeSrc":"4934:32:17","nodeType":"YulFunctionCall","src":"4934:32:17"},"nativeSrc":"4931:119:17","nodeType":"YulIf","src":"4931:119:17"},{"nativeSrc":"5060:117:17","nodeType":"YulBlock","src":"5060:117:17","statements":[{"nativeSrc":"5075:15:17","nodeType":"YulVariableDeclaration","src":"5075:15:17","value":{"kind":"number","nativeSrc":"5089:1:17","nodeType":"YulLiteral","src":"5089:1:17","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5079:6:17","nodeType":"YulTypedName","src":"5079:6:17","type":""}]},{"nativeSrc":"5104:63:17","nodeType":"YulAssignment","src":"5104:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5139:9:17","nodeType":"YulIdentifier","src":"5139:9:17"},{"name":"offset","nativeSrc":"5150:6:17","nodeType":"YulIdentifier","src":"5150:6:17"}],"functionName":{"name":"add","nativeSrc":"5135:3:17","nodeType":"YulIdentifier","src":"5135:3:17"},"nativeSrc":"5135:22:17","nodeType":"YulFunctionCall","src":"5135:22:17"},{"name":"dataEnd","nativeSrc":"5159:7:17","nodeType":"YulIdentifier","src":"5159:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5114:20:17","nodeType":"YulIdentifier","src":"5114:20:17"},"nativeSrc":"5114:53:17","nodeType":"YulFunctionCall","src":"5114:53:17"},"variableNames":[{"name":"value0","nativeSrc":"5104:6:17","nodeType":"YulIdentifier","src":"5104:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"4855:329:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4891:9:17","nodeType":"YulTypedName","src":"4891:9:17","type":""},{"name":"dataEnd","nativeSrc":"4902:7:17","nodeType":"YulTypedName","src":"4902:7:17","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4914:6:17","nodeType":"YulTypedName","src":"4914:6:17","type":""}],"src":"4855:329:17"},{"body":{"nativeSrc":"5255:53:17","nodeType":"YulBlock","src":"5255:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5272:3:17","nodeType":"YulIdentifier","src":"5272:3:17"},{"arguments":[{"name":"value","nativeSrc":"5295:5:17","nodeType":"YulIdentifier","src":"5295:5:17"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5277:17:17","nodeType":"YulIdentifier","src":"5277:17:17"},"nativeSrc":"5277:24:17","nodeType":"YulFunctionCall","src":"5277:24:17"}],"functionName":{"name":"mstore","nativeSrc":"5265:6:17","nodeType":"YulIdentifier","src":"5265:6:17"},"nativeSrc":"5265:37:17","nodeType":"YulFunctionCall","src":"5265:37:17"},"nativeSrc":"5265:37:17","nodeType":"YulExpressionStatement","src":"5265:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5190:118:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5243:5:17","nodeType":"YulTypedName","src":"5243:5:17","type":""},{"name":"pos","nativeSrc":"5250:3:17","nodeType":"YulTypedName","src":"5250:3:17","type":""}],"src":"5190:118:17"},{"body":{"nativeSrc":"5412:124:17","nodeType":"YulBlock","src":"5412:124:17","statements":[{"nativeSrc":"5422:26:17","nodeType":"YulAssignment","src":"5422:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"5434:9:17","nodeType":"YulIdentifier","src":"5434:9:17"},{"kind":"number","nativeSrc":"5445:2:17","nodeType":"YulLiteral","src":"5445:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5430:3:17","nodeType":"YulIdentifier","src":"5430:3:17"},"nativeSrc":"5430:18:17","nodeType":"YulFunctionCall","src":"5430:18:17"},"variableNames":[{"name":"tail","nativeSrc":"5422:4:17","nodeType":"YulIdentifier","src":"5422:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5502:6:17","nodeType":"YulIdentifier","src":"5502:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"5515:9:17","nodeType":"YulIdentifier","src":"5515:9:17"},{"kind":"number","nativeSrc":"5526:1:17","nodeType":"YulLiteral","src":"5526:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5511:3:17","nodeType":"YulIdentifier","src":"5511:3:17"},"nativeSrc":"5511:17:17","nodeType":"YulFunctionCall","src":"5511:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5458:43:17","nodeType":"YulIdentifier","src":"5458:43:17"},"nativeSrc":"5458:71:17","nodeType":"YulFunctionCall","src":"5458:71:17"},"nativeSrc":"5458:71:17","nodeType":"YulExpressionStatement","src":"5458:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5314:222:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5384:9:17","nodeType":"YulTypedName","src":"5384:9:17","type":""},{"name":"value0","nativeSrc":"5396:6:17","nodeType":"YulTypedName","src":"5396:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5407:4:17","nodeType":"YulTypedName","src":"5407:4:17","type":""}],"src":"5314:222:17"},{"body":{"nativeSrc":"5625:391:17","nodeType":"YulBlock","src":"5625:391:17","statements":[{"body":{"nativeSrc":"5671:83:17","nodeType":"YulBlock","src":"5671:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5673:77:17","nodeType":"YulIdentifier","src":"5673:77:17"},"nativeSrc":"5673:79:17","nodeType":"YulFunctionCall","src":"5673:79:17"},"nativeSrc":"5673:79:17","nodeType":"YulExpressionStatement","src":"5673:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5646:7:17","nodeType":"YulIdentifier","src":"5646:7:17"},{"name":"headStart","nativeSrc":"5655:9:17","nodeType":"YulIdentifier","src":"5655:9:17"}],"functionName":{"name":"sub","nativeSrc":"5642:3:17","nodeType":"YulIdentifier","src":"5642:3:17"},"nativeSrc":"5642:23:17","nodeType":"YulFunctionCall","src":"5642:23:17"},{"kind":"number","nativeSrc":"5667:2:17","nodeType":"YulLiteral","src":"5667:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5638:3:17","nodeType":"YulIdentifier","src":"5638:3:17"},"nativeSrc":"5638:32:17","nodeType":"YulFunctionCall","src":"5638:32:17"},"nativeSrc":"5635:119:17","nodeType":"YulIf","src":"5635:119:17"},{"nativeSrc":"5764:117:17","nodeType":"YulBlock","src":"5764:117:17","statements":[{"nativeSrc":"5779:15:17","nodeType":"YulVariableDeclaration","src":"5779:15:17","value":{"kind":"number","nativeSrc":"5793:1:17","nodeType":"YulLiteral","src":"5793:1:17","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5783:6:17","nodeType":"YulTypedName","src":"5783:6:17","type":""}]},{"nativeSrc":"5808:63:17","nodeType":"YulAssignment","src":"5808:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5843:9:17","nodeType":"YulIdentifier","src":"5843:9:17"},{"name":"offset","nativeSrc":"5854:6:17","nodeType":"YulIdentifier","src":"5854:6:17"}],"functionName":{"name":"add","nativeSrc":"5839:3:17","nodeType":"YulIdentifier","src":"5839:3:17"},"nativeSrc":"5839:22:17","nodeType":"YulFunctionCall","src":"5839:22:17"},{"name":"dataEnd","nativeSrc":"5863:7:17","nodeType":"YulIdentifier","src":"5863:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5818:20:17","nodeType":"YulIdentifier","src":"5818:20:17"},"nativeSrc":"5818:53:17","nodeType":"YulFunctionCall","src":"5818:53:17"},"variableNames":[{"name":"value0","nativeSrc":"5808:6:17","nodeType":"YulIdentifier","src":"5808:6:17"}]}]},{"nativeSrc":"5891:118:17","nodeType":"YulBlock","src":"5891:118:17","statements":[{"nativeSrc":"5906:16:17","nodeType":"YulVariableDeclaration","src":"5906:16:17","value":{"kind":"number","nativeSrc":"5920:2:17","nodeType":"YulLiteral","src":"5920:2:17","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5910:6:17","nodeType":"YulTypedName","src":"5910:6:17","type":""}]},{"nativeSrc":"5936:63:17","nodeType":"YulAssignment","src":"5936:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5971:9:17","nodeType":"YulIdentifier","src":"5971:9:17"},{"name":"offset","nativeSrc":"5982:6:17","nodeType":"YulIdentifier","src":"5982:6:17"}],"functionName":{"name":"add","nativeSrc":"5967:3:17","nodeType":"YulIdentifier","src":"5967:3:17"},"nativeSrc":"5967:22:17","nodeType":"YulFunctionCall","src":"5967:22:17"},{"name":"dataEnd","nativeSrc":"5991:7:17","nodeType":"YulIdentifier","src":"5991:7:17"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5946:20:17","nodeType":"YulIdentifier","src":"5946:20:17"},"nativeSrc":"5946:53:17","nodeType":"YulFunctionCall","src":"5946:53:17"},"variableNames":[{"name":"value1","nativeSrc":"5936:6:17","nodeType":"YulIdentifier","src":"5936:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"5542:474:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5587:9:17","nodeType":"YulTypedName","src":"5587:9:17","type":""},{"name":"dataEnd","nativeSrc":"5598:7:17","nodeType":"YulTypedName","src":"5598:7:17","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5610:6:17","nodeType":"YulTypedName","src":"5610:6:17","type":""},{"name":"value1","nativeSrc":"5618:6:17","nodeType":"YulTypedName","src":"5618:6:17","type":""}],"src":"5542:474:17"},{"body":{"nativeSrc":"6050:152:17","nodeType":"YulBlock","src":"6050:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6067:1:17","nodeType":"YulLiteral","src":"6067:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"6070:77:17","nodeType":"YulLiteral","src":"6070:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6060:6:17","nodeType":"YulIdentifier","src":"6060:6:17"},"nativeSrc":"6060:88:17","nodeType":"YulFunctionCall","src":"6060:88:17"},"nativeSrc":"6060:88:17","nodeType":"YulExpressionStatement","src":"6060:88:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6164:1:17","nodeType":"YulLiteral","src":"6164:1:17","type":"","value":"4"},{"kind":"number","nativeSrc":"6167:4:17","nodeType":"YulLiteral","src":"6167:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"6157:6:17","nodeType":"YulIdentifier","src":"6157:6:17"},"nativeSrc":"6157:15:17","nodeType":"YulFunctionCall","src":"6157:15:17"},"nativeSrc":"6157:15:17","nodeType":"YulExpressionStatement","src":"6157:15:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6188:1:17","nodeType":"YulLiteral","src":"6188:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"6191:4:17","nodeType":"YulLiteral","src":"6191:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6181:6:17","nodeType":"YulIdentifier","src":"6181:6:17"},"nativeSrc":"6181:15:17","nodeType":"YulFunctionCall","src":"6181:15:17"},"nativeSrc":"6181:15:17","nodeType":"YulExpressionStatement","src":"6181:15:17"}]},"name":"panic_error_0x22","nativeSrc":"6022:180:17","nodeType":"YulFunctionDefinition","src":"6022:180:17"},{"body":{"nativeSrc":"6259:269:17","nodeType":"YulBlock","src":"6259:269:17","statements":[{"nativeSrc":"6269:22:17","nodeType":"YulAssignment","src":"6269:22:17","value":{"arguments":[{"name":"data","nativeSrc":"6283:4:17","nodeType":"YulIdentifier","src":"6283:4:17"},{"kind":"number","nativeSrc":"6289:1:17","nodeType":"YulLiteral","src":"6289:1:17","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"6279:3:17","nodeType":"YulIdentifier","src":"6279:3:17"},"nativeSrc":"6279:12:17","nodeType":"YulFunctionCall","src":"6279:12:17"},"variableNames":[{"name":"length","nativeSrc":"6269:6:17","nodeType":"YulIdentifier","src":"6269:6:17"}]},{"nativeSrc":"6300:38:17","nodeType":"YulVariableDeclaration","src":"6300:38:17","value":{"arguments":[{"name":"data","nativeSrc":"6330:4:17","nodeType":"YulIdentifier","src":"6330:4:17"},{"kind":"number","nativeSrc":"6336:1:17","nodeType":"YulLiteral","src":"6336:1:17","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"6326:3:17","nodeType":"YulIdentifier","src":"6326:3:17"},"nativeSrc":"6326:12:17","nodeType":"YulFunctionCall","src":"6326:12:17"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"6304:18:17","nodeType":"YulTypedName","src":"6304:18:17","type":""}]},{"body":{"nativeSrc":"6377:51:17","nodeType":"YulBlock","src":"6377:51:17","statements":[{"nativeSrc":"6391:27:17","nodeType":"YulAssignment","src":"6391:27:17","value":{"arguments":[{"name":"length","nativeSrc":"6405:6:17","nodeType":"YulIdentifier","src":"6405:6:17"},{"kind":"number","nativeSrc":"6413:4:17","nodeType":"YulLiteral","src":"6413:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"6401:3:17","nodeType":"YulIdentifier","src":"6401:3:17"},"nativeSrc":"6401:17:17","nodeType":"YulFunctionCall","src":"6401:17:17"},"variableNames":[{"name":"length","nativeSrc":"6391:6:17","nodeType":"YulIdentifier","src":"6391:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6357:18:17","nodeType":"YulIdentifier","src":"6357:18:17"}],"functionName":{"name":"iszero","nativeSrc":"6350:6:17","nodeType":"YulIdentifier","src":"6350:6:17"},"nativeSrc":"6350:26:17","nodeType":"YulFunctionCall","src":"6350:26:17"},"nativeSrc":"6347:81:17","nodeType":"YulIf","src":"6347:81:17"},{"body":{"nativeSrc":"6480:42:17","nodeType":"YulBlock","src":"6480:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"6494:16:17","nodeType":"YulIdentifier","src":"6494:16:17"},"nativeSrc":"6494:18:17","nodeType":"YulFunctionCall","src":"6494:18:17"},"nativeSrc":"6494:18:17","nodeType":"YulExpressionStatement","src":"6494:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6444:18:17","nodeType":"YulIdentifier","src":"6444:18:17"},{"arguments":[{"name":"length","nativeSrc":"6467:6:17","nodeType":"YulIdentifier","src":"6467:6:17"},{"kind":"number","nativeSrc":"6475:2:17","nodeType":"YulLiteral","src":"6475:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6464:2:17","nodeType":"YulIdentifier","src":"6464:2:17"},"nativeSrc":"6464:14:17","nodeType":"YulFunctionCall","src":"6464:14:17"}],"functionName":{"name":"eq","nativeSrc":"6441:2:17","nodeType":"YulIdentifier","src":"6441:2:17"},"nativeSrc":"6441:38:17","nodeType":"YulFunctionCall","src":"6441:38:17"},"nativeSrc":"6438:84:17","nodeType":"YulIf","src":"6438:84:17"}]},"name":"extract_byte_array_length","nativeSrc":"6208:320:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"6243:4:17","nodeType":"YulTypedName","src":"6243:4:17","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6252:6:17","nodeType":"YulTypedName","src":"6252:6:17","type":""}],"src":"6208:320:17"},{"body":{"nativeSrc":"6688:288:17","nodeType":"YulBlock","src":"6688:288:17","statements":[{"nativeSrc":"6698:26:17","nodeType":"YulAssignment","src":"6698:26:17","value":{"arguments":[{"name":"headStart","nativeSrc":"6710:9:17","nodeType":"YulIdentifier","src":"6710:9:17"},{"kind":"number","nativeSrc":"6721:2:17","nodeType":"YulLiteral","src":"6721:2:17","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6706:3:17","nodeType":"YulIdentifier","src":"6706:3:17"},"nativeSrc":"6706:18:17","nodeType":"YulFunctionCall","src":"6706:18:17"},"variableNames":[{"name":"tail","nativeSrc":"6698:4:17","nodeType":"YulIdentifier","src":"6698:4:17"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6778:6:17","nodeType":"YulIdentifier","src":"6778:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"6791:9:17","nodeType":"YulIdentifier","src":"6791:9:17"},{"kind":"number","nativeSrc":"6802:1:17","nodeType":"YulLiteral","src":"6802:1:17","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6787:3:17","nodeType":"YulIdentifier","src":"6787:3:17"},"nativeSrc":"6787:17:17","nodeType":"YulFunctionCall","src":"6787:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6734:43:17","nodeType":"YulIdentifier","src":"6734:43:17"},"nativeSrc":"6734:71:17","nodeType":"YulFunctionCall","src":"6734:71:17"},"nativeSrc":"6734:71:17","nodeType":"YulExpressionStatement","src":"6734:71:17"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"6859:6:17","nodeType":"YulIdentifier","src":"6859:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"6872:9:17","nodeType":"YulIdentifier","src":"6872:9:17"},{"kind":"number","nativeSrc":"6883:2:17","nodeType":"YulLiteral","src":"6883:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6868:3:17","nodeType":"YulIdentifier","src":"6868:3:17"},"nativeSrc":"6868:18:17","nodeType":"YulFunctionCall","src":"6868:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6815:43:17","nodeType":"YulIdentifier","src":"6815:43:17"},"nativeSrc":"6815:72:17","nodeType":"YulFunctionCall","src":"6815:72:17"},"nativeSrc":"6815:72:17","nodeType":"YulExpressionStatement","src":"6815:72:17"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"6941:6:17","nodeType":"YulIdentifier","src":"6941:6:17"},{"arguments":[{"name":"headStart","nativeSrc":"6954:9:17","nodeType":"YulIdentifier","src":"6954:9:17"},{"kind":"number","nativeSrc":"6965:2:17","nodeType":"YulLiteral","src":"6965:2:17","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6950:3:17","nodeType":"YulIdentifier","src":"6950:3:17"},"nativeSrc":"6950:18:17","nodeType":"YulFunctionCall","src":"6950:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6897:43:17","nodeType":"YulIdentifier","src":"6897:43:17"},"nativeSrc":"6897:72:17","nodeType":"YulFunctionCall","src":"6897:72:17"},"nativeSrc":"6897:72:17","nodeType":"YulExpressionStatement","src":"6897:72:17"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"6534:442:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6644:9:17","nodeType":"YulTypedName","src":"6644:9:17","type":""},{"name":"value2","nativeSrc":"6656:6:17","nodeType":"YulTypedName","src":"6656:6:17","type":""},{"name":"value1","nativeSrc":"6664:6:17","nodeType":"YulTypedName","src":"6664:6:17","type":""},{"name":"value0","nativeSrc":"6672:6:17","nodeType":"YulTypedName","src":"6672:6:17","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6683:4:17","nodeType":"YulTypedName","src":"6683:4:17","type":""}],"src":"6534:442:17"},{"body":{"nativeSrc":"7010:152:17","nodeType":"YulBlock","src":"7010:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7027:1:17","nodeType":"YulLiteral","src":"7027:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"7030:77:17","nodeType":"YulLiteral","src":"7030:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7020:6:17","nodeType":"YulIdentifier","src":"7020:6:17"},"nativeSrc":"7020:88:17","nodeType":"YulFunctionCall","src":"7020:88:17"},"nativeSrc":"7020:88:17","nodeType":"YulExpressionStatement","src":"7020:88:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7124:1:17","nodeType":"YulLiteral","src":"7124:1:17","type":"","value":"4"},{"kind":"number","nativeSrc":"7127:4:17","nodeType":"YulLiteral","src":"7127:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7117:6:17","nodeType":"YulIdentifier","src":"7117:6:17"},"nativeSrc":"7117:15:17","nodeType":"YulFunctionCall","src":"7117:15:17"},"nativeSrc":"7117:15:17","nodeType":"YulExpressionStatement","src":"7117:15:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7148:1:17","nodeType":"YulLiteral","src":"7148:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"7151:4:17","nodeType":"YulLiteral","src":"7151:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7141:6:17","nodeType":"YulIdentifier","src":"7141:6:17"},"nativeSrc":"7141:15:17","nodeType":"YulFunctionCall","src":"7141:15:17"},"nativeSrc":"7141:15:17","nodeType":"YulExpressionStatement","src":"7141:15:17"}]},"name":"panic_error_0x11","nativeSrc":"6982:180:17","nodeType":"YulFunctionDefinition","src":"6982:180:17"},{"body":{"nativeSrc":"7212:147:17","nodeType":"YulBlock","src":"7212:147:17","statements":[{"nativeSrc":"7222:25:17","nodeType":"YulAssignment","src":"7222:25:17","value":{"arguments":[{"name":"x","nativeSrc":"7245:1:17","nodeType":"YulIdentifier","src":"7245:1:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7227:17:17","nodeType":"YulIdentifier","src":"7227:17:17"},"nativeSrc":"7227:20:17","nodeType":"YulFunctionCall","src":"7227:20:17"},"variableNames":[{"name":"x","nativeSrc":"7222:1:17","nodeType":"YulIdentifier","src":"7222:1:17"}]},{"nativeSrc":"7256:25:17","nodeType":"YulAssignment","src":"7256:25:17","value":{"arguments":[{"name":"y","nativeSrc":"7279:1:17","nodeType":"YulIdentifier","src":"7279:1:17"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7261:17:17","nodeType":"YulIdentifier","src":"7261:17:17"},"nativeSrc":"7261:20:17","nodeType":"YulFunctionCall","src":"7261:20:17"},"variableNames":[{"name":"y","nativeSrc":"7256:1:17","nodeType":"YulIdentifier","src":"7256:1:17"}]},{"nativeSrc":"7290:16:17","nodeType":"YulAssignment","src":"7290:16:17","value":{"arguments":[{"name":"x","nativeSrc":"7301:1:17","nodeType":"YulIdentifier","src":"7301:1:17"},{"name":"y","nativeSrc":"7304:1:17","nodeType":"YulIdentifier","src":"7304:1:17"}],"functionName":{"name":"add","nativeSrc":"7297:3:17","nodeType":"YulIdentifier","src":"7297:3:17"},"nativeSrc":"7297:9:17","nodeType":"YulFunctionCall","src":"7297:9:17"},"variableNames":[{"name":"sum","nativeSrc":"7290:3:17","nodeType":"YulIdentifier","src":"7290:3:17"}]},{"body":{"nativeSrc":"7330:22:17","nodeType":"YulBlock","src":"7330:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7332:16:17","nodeType":"YulIdentifier","src":"7332:16:17"},"nativeSrc":"7332:18:17","nodeType":"YulFunctionCall","src":"7332:18:17"},"nativeSrc":"7332:18:17","nodeType":"YulExpressionStatement","src":"7332:18:17"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"7322:1:17","nodeType":"YulIdentifier","src":"7322:1:17"},{"name":"sum","nativeSrc":"7325:3:17","nodeType":"YulIdentifier","src":"7325:3:17"}],"functionName":{"name":"gt","nativeSrc":"7319:2:17","nodeType":"YulIdentifier","src":"7319:2:17"},"nativeSrc":"7319:10:17","nodeType":"YulFunctionCall","src":"7319:10:17"},"nativeSrc":"7316:36:17","nodeType":"YulIf","src":"7316:36:17"}]},"name":"checked_add_t_uint256","nativeSrc":"7168:191:17","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7199:1:17","nodeType":"YulTypedName","src":"7199:1:17","type":""},{"name":"y","nativeSrc":"7202:1:17","nodeType":"YulTypedName","src":"7202:1:17","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"7208:3:17","nodeType":"YulTypedName","src":"7208:3:17","type":""}],"src":"7168:191:17"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610202578063a9059cbb14610220578063dd62ed3e14610250578063f2fde38b14610280576100cf565b806370a08231146101aa578063715018a6146101da5780638da5cb5b146101e4576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806340c10f191461018e575b600080fd5b6100dc61029c565b6040516100e99190610def565b60405180910390f35b61010c60048036038101906101079190610eaa565b61032e565b6040516101199190610f05565b60405180910390f35b61012a610351565b6040516101379190610f2f565b60405180910390f35b61015a60048036038101906101559190610f4a565b61035b565b6040516101679190610f05565b60405180910390f35b61017861038a565b6040516101859190610fb9565b60405180910390f35b6101a860048036038101906101a39190610eaa565b610393565b005b6101c460048036038101906101bf9190610fd4565b6103a9565b6040516101d19190610f2f565b60405180910390f35b6101e26103f1565b005b6101ec610405565b6040516101f99190611010565b60405180910390f35b61020a61042f565b6040516102179190610def565b60405180910390f35b61023a60048036038101906102359190610eaa565b6104c1565b6040516102479190610f05565b60405180910390f35b61026a6004803603810190610265919061102b565b6104e4565b6040516102779190610f2f565b60405180910390f35b61029a60048036038101906102959190610fd4565b61056b565b005b6060600380546102ab9061109a565b80601f01602080910402602001604051908101604052809291908181526020018280546102d79061109a565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b6000806103396105f1565b90506103468185856105f9565b600191505092915050565b6000600254905090565b6000806103666105f1565b905061037385828561060b565b61037e8585856106a0565b60019150509392505050565b60006012905090565b61039b610794565b6103a5828261081b565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103f9610794565b610403600061089d565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461043e9061109a565b80601f016020809104026020016040519081016040528092919081815260200182805461046a9061109a565b80156104b75780601f1061048c576101008083540402835291602001916104b7565b820191906000526020600020905b81548152906001019060200180831161049a57829003601f168201915b5050505050905090565b6000806104cc6105f1565b90506104d98185856106a0565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610573610794565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105e55760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105dc9190611010565b60405180910390fd5b6105ee8161089d565b50565b600033905090565b6106068383836001610963565b505050565b600061061784846104e4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561069a578181101561068a578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610681939291906110cb565b60405180910390fd5b61069984848484036000610963565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107125760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107099190611010565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107845760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161077b9190611010565b60405180910390fd5b61078f838383610b3a565b505050565b61079c6105f1565b73ffffffffffffffffffffffffffffffffffffffff166107ba610405565b73ffffffffffffffffffffffffffffffffffffffff1614610819576107dd6105f1565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108109190611010565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361088d5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108849190611010565b60405180910390fd5b61089960008383610b3a565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109d55760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109cc9190611010565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a475760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a3e9190611010565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b34578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b2b9190610f2f565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b8c578060026000828254610b809190611131565b92505081905550610c5f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c18578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c0f939291906110cb565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ca85780600260008282540392505081905550610cf5565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d529190610f2f565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d99578082015181840152602081019050610d7e565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dc182610d5f565b610dcb8185610d6a565b9350610ddb818560208601610d7b565b610de481610da5565b840191505092915050565b60006020820190508181036000830152610e098184610db6565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4182610e16565b9050919050565b610e5181610e36565b8114610e5c57600080fd5b50565b600081359050610e6e81610e48565b92915050565b6000819050919050565b610e8781610e74565b8114610e9257600080fd5b50565b600081359050610ea481610e7e565b92915050565b60008060408385031215610ec157610ec0610e11565b5b6000610ecf85828601610e5f565b9250506020610ee085828601610e95565b9150509250929050565b60008115159050919050565b610eff81610eea565b82525050565b6000602082019050610f1a6000830184610ef6565b92915050565b610f2981610e74565b82525050565b6000602082019050610f446000830184610f20565b92915050565b600080600060608486031215610f6357610f62610e11565b5b6000610f7186828701610e5f565b9350506020610f8286828701610e5f565b9250506040610f9386828701610e95565b9150509250925092565b600060ff82169050919050565b610fb381610f9d565b82525050565b6000602082019050610fce6000830184610faa565b92915050565b600060208284031215610fea57610fe9610e11565b5b6000610ff884828501610e5f565b91505092915050565b61100a81610e36565b82525050565b60006020820190506110256000830184611001565b92915050565b6000806040838503121561104257611041610e11565b5b600061105085828601610e5f565b925050602061106185828601610e5f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110b257607f821691505b6020821081036110c5576110c461106b565b5b50919050565b60006060820190506110e06000830186611001565b6110ed6020830185610f20565b6110fa6040830184610f20565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061113c82610e74565b915061114783610e74565b925082820190508082111561115f5761115e611102565b5b9291505056fea26469706673582212200a9c4373b666acb86c0ad58d9933141a8f2799d6853b08eb57295396be03be7b64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x280 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E4 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x3F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x339 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x346 DUP2 DUP6 DUP6 PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x366 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x373 DUP6 DUP3 DUP6 PUSH2 0x60B JUMP JUMPDEST PUSH2 0x37E DUP6 DUP6 DUP6 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x794 JUMP JUMPDEST PUSH2 0x3A5 DUP3 DUP3 PUSH2 0x81B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x794 JUMP JUMPDEST PUSH2 0x403 PUSH1 0x0 PUSH2 0x89D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x43E SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4CC PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D9 DUP2 DUP6 DUP6 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x573 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5E5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5EE DUP2 PUSH2 0x89D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x606 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x963 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x617 DUP5 DUP5 PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x69A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x68A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x681 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x699 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x963 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x712 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x709 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x784 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78F DUP4 DUP4 DUP4 PUSH2 0xB3A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x79C PUSH2 0x5F1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7BA PUSH2 0x405 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x819 JUMPI PUSH2 0x7DD PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x810 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x88D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x884 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x899 PUSH1 0x0 DUP4 DUP4 PUSH2 0xB3A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CC SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA47 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB34 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB2B SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x1131 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC18 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA8 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCF5 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD52 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD99 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC1 DUP3 PUSH2 0xD5F JUMP JUMPDEST PUSH2 0xDCB DUP2 DUP6 PUSH2 0xD6A JUMP JUMPDEST SWAP4 POP PUSH2 0xDDB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xDE4 DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE09 DUP2 DUP5 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE41 DUP3 PUSH2 0xE16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE51 DUP2 PUSH2 0xE36 JUMP JUMPDEST DUP2 EQ PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE6E DUP2 PUSH2 0xE48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE87 DUP2 PUSH2 0xE74 JUMP JUMPDEST DUP2 EQ PUSH2 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEA4 DUP2 PUSH2 0xE7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH2 0xEC0 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xECF DUP6 DUP3 DUP7 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEE0 DUP6 DUP3 DUP7 ADD PUSH2 0xE95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEFF DUP2 PUSH2 0xEEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF29 DUP2 PUSH2 0xE74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF44 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF63 JUMPI PUSH2 0xF62 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF71 DUP7 DUP3 DUP8 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF82 DUP7 DUP3 DUP8 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF93 DUP7 DUP3 DUP8 ADD PUSH2 0xE95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB3 DUP2 PUSH2 0xF9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFCE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFEA JUMPI PUSH2 0xFE9 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF8 DUP5 DUP3 DUP6 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100A DUP2 PUSH2 0xE36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1025 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1001 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1042 JUMPI PUSH2 0x1041 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1050 DUP6 DUP3 DUP7 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1061 DUP6 DUP3 DUP7 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10B2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10C5 JUMPI PUSH2 0x10C4 PUSH2 0x106B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10E0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x10ED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x10FA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF20 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x113C DUP3 PUSH2 0xE74 JUMP JUMPDEST SWAP2 POP PUSH2 0x1147 DUP4 PUSH2 0xE74 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x115F JUMPI PUSH2 0x115E PUSH2 0x1102 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP SWAP13 NUMBER PUSH20 0xB666ACB86C0AD58D9933141A8F2799D6853B08EB JUMPI 0x29 MSTORE8 SWAP7 0xBE SUB 0xBE PUSH28 0x64736F6C634300081C00330000000000000000000000000000000000 ","sourceMap":"550:1102:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1486:164:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2985:116:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3296:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:5;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;1486:164:16:-;1531:13:0;:11;:13::i;:::-;1626:17:16::1;1632:2;1636:6;1626:5;:17::i;:::-;1486:164:::0;;:::o;2985:116:5:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1962:93:5:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3296:178::-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;3532:140::-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;8707:128:5:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7439:208:5:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9682:432:5:-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:17:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1432:117::-;1541:1;1538;1531:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:118::-;3535:24;3553:5;3535:24;:::i;:::-;3530:3;3523:37;3448:118;;:::o;3572:222::-;3665:4;3703:2;3692:9;3688:18;3680:26;;3716:71;3784:1;3773:9;3769:17;3760:6;3716:71;:::i;:::-;3572:222;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:329::-;4914:6;4963:2;4951:9;4942:7;4938:23;4934:32;4931:119;;;4969:79;;:::i;:::-;4931:119;5089:1;5114:53;5159:7;5150:6;5139:9;5135:22;5114:53;:::i;:::-;5104:63;;5060:117;4855:329;;;;:::o;5190:118::-;5277:24;5295:5;5277:24;:::i;:::-;5272:3;5265:37;5190:118;;:::o;5314:222::-;5407:4;5445:2;5434:9;5430:18;5422:26;;5458:71;5526:1;5515:9;5511:17;5502:6;5458:71;:::i;:::-;5314:222;;;;:::o;5542:474::-;5610:6;5618;5667:2;5655:9;5646:7;5642:23;5638:32;5635:119;;;5673:79;;:::i;:::-;5635:119;5793:1;5818:53;5863:7;5854:6;5843:9;5839:22;5818:53;:::i;:::-;5808:63;;5764:117;5920:2;5946:53;5991:7;5982:6;5971:9;5967:22;5946:53;:::i;:::-;5936:63;;5891:118;5542:474;;;;;:::o;6022:180::-;6070:77;6067:1;6060:88;6167:4;6164:1;6157:15;6191:4;6188:1;6181:15;6208:320;6252:6;6289:1;6283:4;6279:12;6269:22;;6336:1;6330:4;6326:12;6357:18;6347:81;;6413:4;6405:6;6401:17;6391:27;;6347:81;6475:2;6467:6;6464:14;6444:18;6441:38;6438:84;;6494:18;;:::i;:::-;6438:84;6259:269;6208:320;;;:::o;6534:442::-;6683:4;6721:2;6710:9;6706:18;6698:26;;6734:71;6802:1;6791:9;6787:17;6778:6;6734:71;:::i;:::-;6815:72;6883:2;6872:9;6868:18;6859:6;6815:72;:::i;:::-;6897;6965:2;6954:9;6950:18;6941:6;6897:72;:::i;:::-;6534:442;;;;;;:::o;6982:180::-;7030:77;7027:1;7020:88;7127:4;7124:1;7117:15;7151:4;7148:1;7141:15;7168:191;7208:3;7227:20;7245:1;7227:20;:::i;:::-;7222:25;;7261:20;7279:1;7261:20;:::i;:::-;7256:25;;7304:1;7301;7297:9;7290:16;;7325:3;7322:1;7319:10;7316:36;;;7332:18;;:::i;:::-;7316:36;7168:191;;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of a custom ERC20 token with minting functionality This contract is Ownable, meaning only the owner has the right to mint new tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor that sets up the initial token distribution and contract ownership\",\"params\":{\"initialOwner\":\"The address that will be set as the owner of the contract\",\"recipient\":\"The address that will receive the initial minted tokens\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"mint(address,uint256)\":{\"details\":\"Mint new tokens to a specified address. Only callable by the owner of the contract.\",\"params\":{\"amount\":\"The amount of tokens to mint\",\"to\":\"The address that will receive the minted tokens\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"TokenB\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenB.sol\":\"TokenB\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/TokenB.sol\":{\"keccak256\":\"0xeaaf079b0f566242b19c325b0b9330e62bb84b3f0b2812edb7ef5d11cf0c9972\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84f1a1385ab47664cb7eb0257eebaaf6378832c28898e30bf54980c1d564a3b1\",\"dweb:/ipfs/QmZFg7xWKBvPrB1csYC2VnZ8waWmPmTFG2RhCVnNne9xf1\"]}},\"version\":1}"}}}}}